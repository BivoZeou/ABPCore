

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "src\ABPCore.EntityFrameworkCore\App.config"
//     Connection String Name: "EECPlusConnectionString"
//     Connection String:      "Data Source=192.168.20.21;Initial Catalog=EECPlus;Persist Security Info=True;User ID=sa;password=**zapped**;;Connect Timeout=300"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Standard Edition (64-bit)
// Database Engine Edition: Standard



namespace ABPCore
{
    using System.Data.Common;
    using Abp.Domain.Entities;
	using Abp.EntityFrameworkCore;
	using Microsoft.EntityFrameworkCore;


    #region Database context


    public partial class EPlusDBConext : AbpDbContext
    {
        public virtual DbSet<PH_BaseSetting> PH_BaseSettings { get; set; }
        public virtual DbSet<PH_BasicEnum> PH_BasicEnums { get; set; }
        public virtual DbSet<PH_CompletedPhoto> PH_CompletedPhotoes { get; set; }
        public virtual DbSet<PH_EcomSampleItem> PH_EcomSampleItems { get; set; }
        public virtual DbSet<PH_InternalDeadlineDate> PH_InternalDeadlineDates { get; set; }
        public virtual DbSet<PH_LeadTime> PH_LeadTimes { get; set; }
        public virtual DbSet<PH_LifeStyle> PH_LifeStyles { get; set; }
        public virtual DbSet<PH_OrderHeaderFile> PH_OrderHeaderFiles { get; set; }
        public virtual DbSet<PH_PhotoFile> PH_PhotoFiles { get; set; }
        public virtual DbSet<PH_PhotoNote> PH_PhotoNotes { get; set; }
        public virtual DbSet<PH_PhotoOrderHeader> PH_PhotoOrderHeaders { get; set; }
        public virtual DbSet<PH_PhotoOrderItem> PH_PhotoOrderItems { get; set; }
        public virtual DbSet<PH_PhotoOrderItemFile> PH_PhotoOrderItemFiles { get; set; }
        public virtual DbSet<PH_PhotoOrderItemNote> PH_PhotoOrderItemNotes { get; set; }
        public virtual DbSet<PH_PhotoOrderItemProp> PH_PhotoOrderItemProps { get; set; }
        public virtual DbSet<PH_PhotoOrderNote> PH_PhotoOrderNotes { get; set; }
        public virtual DbSet<PH_PhotoOrderPhoto> PH_PhotoOrderPhotoes { get; set; }
        public virtual DbSet<PH_PhotoOrderPhotoType> PH_PhotoOrderPhotoTypes { get; set; }
        public virtual DbSet<PH_PhotoType> PH_PhotoTypes { get; set; }
        public virtual DbSet<PH_PropCategory> PH_PropCategories { get; set; }
        public virtual DbSet<PH_PropLibrary> PH_PropLibraries { get; set; }
        public virtual DbSet<PH_PropSubCategory> PH_PropSubCategories { get; set; }
        public virtual DbSet<PH_UserPrivilegeMaincetance> PH_UserPrivilegeMaincetances { get; set; }
        public virtual DbSet<PH_UserPrivilegeMaincetanceBrand> PH_UserPrivilegeMaincetanceBrands { get; set; }
        public virtual DbSet<PH_UserPrivilegeMaincetanceDivision> PH_UserPrivilegeMaincetanceDivisions { get; set; }
        public virtual DbSet<PH_UserPrivilegeMaincetancePhotoType> PH_UserPrivilegeMaincetancePhotoTypes { get; set; }
        public virtual DbSet<PH_UserPrivilegeMaincetanceProductCategory> PH_UserPrivilegeMaincetanceProductCategories { get; set; }
        public virtual DbSet<PHV_EComItemMasterList> PHV_EComItemMasterLists { get; set; }
        public virtual DbSet<PHV_EcomPhotoApprovalList> PHV_EcomPhotoApprovalLists { get; set; }
        public virtual DbSet<PHV_ECOMPhotoItemSelect> PHV_ECOMPhotoItemSelects { get; set; }
        public virtual DbSet<PHV_ECOMPhotoMaster> PHV_ECOMPhotoMasters { get; set; }
        public virtual DbSet<PHV_ECOMPhotoMasterRelatedItem> PHV_ECOMPhotoMasterRelatedItems { get; set; }
        public virtual DbSet<PHV_EcomSampleLibrary> PHV_EcomSampleLibraries { get; set; }
        public virtual DbSet<PHV_ECOMStackPhoto> PHV_ECOMStackPhotoes { get; set; }
        public virtual DbSet<PHV_MasterItemPhoto> PHV_MasterItemPhotoes { get; set; }
        public virtual DbSet<PHV_OrderHeader> PHV_OrderHeaders { get; set; }
        public virtual DbSet<PHV_PendingPhotoReport> PHV_PendingPhotoReports { get; set; }
        public virtual DbSet<PHV_PhotoOrderItem> PHV_PhotoOrderItems { get; set; }
        public virtual DbSet<PHV_PhotoOrderItemTypeQty> PHV_PhotoOrderItemTypeQties { get; set; }
        public virtual DbSet<PHV_PhotoOrderPhotoType> PHV_PhotoOrderPhotoTypes { get; set; }
        public virtual DbSet<PHV_PhotoStatusReport> PHV_PhotoStatusReports { get; set; }
        public virtual DbSet<PHV_UserPrivilegeMaincetance> PHV_UserPrivilegeMaincetances { get; set; }

		public EPlusDBConext(DbContextOptions<EPlusDBConext> Options)
			: base(Options)
        {
        }

        //public override void Initialize()
        //{
        //    this.SetFilterGlobalParameterValue("SoftDelete", "IsDeleted", true);
        //    this.SetFilterScopedParameterValue("SoftDelete", "IsDeleted", true);
    
        //    this.SetFilterGlobalParameterValue("MustHaveTenant", "tenantId", AbpSession.TenantId ?? 0);
        //    this.SetFilterScopedParameterValue("MustHaveTenant", "tenantId", AbpSession.TenantId ?? 0);
    
        //    this.SetFilterGlobalParameterValue("MayHaveTenant", "tenantId", this.AbpSession.TenantId ?? 0);
        //    this.SetFilterScopedParameterValue("MayHaveTenant", "tenantId", this.AbpSession.TenantId ?? 0);
    
        //    base.Initialize();
        //}


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PH_BaseSetting>(entity =>
            {
				entity.ToTable("PH_BaseSetting");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Key).HasColumnName(@"Key").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.Value).HasColumnName(@"Value").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_BasicEnum>(entity =>
            {
				entity.ToTable("PH_BasicEnum");
				entity.HasKey(x => new { x.EnumValue, x.EnumType });
				entity.Property(e => e.EnumType).HasColumnName(@"EnumType").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.EnumValue).HasColumnName(@"EnumValue").HasColumnType("int").IsRequired();
				entity.Property(e => e.EnumName).HasColumnName(@"EnumName").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.EnumDescription).HasColumnName(@"EnumDescription").HasColumnType("nvarchar(128)").IsRequired().HasMaxLength(128);
				});

            modelBuilder.Entity<PH_CompletedPhoto>(entity =>
            {
				entity.ToTable("PH_CompletedPhotos");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderPhotoType_ID).HasColumnName(@"PhotoOrderPhotoType_ID").HasColumnType("int");
				entity.Property(e => e.PhotoPath).HasColumnName(@"PhotoPath").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.HomePicture).HasColumnName(@"HomePicture").HasColumnType("bit");
				entity.Property(e => e.PhotoScores).HasColumnName(@"PhotoScores").HasColumnType("int");
				entity.Property(e => e.ForOlliix).HasColumnName(@"ForOlliix").HasColumnType("bit");
				entity.Property(e => e.ForDL).HasColumnName(@"ForDL").HasColumnType("bit");
				entity.Property(e => e.Comment).HasColumnName(@"Comment").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.PhotoName).HasColumnName(@"PhotoName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ThumbnailPath).HasColumnName(@"ThumbnailPath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.PhotoID).HasColumnName(@"PhotoID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PhotoVersion).HasColumnName(@"PhotoVersion").HasColumnType("int");
				entity.Property(e => e.PhotoIndex).HasColumnName(@"PhotoIndex").HasColumnType("int");
				entity.Property(e => e.ChinaStudioStaff).HasColumnName(@"ChinaStudioStaff").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PhotoSize).HasColumnName(@"PhotoSize").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.ThumbnailPathForEEC).HasColumnName(@"ThumbnailPathForEEC").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.SequenceNo).HasColumnName(@"SequenceNo").HasColumnType("int");
				entity.Property(e => e.HashCode).HasColumnName(@"HashCode").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.PhotoScoresForVisual).HasColumnName(@"PhotoScoresForVisual").HasColumnType("int");
				entity.Property(e => e.PhotoStatusForVisual).HasColumnName(@"PhotoStatusForVisual").HasColumnType("int");
				entity.Property(e => e.StackPhoto).HasColumnName(@"StackPhoto").HasColumnType("bit");
				});

            modelBuilder.Entity<PH_EcomSampleItem>(entity =>
            {
				entity.ToTable("PH_EcomSampleItem");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				});

            modelBuilder.Entity<PH_InternalDeadlineDate>(entity =>
            {
				entity.ToTable("PH_InternalDeadlineDate");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(8)").IsRequired().HasMaxLength(8);
				entity.Property(e => e.ProductCategory).HasColumnName(@"ProductCategory").HasColumnType("nvarchar(max)").IsRequired();
				entity.Property(e => e.ReduceDays).HasColumnName(@"ReduceDays").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_LeadTime>(entity =>
            {
				entity.ToTable("PH_LeadTime");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired();
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(8)").IsRequired().HasMaxLength(8);
				entity.Property(e => e.WorkingDays).HasColumnName(@"WorkingDays").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_LifeStyle>(entity =>
            {
				entity.ToTable("PH_LifeStyle");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				});

            modelBuilder.Entity<PH_OrderHeaderFile>(entity =>
            {
				entity.ToTable("PH_OrderHeaderFile");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrderID).HasColumnName(@"PhotoOrderID").HasColumnType("int").IsRequired();
				entity.Property(e => e.FileName).HasColumnName(@"FileName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.FilePath).HasColumnName(@"FilePath").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PhotoFile>(entity =>
            {
				entity.ToTable("PH_PhotoFile");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PH_PhotoOrderPhotos_ID).HasColumnName(@"PH_PhotoOrderPhotos_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.FileName).HasColumnName(@"FileName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.FilePath).HasColumnName(@"FilePath").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PhotoNote>(entity =>
            {
				entity.ToTable("PH_PhotoNotes");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PH_PhotoOrderPhotos_ID).HasColumnName(@"PH_PhotoOrderPhotos_ID").HasColumnType("int");
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.LastUpdate).HasColumnName(@"LastUpdate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PhotoOrderHeader>(entity =>
            {
				entity.ToTable("PH_PhotoOrderHeader");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.OrderNo).HasColumnName(@"OrderNo").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Merchant).HasColumnName(@"Merchant").HasColumnType("int");
				entity.Property(e => e.PM).HasColumnName(@"PM").HasColumnType("int");
				entity.Property(e => e.PA).HasColumnName(@"PA").HasColumnType("int");
				entity.Property(e => e.PONo).HasColumnName(@"PONo").HasColumnType("nvarchar(25)").HasMaxLength(25);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.ProgramName).HasColumnName(@"ProgramName").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.CompleteDate).HasColumnName(@"CompleteDate").HasColumnType("datetime");
				entity.Property(e => e.ReminderEmailSended).HasColumnName(@"ReminderEmailSended").HasColumnType("int");
				entity.Property(e => e.OriginalTiffFilePath).HasColumnName(@"OriginalTiffFilePath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.OrderReviewDate).HasColumnName(@"OrderReviewDate").HasColumnType("datetime");
				entity.Property(e => e.Buy).HasColumnName(@"Buy").HasColumnType("int");
				entity.Property(e => e.PendingApprovalDate).HasColumnName(@"PendingApprovalDate").HasColumnType("datetime");
				entity.Property(e => e.VisualMerchant).HasColumnName(@"VisualMerchant").HasColumnType("int");
				});

            modelBuilder.Entity<PH_PhotoOrderItem>(entity =>
            {
				entity.ToTable("PH_PhotoOrderItem");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.GroupID).HasColumnName(@"GroupID").HasColumnType("int");
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				entity.Property(e => e.LifeStyle_ID).HasColumnName(@"LifeStyle_ID").HasColumnType("int");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.ScheduleDate).HasColumnName(@"ScheduleDate").HasColumnType("datetime");
				entity.Property(e => e.EstSampleReadyDate).HasColumnName(@"EstSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ActSampleReadyDate).HasColumnName(@"ActSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ReqPhotoReadyDate).HasColumnName(@"ReqPhotoReadyDate").HasColumnType("datetime");
				entity.Property(e => e.InternalDeadlineDate).HasColumnName(@"InternalDeadlineDate").HasColumnType("datetime");
				entity.Property(e => e.POItemStatus).HasColumnName(@"POItemStatus").HasColumnType("int");
				entity.Property(e => e.HaveEvaluate).HasColumnName(@"HaveEvaluate").HasColumnType("int");
				entity.Property(e => e.HaveEvaluateForVisual).HasColumnName(@"HaveEvaluateForVisual").HasColumnType("int");
				entity.Property(e => e.EvaluateDate).HasColumnName(@"EvaluateDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluateDateForVisual).HasColumnName(@"EvaluateDateForVisual").HasColumnType("datetime");
				entity.Property(e => e.FeedToEcom).HasColumnName(@"FeedToEcom").HasColumnType("bit");
				entity.Property(e => e.FeedDate).HasColumnName(@"FeedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PH_PhotoOrderItemFile>(entity =>
            {
				entity.ToTable("PH_PhotoOrderItemFile");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrderItemID).HasColumnName(@"PhotoOrderItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.FileName).HasColumnName(@"FileName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.FilePath).HasColumnName(@"FilePath").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.PhotoOrderGroupID).HasColumnName(@"PhotoOrderGroupID").HasColumnType("int");
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.FollowProps).HasColumnName(@"FollowProps").HasColumnType("bit");
				entity.Property(e => e.FollowLookFeel).HasColumnName(@"FollowLookFeel").HasColumnType("bit");
				entity.Property(e => e.FollowSet).HasColumnName(@"FollowSet").HasColumnType("bit");
				entity.Property(e => e.PSNewProduct).HasColumnName(@"PSNewProduct").HasColumnType("bit");
				entity.Property(e => e.PSNewColorway).HasColumnName(@"PSNewColorway").HasColumnType("bit");
				});

            modelBuilder.Entity<PH_PhotoOrderItemNote>(entity =>
            {
				entity.ToTable("PH_PhotoOrderItemNotes");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItemID).HasColumnName(@"PhotoOrderItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrderGroupID).HasColumnName(@"PhotoOrderGroupID").HasColumnType("int");
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.LastUpdate).HasColumnName(@"LastUpdate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PhotoOrderItemProp>(entity =>
            {
				entity.ToTable("PH_PhotoOrderItemProp");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrderGroupID).HasColumnName(@"PhotoOrderGroupID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItemID).HasColumnName(@"PhotoOrderItemID").HasColumnType("int");
				entity.Property(e => e.RelatedType).HasColumnName(@"RelatedType").HasColumnType("int").IsRequired();
				entity.Property(e => e.RelatedID).HasColumnName(@"RelatedID").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PhotoOrderNote>(entity =>
            {
				entity.ToTable("PH_PhotoOrderNotes");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(512)").IsRequired().HasMaxLength(512);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.LastUpdate).HasColumnName(@"LastUpdate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PhotoOrderPhoto>(entity =>
            {
				entity.ToTable("PH_PhotoOrderPhotos");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderGroup_ID).HasColumnName(@"PhotoOrderGroup_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderPhotoType_ID).HasColumnName(@"PhotoOrderPhotoType_ID").HasColumnType("int");
				entity.Property(e => e.PhotoPath).HasColumnName(@"PhotoPath").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.HomePicture).HasColumnName(@"HomePicture").HasColumnType("bit");
				entity.Property(e => e.PhotoScores).HasColumnName(@"PhotoScores").HasColumnType("int");
				entity.Property(e => e.ForOlliix).HasColumnName(@"ForOlliix").HasColumnType("bit");
				entity.Property(e => e.ForDL).HasColumnName(@"ForDL").HasColumnType("bit");
				entity.Property(e => e.Comment).HasColumnName(@"Comment").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.PhotoName).HasColumnName(@"PhotoName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ThumbnailPath).HasColumnName(@"ThumbnailPath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.PhotoID).HasColumnName(@"PhotoID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PhotoVersion).HasColumnName(@"PhotoVersion").HasColumnType("int");
				entity.Property(e => e.PhotoIndex).HasColumnName(@"PhotoIndex").HasColumnType("int");
				entity.Property(e => e.ChinaStudioStaff).HasColumnName(@"ChinaStudioStaff").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.PhotoSize).HasColumnName(@"PhotoSize").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.ThumbnailPathForEEC).HasColumnName(@"ThumbnailPathForEEC").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.SequenceNo).HasColumnName(@"SequenceNo").HasColumnType("int");
				entity.Property(e => e.PhotoStatusForVisual).HasColumnName(@"PhotoStatusForVisual").HasColumnType("int");
				entity.Property(e => e.PhotoScoresForVisual).HasColumnName(@"PhotoScoresForVisual").HasColumnType("int");
				entity.Property(e => e.StackPhoto).HasColumnName(@"StackPhoto").HasColumnType("bit");
				entity.Property(e => e.RemindEmailSended).HasColumnName(@"RemindEmailSended").HasColumnType("int");
				entity.Property(e => e.PhotoStatus).HasColumnName(@"PhotoStatus").HasColumnType("int");
				entity.Property(e => e.HaveEvaluate).HasColumnName(@"HaveEvaluate").HasColumnType("int");
				entity.Property(e => e.HaveEvaluateForVisual).HasColumnName(@"HaveEvaluateForVisual").HasColumnType("int");
				entity.Property(e => e.EvaluateDate).HasColumnName(@"EvaluateDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluateDateForVisual).HasColumnName(@"EvaluateDateForVisual").HasColumnType("datetime");
				entity.Property(e => e.RemindEmailSendedForVisual).HasColumnName(@"RemindEmailSendedForVisual").HasColumnType("int");
				});

            modelBuilder.Entity<PH_PhotoOrderPhotoType>(entity =>
            {
				entity.ToTable("PH_PhotoOrderPhotoType");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderGroup_ID).HasColumnName(@"PhotoOrderGroup_ID").HasColumnType("int");
				entity.Property(e => e.PhotoType_ID).HasColumnName(@"PhotoType_ID").HasColumnType("int");
				entity.Property(e => e.PhotoUnitPrice).HasColumnName(@"PhotoUnitPrice").HasColumnType("decimal");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PhotoQty).HasColumnName(@"PhotoQty").HasColumnType("int");
				entity.Property(e => e.EIPID).HasColumnName(@"EIPID").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<PH_PhotoType>(entity =>
            {
				entity.ToTable("PH_PhotoType");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PhotoType).HasColumnName(@"PhotoType").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.PhotoTypeCode).HasColumnName(@"PhotoTypeCode").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.PhotoUnitPrice).HasColumnName(@"PhotoUnitPrice").HasColumnType("decimal");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.EIPID).HasColumnName(@"EIPID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ChineseName).HasColumnName(@"ChineseName").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PropCategory>(entity =>
            {
				entity.ToTable("PH_PropCategory");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.AlterName).HasColumnName(@"AlterName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PropLibrary>(entity =>
            {
				entity.ToTable("PH_PropLibrary");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PropCategory).HasColumnName(@"PropCategory").HasColumnType("int").IsRequired();
				entity.Property(e => e.PropSubCategory).HasColumnName(@"PropSubCategory").HasColumnType("int").IsRequired();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.PhotoName).HasColumnName(@"PhotoName").HasColumnType("nvarchar(128)").IsRequired().HasMaxLength(128);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoPath).HasColumnName(@"PhotoPath").HasColumnType("nvarchar(256)").IsRequired().HasMaxLength(256);
				entity.Property(e => e.PhotoThumbnailPath).HasColumnName(@"PhotoThumbnailPath").HasColumnType("nvarchar(256)").IsRequired().HasMaxLength(256);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				});

            modelBuilder.Entity<PH_PropSubCategory>(entity =>
            {
				entity.ToTable("PH_PropSubCategory");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PropCategory).HasColumnName(@"PropCategory").HasColumnType("int").IsRequired();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.AlterName).HasColumnName(@"AlterName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				});

            modelBuilder.Entity<PH_UserPrivilegeMaincetance>(entity =>
            {
				entity.ToTable("PH_UserPrivilegeMaincetance");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.T1User).HasColumnName(@"T1User").HasColumnType("int");
				entity.Property(e => e.T2User).HasColumnName(@"T2User").HasColumnType("int");
				entity.Property(e => e.T3User).HasColumnName(@"T3User").HasColumnType("int");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("date");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.RoleType).HasColumnName(@"RoleType").HasColumnType("int");
				});

            modelBuilder.Entity<PH_UserPrivilegeMaincetanceBrand>(entity =>
            {
				entity.ToTable("PH_UserPrivilegeMaincetanceBrand");
				entity.HasKey(x => new { x.UserPrivilegeMaincetance_ID, x.BrandID });
				entity.Property(e => e.UserPrivilegeMaincetance_ID).HasColumnName(@"UserPrivilegeMaincetance_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.BrandID).HasColumnName(@"BrandID").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<PH_UserPrivilegeMaincetanceDivision>(entity =>
            {
				entity.ToTable("PH_UserPrivilegeMaincetanceDivision");
				entity.HasKey(x => new { x.UserPrivilegeMaincetance_ID, x.Division });
				entity.Property(e => e.UserPrivilegeMaincetance_ID).HasColumnName(@"UserPrivilegeMaincetance_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(8)").IsRequired().HasMaxLength(8);
				});

            modelBuilder.Entity<PH_UserPrivilegeMaincetancePhotoType>(entity =>
            {
				entity.ToTable("PH_UserPrivilegeMaincetancePhotoType");
				entity.HasKey(x => new { x.UserPrivilegeMaincetance_ID, x.PhotoTypeID });
				entity.Property(e => e.UserPrivilegeMaincetance_ID).HasColumnName(@"UserPrivilegeMaincetance_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoTypeID).HasColumnName(@"PhotoTypeID").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<PH_UserPrivilegeMaincetanceProductCategory>(entity =>
            {
				entity.ToTable("PH_UserPrivilegeMaincetanceProductCategory");
				entity.HasKey(x => new { x.UserPrivilegeMaincetance_ID, x.ProdCatCode });
				entity.Property(e => e.UserPrivilegeMaincetance_ID).HasColumnName(@"UserPrivilegeMaincetance_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ProdCatCode).HasColumnName(@"ProdCatCode").HasColumnType("nvarchar(3)").IsRequired().HasMaxLength(3);
				});

            modelBuilder.Entity<PHV_EComItemMasterList>(entity =>
            {
				entity.ToTable("PHV_EComItemMasterList");
				entity.HasKey(x => new { x.Item_ID, x.AdhereMAP, x.ExistingPattern, x.ExistPattern, x.AdhereToMAP, x.EcomCategoryStatusName, x.ItemID, x.ItemNo, x.UPC, x.LicensedProduct, x.CreationDate, x.@new });
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Exclusive).HasColumnName(@"Exclusive").HasColumnType("int");
				entity.Property(e => e.ExclusiveCode).HasColumnName(@"ExclusiveCode").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.UnitCostDropShip).HasColumnName(@"UnitCostDropShip").HasColumnType("decimal");
				entity.Property(e => e.OlliixCost).HasColumnName(@"OlliixCost").HasColumnType("decimal");
				entity.Property(e => e.SuggestedRetail).HasColumnName(@"SuggestedRetail").HasColumnType("decimal");
				entity.Property(e => e.MSRP).HasColumnName(@"MSRP").HasColumnType("decimal");
				entity.Property(e => e.PatternType).HasColumnName(@"PatternType").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.ThreadCount).HasColumnName(@"ThreadCount").HasColumnType("int");
				entity.Property(e => e.GSM).HasColumnName(@"GSM").HasColumnType("int");
				entity.Property(e => e.BriefDescription).HasColumnName(@"BriefDescription").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.RetailBrandName).HasColumnName(@"RetailBrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.RetailSizeName).HasColumnName(@"RetailSizeName").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.PrimaryColor).HasColumnName(@"PrimaryColor").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.SecondaryColor).HasColumnName(@"SecondaryColor").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.AdhereMAP).HasColumnName(@"AdhereMAP").HasColumnType("varchar(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.BBBPlaced).HasColumnName(@"BBBPlaced").HasColumnType("bit");
				entity.Property(e => e.MaterialAttrName).HasColumnName(@"MaterialAttrName").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.SizeDescription).HasColumnName(@"SizeDescription").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.SetIncludes).HasColumnName(@"SetIncludes").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.SizeDetail).HasColumnName(@"SizeDetail").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.CareInstructions).HasColumnName(@"CareInstructions").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.MaterialDetails).HasColumnName(@"MaterialDetails").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.LifeStyles).HasColumnName(@"LifeStyles").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.RoomTypes).HasColumnName(@"RoomTypes").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.RetailDivisions).HasColumnName(@"RetailDivisions").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.OtherDetails).HasColumnName(@"OtherDetails").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.ProductWeight).HasColumnName(@"ProductWeight").HasColumnType("decimal");
				entity.Property(e => e.ProductLength).HasColumnName(@"ProductLength").HasColumnType("decimal");
				entity.Property(e => e.ProductWidth).HasColumnName(@"ProductWidth").HasColumnType("decimal");
				entity.Property(e => e.ProductHeight).HasColumnName(@"ProductHeight").HasColumnType("decimal");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.InvAvailableDate).HasColumnName(@"InvAvailableDate").HasColumnType("datetime");
				entity.Property(e => e.ECOMPhotoCheck).HasColumnName(@"ECOMPhotoCheck").HasColumnType("bit");
				entity.Property(e => e.ProductFamily).HasColumnName(@"ProductFamily").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.FamilyID).HasColumnName(@"FamilyID").HasColumnType("int");
				entity.Property(e => e.Collection).HasColumnName(@"Collection").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.RetailProductCategories).HasColumnName(@"RetailProductCategories").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.RetailProductCategory_IDs).HasColumnName(@"RetailProductCategory_IDs").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.PicturePath).HasColumnName(@"PicturePath").HasColumnType("nvarchar(400)").HasMaxLength(400);
				entity.Property(e => e.PicturePath_144).HasColumnName(@"PicturePath_144").HasColumnType("nvarchar(400)").HasMaxLength(400);
				entity.Property(e => e.T1_Pattern).HasColumnName(@"T1_Pattern").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.T2_Pattern).HasColumnName(@"T2_Pattern").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.T3_Pattern).HasColumnName(@"T3_Pattern").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.T1_CopyDesc).HasColumnName(@"T1_CopyDesc").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.T2_CopyDesc).HasColumnName(@"T2_CopyDesc").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.T3_CopyDesc).HasColumnName(@"T3_CopyDesc").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.ExistingPattern).HasColumnName(@"ExistingPattern").HasColumnType("bit").IsRequired();
				entity.Property(e => e.ExistPattern).HasColumnName(@"ExistPattern").HasColumnType("varchar(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.BuyerID).HasColumnName(@"BuyerID").HasColumnType("int");
				entity.Property(e => e.BuyerName).HasColumnName(@"BuyerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.IsUseECOMPhoto).HasColumnName(@"IsUseECOMPhoto").HasColumnType("bit");
				entity.Property(e => e.Seasonal).HasColumnName(@"Seasonal").HasColumnType("int");
				entity.Property(e => e.EcomCategory_ID).HasColumnName(@"EcomCategory_ID").HasColumnType("int");
				entity.Property(e => e.EcomCategory).HasColumnName(@"EcomCategory").HasColumnType("nvarchar(264)").HasMaxLength(264);
				entity.Property(e => e.CollectionNo).HasColumnName(@"CollectionNo").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.AdhereToMAP).HasColumnName(@"AdhereToMAP").HasColumnType("varchar(4)").IsRequired().IsUnicode(false).HasMaxLength(4);
				entity.Property(e => e.EcomCategoryStatus).HasColumnName(@"EcomCategoryStatus").HasColumnType("int");
				entity.Property(e => e.EcomCategoryStatusName).HasColumnName(@"EcomCategoryStatusName").HasColumnType("varchar(13)").IsRequired().IsUnicode(false).HasMaxLength(13);
				entity.Property(e => e.VideoURL).HasColumnName(@"VideoURL").HasColumnType("nvarchar(max)");
				entity.Property(e => e.CollectionName).HasColumnName(@"CollectionName").HasColumnType("nvarchar(max)");
				entity.Property(e => e.ItemCreateDate).HasColumnName(@"ItemCreateDate").HasColumnType("datetime");
				entity.Property(e => e.ItemReviewDate).HasColumnName(@"ItemReviewDate").HasColumnType("datetime");
				entity.Property(e => e.ItemCompleteDate).HasColumnName(@"ItemCompleteDate").HasColumnType("datetime");
				entity.Property(e => e.ISDLPhoto).HasColumnName(@"ISDLPhoto").HasColumnType("int");
				entity.Property(e => e.ClassificationCode).HasColumnName(@"ClassificationCode").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(16)").IsRequired().HasMaxLength(16);
				entity.Property(e => e.ItemDescription).HasColumnName(@"ItemDescription").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.Fabrication).HasColumnName(@"Fabrication").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.CommCode).HasColumnName(@"CommCode").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.ProductCategory).HasColumnName(@"ProductCategory").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.LicensorCode).HasColumnName(@"LicensorCode").HasColumnType("nchar(2)").HasMaxLength(2);
				entity.Property(e => e.LicensorName).HasColumnName(@"LicensorName").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.LicensedProduct).HasColumnName(@"LicensedProduct").HasColumnType("varchar(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Brand_ID).HasColumnName(@"Brand_ID").HasColumnType("int");
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.SellingQtyPerPack).HasColumnName(@"SellingQtyPerPack").HasColumnType("decimal");
				entity.Property(e => e.SellingWeight).HasColumnName(@"SellingWeight").HasColumnType("numeric");
				entity.Property(e => e.SellingWidthIn).HasColumnName(@"SellingWidthIn").HasColumnType("decimal");
				entity.Property(e => e.SellingLengthIn).HasColumnName(@"SellingLengthIn").HasColumnType("decimal");
				entity.Property(e => e.SellingHeightIn).HasColumnName(@"SellingHeightIn").HasColumnType("decimal");
				entity.Property(e => e.ItemStatus).HasColumnName(@"ItemStatus").HasColumnType("int");
				entity.Property(e => e.ItemStatusDate).HasColumnName(@"ItemStatusDate").HasColumnType("datetime");
				entity.Property(e => e.DefaultLoc).HasColumnName(@"DefaultLoc").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.PrimaryLoc).HasColumnName(@"PrimaryLoc").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.CountryName).HasColumnName(@"CountryName").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.MadeIn).HasColumnName(@"MadeIn").HasColumnType("nvarchar(108)").HasMaxLength(108);
				entity.Property(e => e.CountryCode).HasColumnName(@"CountryCode").HasColumnType("nchar(2)").HasMaxLength(2);
				entity.Property(e => e.Price).HasColumnName(@"Price").HasColumnType("decimal");
				entity.Property(e => e.Cost).HasColumnName(@"Cost").HasColumnType("decimal");
				entity.Property(e => e.CreationDate).HasColumnName(@"CreationDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.LastRevisedDate).HasColumnName(@"LastRevisedDate").HasColumnType("datetime");
				entity.Property(e => e.LastRevisedUserName).HasColumnName(@"LastRevisedUserName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PackCode).HasColumnName(@"PackCode").HasColumnType("int");
				entity.Property(e => e.tblItemMasterWeight).HasColumnName(@"tblItemMasterWeight").HasColumnType("decimal");
				entity.Property(e => e.PurchaseInfo).HasColumnName(@"PurchaseInfo").HasColumnType("varchar(3)").IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.@new).HasColumnName(@"new").HasColumnType("varchar(1)").IsRequired().IsUnicode(false).HasMaxLength(1);
				entity.Property(e => e.BuyerPlnr).HasColumnName(@"BuyerPlnr").HasColumnType("int");
				entity.Property(e => e.PMName).HasColumnName(@"PMName").HasColumnType("nvarchar(91)").HasMaxLength(91);
				});

            modelBuilder.Entity<PHV_EcomPhotoApprovalList>(entity =>
            {
				entity.ToTable("PHV_EcomPhotoApprovalList");
				entity.HasKey(x => x.OrderHeader_ID);
				entity.Property(e => e.rownum).HasColumnName(@"rownum").HasColumnType("bigint");
				entity.Property(e => e.OrderHeader_ID).HasColumnName(@"OrderHeader_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int");
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.OrderNo).HasColumnName(@"OrderNo").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PONo).HasColumnName(@"PONo").HasColumnType("nvarchar(25)").HasMaxLength(25);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.Merchant).HasColumnName(@"Merchant").HasColumnType("int");
				entity.Property(e => e.MerchantEmail).HasColumnName(@"MerchantEmail").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.VisualMerchant).HasColumnName(@"VisualMerchant").HasColumnType("int");
				entity.Property(e => e.VisualMerchantEmail).HasColumnName(@"VisualMerchantEmail").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.CommCode).HasColumnName(@"CommCode").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.ProductCategory).HasColumnName(@"ProductCategory").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Brand_ID).HasColumnName(@"Brand_ID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.BriefDescription).HasColumnName(@"BriefDescription").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.ScheduleDate).HasColumnName(@"ScheduleDate").HasColumnType("datetime");
				entity.Property(e => e.InvAvailableDate).HasColumnName(@"InvAvailableDate").HasColumnType("datetime");
				entity.Property(e => e.EstSampleReadyDate).HasColumnName(@"EstSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ActSampleReadyDate).HasColumnName(@"ActSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ReqPhotoReadyDate).HasColumnName(@"ReqPhotoReadyDate").HasColumnType("datetime");
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.OrderReviewDate).HasColumnName(@"OrderReviewDate").HasColumnType("datetime");
				entity.Property(e => e.PendingApprovalDate).HasColumnName(@"PendingApprovalDate").HasColumnType("datetime");
				entity.Property(e => e.InternalDeadlineDate).HasColumnName(@"InternalDeadlineDate").HasColumnType("datetime");
				entity.Property(e => e.ReminderEmailSended).HasColumnName(@"ReminderEmailSended").HasColumnType("int");
				entity.Property(e => e.EvaluateDate).HasColumnName(@"EvaluateDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluateDateForVisual).HasColumnName(@"EvaluateDateForVisual").HasColumnType("datetime");
				entity.Property(e => e.HaveEvaluate).HasColumnName(@"HaveEvaluate").HasColumnType("int");
				entity.Property(e => e.HaveEvaluateForVisual).HasColumnName(@"HaveEvaluateForVisual").HasColumnType("int");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PhotoTypeCode).HasColumnName(@"PhotoTypeCode").HasColumnType("nvarchar(max)");
				});

            modelBuilder.Entity<PHV_ECOMPhotoItemSelect>(entity =>
            {
				entity.ToTable("PHV_ECOMPhotoItemSelect");
				entity.HasKey(x => new { x.ItemID, x.ItemNo, x.upc });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.upc).HasColumnName(@"upc").HasColumnType("nvarchar(16)").IsRequired().HasMaxLength(16);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.CommCode).HasColumnName(@"CommCode").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.CommCodeDesc).HasColumnName(@"CommCodeDesc").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.Brand_ID).HasColumnName(@"Brand_ID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProductCategory).HasColumnName(@"ProductCategory").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.Fabrication).HasColumnName(@"Fabrication").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				});

            modelBuilder.Entity<PHV_ECOMPhotoMaster>(entity =>
            {
				entity.ToTable("PHV_ECOMPhotoMaster");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.GroupID).HasColumnName(@"GroupID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.DivisionDesc).HasColumnName(@"DivisionDesc").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.BrandID).HasColumnName(@"BrandID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.ProductDescription).HasColumnName(@"ProductDescription").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.ThumbnailPath).HasColumnName(@"ThumbnailPath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.PhotoPath).HasColumnName(@"PhotoPath").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.HomePicture).HasColumnName(@"HomePicture").HasColumnType("bit");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<PHV_ECOMPhotoMasterRelatedItem>(entity =>
            {
				entity.ToTable("PHV_ECOMPhotoMasterRelatedItem");
				entity.HasKey(x => new { x.Id, x.PhotoOrder_ID, x.RelatedType, x.RelatedID, x.ItemNo });
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrderGroupID).HasColumnName(@"PhotoOrderGroupID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItemID).HasColumnName(@"PhotoOrderItemID").HasColumnType("int");
				entity.Property(e => e.RelatedType).HasColumnName(@"RelatedType").HasColumnType("int").IsRequired();
				entity.Property(e => e.RelatedID).HasColumnName(@"RelatedID").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				});

            modelBuilder.Entity<PHV_EcomSampleLibrary>(entity =>
            {
				entity.ToTable("PHV_EcomSampleLibrary");
				entity.HasKey(x => new { x.Id, x.ItemNo, x.Status, x.LastUpdatedDate, x.LastUpdatedBy });
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.item_ID).HasColumnName(@"item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
				entity.Property(e => e.PicturePath_144).HasColumnName(@"PicturePath_144").HasColumnType("nvarchar(400)").HasMaxLength(400);
				entity.Property(e => e.PicturePath).HasColumnName(@"PicturePath").HasColumnType("nvarchar(400)").HasMaxLength(400);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.DivisionDesc).HasColumnName(@"DivisionDesc").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.BrandID).HasColumnName(@"BrandID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.ProdCategoryDescription).HasColumnName(@"ProdCategoryDescription").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.BriefDescription).HasColumnName(@"BriefDescription").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.IsUseECOMPhoto).HasColumnName(@"IsUseECOMPhoto").HasColumnType("bit");
				entity.Property(e => e.LifeStyles).HasColumnName(@"LifeStyles").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				});

            modelBuilder.Entity<PHV_ECOMStackPhoto>(entity =>
            {
				entity.ToTable("PHV_ECOMStackPhoto");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.GroupID).HasColumnName(@"GroupID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.DivisionDesc).HasColumnName(@"DivisionDesc").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.BrandID).HasColumnName(@"BrandID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.ProductDescription).HasColumnName(@"ProductDescription").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Fabrication).HasColumnName(@"Fabrication").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				});

            modelBuilder.Entity<PHV_MasterItemPhoto>(entity =>
            {
				entity.ToTable("PHV_MasterItemPhoto");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.ChinaStudioStaff).HasColumnName(@"ChinaStudioStaff").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.Comment).HasColumnName(@"Comment").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.ForDL).HasColumnName(@"ForDL").HasColumnType("bit");
				entity.Property(e => e.ForOlliix).HasColumnName(@"ForOlliix").HasColumnType("bit");
				entity.Property(e => e.HomePicture).HasColumnName(@"HomePicture").HasColumnType("bit");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.PhotoID).HasColumnName(@"PhotoID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PhotoIndex).HasColumnName(@"PhotoIndex").HasColumnType("int");
				entity.Property(e => e.PhotoName).HasColumnName(@"PhotoName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderPhotoType_ID).HasColumnName(@"PhotoOrderPhotoType_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoPath).HasColumnName(@"PhotoPath").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.PhotoScores).HasColumnName(@"PhotoScores").HasColumnType("int");
				entity.Property(e => e.PhotoVersion).HasColumnName(@"PhotoVersion").HasColumnType("int");
				entity.Property(e => e.ThumbnailPath).HasColumnName(@"ThumbnailPath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.PhotoSize).HasColumnName(@"PhotoSize").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.PhotoOrderPhotoType).HasColumnName(@"PhotoOrderPhotoType").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.Merchant).HasColumnName(@"Merchant").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.SequenceNo).HasColumnName(@"SequenceNo").HasColumnType("int");
				entity.Property(e => e.OriginalTiffFilePath).HasColumnName(@"OriginalTiffFilePath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.LifeStyleName).HasColumnName(@"LifeStyleName").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.PhotoScoresForVisual).HasColumnName(@"PhotoScoresForVisual").HasColumnType("int");
				entity.Property(e => e.PhotoStatusForVisual).HasColumnName(@"PhotoStatusForVisual").HasColumnType("int");
				});

            modelBuilder.Entity<PHV_OrderHeader>(entity =>
            {
				entity.ToTable("PHV_OrderHeader");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.OrderNo).HasColumnName(@"OrderNo").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Merchant).HasColumnName(@"Merchant").HasColumnType("int");
				entity.Property(e => e.PM).HasColumnName(@"PM").HasColumnType("int");
				entity.Property(e => e.PA).HasColumnName(@"PA").HasColumnType("int");
				entity.Property(e => e.PONo).HasColumnName(@"PONo").HasColumnType("nvarchar(25)").HasMaxLength(25);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.ProgramName).HasColumnName(@"ProgramName").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.CompleteDate).HasColumnName(@"CompleteDate").HasColumnType("datetime");
				entity.Property(e => e.ReminderEmailSended).HasColumnName(@"ReminderEmailSended").HasColumnType("int");
				entity.Property(e => e.OriginalTiffFilePath).HasColumnName(@"OriginalTiffFilePath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.PendingApprovalDate).HasColumnName(@"PendingApprovalDate").HasColumnType("datetime");
				entity.Property(e => e.OrderReviewDate).HasColumnName(@"OrderReviewDate").HasColumnType("datetime");
				entity.Property(e => e.Buy).HasColumnName(@"Buy").HasColumnType("int");
				entity.Property(e => e.VisualMerchant).HasColumnName(@"VisualMerchant").HasColumnType("int");
				entity.Property(e => e.SchedShipDate).HasColumnName(@"SchedShipDate").HasColumnType("datetime");
				entity.Property(e => e.Buyer).HasColumnName(@"Buyer").HasColumnType("int");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("varchar(4)").IsUnicode(false).HasMaxLength(4);
				entity.Property(e => e.ScheduleDate).HasColumnName(@"ScheduleDate").HasColumnType("datetime");
				entity.Property(e => e.EstSampleReadyDate).HasColumnName(@"EstSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ActSampleReadyDate).HasColumnName(@"ActSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ReqPhotoReadyDate).HasColumnName(@"ReqPhotoReadyDate").HasColumnType("datetime");
				entity.Property(e => e.InternalDeadlineDate).HasColumnName(@"InternalDeadlineDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PHV_PendingPhotoReport>(entity =>
            {
				entity.ToTable("PHV_PendingPhotoReport");
				entity.HasKey(x => x.OrderHeader_ID);
				entity.Property(e => e.GroupID).HasColumnName(@"GroupID").HasColumnType("int");
				entity.Property(e => e.rownum).HasColumnName(@"rownum").HasColumnType("bigint");
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int");
				entity.Property(e => e.OrderHeader_ID).HasColumnName(@"OrderHeader_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.OrderNo).HasColumnName(@"OrderNo").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PONo).HasColumnName(@"PONo").HasColumnType("nvarchar(25)").HasMaxLength(25);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.Merchant).HasColumnName(@"Merchant").HasColumnType("int");
				entity.Property(e => e.MerchantEmail).HasColumnName(@"MerchantEmail").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.VisualMerchant).HasColumnName(@"VisualMerchant").HasColumnType("int");
				entity.Property(e => e.VisualMerchantEmail).HasColumnName(@"VisualMerchantEmail").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.CommCode).HasColumnName(@"CommCode").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.ProductCategory).HasColumnName(@"ProductCategory").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Brand_ID).HasColumnName(@"Brand_ID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.BriefDescription).HasColumnName(@"BriefDescription").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.ScheduleDate).HasColumnName(@"ScheduleDate").HasColumnType("datetime");
				entity.Property(e => e.InvAvailableDate).HasColumnName(@"InvAvailableDate").HasColumnType("datetime");
				entity.Property(e => e.EstSampleReadyDate).HasColumnName(@"EstSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ActSampleReadyDate).HasColumnName(@"ActSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ReqPhotoReadyDate).HasColumnName(@"ReqPhotoReadyDate").HasColumnType("datetime");
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.OrderReviewDate).HasColumnName(@"OrderReviewDate").HasColumnType("datetime");
				entity.Property(e => e.PendingApprovalDate).HasColumnName(@"PendingApprovalDate").HasColumnType("datetime");
				entity.Property(e => e.InternalDeadlineDate).HasColumnName(@"InternalDeadlineDate").HasColumnType("datetime");
				entity.Property(e => e.PhotoOrderPhotoType_ID).HasColumnName(@"PhotoOrderPhotoType_ID").HasColumnType("int");
				entity.Property(e => e.SubmmitPhotoDate).HasColumnName(@"SubmmitPhotoDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.PhotoType).HasColumnName(@"PhotoType").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.PhotoTypeCode).HasColumnName(@"PhotoTypeCode").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.PhotoID).HasColumnName(@"PhotoID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PhotoPath).HasColumnName(@"PhotoPath").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.ThumbnailPath).HasColumnName(@"ThumbnailPath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.RemindEmailSended).HasColumnName(@"RemindEmailSended").HasColumnType("int");
				entity.Property(e => e.RemindEmailSendedForVisual).HasColumnName(@"RemindEmailSendedForVisual").HasColumnType("int");
				entity.Property(e => e.HaveEvaluate).HasColumnName(@"HaveEvaluate").HasColumnType("int");
				entity.Property(e => e.HaveEvaluateForVisual).HasColumnName(@"HaveEvaluateForVisual").HasColumnType("int");
				entity.Property(e => e.EvaluateDate).HasColumnName(@"EvaluateDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluateDateForVisual).HasColumnName(@"EvaluateDateForVisual").HasColumnType("datetime");
				});

            modelBuilder.Entity<PHV_PhotoOrderItem>(entity =>
            {
				entity.ToTable("PHV_PhotoOrderItem");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PONo).HasColumnName(@"PONo").HasColumnType("nvarchar(25)").HasMaxLength(25);
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int");
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.POItemStatus).HasColumnName(@"POItemStatus").HasColumnType("int");
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.LifeStyle_ID).HasColumnName(@"LifeStyle_ID").HasColumnType("int");
				entity.Property(e => e.LifeStyleName).HasColumnName(@"LifeStyleName").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.GroupID).HasColumnName(@"GroupID").HasColumnType("int");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.ScheduleDate).HasColumnName(@"ScheduleDate").HasColumnType("datetime");
				entity.Property(e => e.EstSampleReadyDate).HasColumnName(@"EstSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ActSampleReadyDate).HasColumnName(@"ActSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ReqPhotoReadyDate).HasColumnName(@"ReqPhotoReadyDate").HasColumnType("datetime");
				entity.Property(e => e.InternalDeadlineDate).HasColumnName(@"InternalDeadlineDate").HasColumnType("datetime");
				entity.Property(e => e.FeedToEcom).HasColumnName(@"FeedToEcom").HasColumnType("bit");
				entity.Property(e => e.FeedDate).HasColumnName(@"FeedDate").HasColumnType("datetime");
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(16)").HasMaxLength(16);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.DivisionDesc).HasColumnName(@"DivisionDesc").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.BrandID).HasColumnName(@"BrandID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.SetIncludes).HasColumnName(@"SetIncludes").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.InvAvailableDate).HasColumnName(@"InvAvailableDate").HasColumnType("datetime");
				entity.Property(e => e.ProdCategoryDescription).HasColumnName(@"ProdCategoryDescription").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				});

            modelBuilder.Entity<PHV_PhotoOrderItemTypeQty>(entity =>
            {
				entity.ToTable("PHV_PhotoOrderItemTypeQty");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.PhotoQty).HasColumnName(@"PhotoQty").HasColumnType("int");
				entity.Property(e => e.PhotoTypeCode).HasColumnName(@"PhotoTypeCode").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.PhotoType_ID).HasColumnName(@"PhotoType_ID").HasColumnType("int");
				});

            modelBuilder.Entity<PHV_PhotoOrderPhotoType>(entity =>
            {
				entity.ToTable("PHV_PhotoOrderPhotoType");
				entity.HasKey(x => new { x.EIPID, x.Id });
				entity.Property(e => e.EIPID).HasColumnName(@"EIPID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.PhotoOrder_ID).HasColumnName(@"PhotoOrder_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderItem_ID).HasColumnName(@"PhotoOrderItem_ID").HasColumnType("int");
				entity.Property(e => e.PhotoOrderGroup_ID).HasColumnName(@"PhotoOrderGroup_ID").HasColumnType("int");
				entity.Property(e => e.PhotoType_ID).HasColumnName(@"PhotoType_ID").HasColumnType("int");
				entity.Property(e => e.PhotoQty).HasColumnName(@"PhotoQty").HasColumnType("int");
				entity.Property(e => e.PhotoUnitPrice).HasColumnName(@"PhotoUnitPrice").HasColumnType("decimal");
				entity.Property(e => e.PhotoType).HasColumnName(@"PhotoType").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.PhotoTypeCode).HasColumnName(@"PhotoTypeCode").HasColumnType("nvarchar(100)").HasMaxLength(100);
				});

            modelBuilder.Entity<PHV_PhotoStatusReport>(entity =>
            {
				entity.ToTable("PHV_PhotoStatusReport");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int");
				entity.Property(e => e.OrderNo).HasColumnName(@"OrderNo").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PONo).HasColumnName(@"PONo").HasColumnType("nvarchar(25)").HasMaxLength(25);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(4)").HasMaxLength(4);
				entity.Property(e => e.DivisionDesc).HasColumnName(@"DivisionDesc").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProductCat).HasColumnName(@"ProductCat").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.ProductCategory).HasColumnName(@"ProductCategory").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Brand_ID).HasColumnName(@"Brand_ID").HasColumnType("int");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.InvAvailableDate).HasColumnName(@"InvAvailableDate").HasColumnType("datetime");
				entity.Property(e => e.EstSampleReadyDate).HasColumnName(@"EstSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ActSampleReadyDate).HasColumnName(@"ActSampleReadyDate").HasColumnType("datetime");
				entity.Property(e => e.ReqPhotoReadyDate).HasColumnName(@"ReqPhotoReadyDate").HasColumnType("datetime");
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.OrderReviewDate).HasColumnName(@"OrderReviewDate").HasColumnType("datetime");
				entity.Property(e => e.CompleteDate).HasColumnName(@"CompleteDate").HasColumnType("datetime");
				entity.Property(e => e.BriefDescription).HasColumnName(@"BriefDescription").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.InternalDeadlineDate).HasColumnName(@"InternalDeadlineDate").HasColumnType("datetime");
				entity.Property(e => e.SchedShipDate).HasColumnName(@"SchedShipDate").HasColumnType("datetime");
				entity.Property(e => e.Merchant).HasColumnName(@"Merchant").HasColumnType("int");
				entity.Property(e => e.VisualMerchant).HasColumnName(@"VisualMerchant").HasColumnType("int");
				entity.Property(e => e.PM).HasColumnName(@"PM").HasColumnType("int");
				entity.Property(e => e.PA).HasColumnName(@"PA").HasColumnType("int");
				});

            modelBuilder.Entity<PHV_UserPrivilegeMaincetance>(entity =>
            {
				entity.ToTable("PHV_UserPrivilegeMaincetance");
				entity.HasKey(x => x.Id);
				entity.Property(e => e.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired();
				entity.Property(e => e.T1User).HasColumnName(@"T1User").HasColumnType("int");
				entity.Property(e => e.T2User).HasColumnName(@"T2User").HasColumnType("int");
				entity.Property(e => e.T3User).HasColumnName(@"T3User").HasColumnType("int");
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("date");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.RoleType).HasColumnName(@"RoleType").HasColumnType("int");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(max)");
				entity.Property(e => e.DivisionName).HasColumnName(@"DivisionName").HasColumnType("nvarchar(max)");
				entity.Property(e => e.BrandId).HasColumnName(@"BrandId").HasColumnType("nvarchar(max)");
				entity.Property(e => e.BrandName).HasColumnName(@"BrandName").HasColumnType("nvarchar(max)");
				entity.Property(e => e.ProdCategory).HasColumnName(@"ProdCategory").HasColumnType("nvarchar(max)");
				entity.Property(e => e.ProductCategory).HasColumnName(@"ProductCategory").HasColumnType("nvarchar(max)");
				entity.Property(e => e.PhotoTypeID).HasColumnName(@"PhotoTypeID").HasColumnType("nvarchar(max)");
				entity.Property(e => e.PhotoType).HasColumnName(@"PhotoType").HasColumnType("nvarchar(max)");
				entity.Property(e => e.T1UserEmail).HasColumnName(@"T1UserEmail").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.T2UserEmail).HasColumnName(@"T2UserEmail").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.T3UserEmail).HasColumnName(@"T3UserEmail").HasColumnType("nvarchar(100)").HasMaxLength(100);
				});

            		}


    }
    #endregion

    #region POCO classes


    // PH_BaseSetting
    public partial class PH_BaseSetting : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Key { get; set; } // Key (length: 64)
        public string Value { get; set; } // Value (length: 64)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_BasicEnum
    public partial class PH_BasicEnum : Entity
    {
        public string EnumType { get; set; } // EnumType (Primary key) (length: 64)
        public int EnumValue { get; set; } // EnumValue (Primary key)
        public string EnumName { get; set; } // EnumName (length: 64)
        public string EnumDescription { get; set; } // EnumDescription (length: 128)
    }


    // PH_CompletedPhotos
    public partial class PH_CompletedPhoto : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? PhotoOrderPhotoType_ID { get; set; } // PhotoOrderPhotoType_ID
        public string PhotoPath { get; set; } // PhotoPath (length: 200)
        public bool? HomePicture { get; set; } // HomePicture
        public int? PhotoScores { get; set; } // PhotoScores
        public bool? ForOlliix { get; set; } // ForOlliix
        public bool? ForDL { get; set; } // ForDL
        public string Comment { get; set; } // Comment (length: 2000)
        public string PhotoName { get; set; } // PhotoName (length: 128)
        public string ThumbnailPath { get; set; } // ThumbnailPath (length: 256)
        public string PhotoID { get; set; } // PhotoID (length: 128)
        public int? PhotoVersion { get; set; } // PhotoVersion
        public int? PhotoIndex { get; set; } // PhotoIndex
        public string ChinaStudioStaff { get; set; } // ChinaStudioStaff (length: 64)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public string PhotoSize { get; set; } // PhotoSize (length: 64)
        public string ThumbnailPathForEEC { get; set; } // ThumbnailPathForEEC (length: 256)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public int? Item_ID { get; set; } // Item_ID
        public string ItemNo { get; set; } // ItemNo (length: 64)
        public int? SequenceNo { get; set; } // SequenceNo
        public string HashCode { get; set; } // HashCode (length: 1000)
        public int? PhotoScoresForVisual { get; set; } // PhotoScoresForVisual
        public int? PhotoStatusForVisual { get; set; } // PhotoStatusForVisual
        public bool? StackPhoto { get; set; } // StackPhoto
    }


    // PH_EcomSampleItem
    public partial class PH_EcomSampleItem : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? Item_ID { get; set; } // Item_ID
        public string ItemNo { get; set; } // ItemNo (length: 200)
        public int Status { get; set; } // Status
        public System.DateTime LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_InternalDeadlineDate
    public partial class PH_InternalDeadlineDate : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Division { get; set; } // Division (length: 8)
        public string ProductCategory { get; set; } // ProductCategory
        public int ReduceDays { get; set; } // ReduceDays
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_LeadTime
    public partial class PH_LeadTime : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int Type { get; set; } // Type
        public string Division { get; set; } // Division (length: 8)
        public int WorkingDays { get; set; } // WorkingDays
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_LifeStyle
    public partial class PH_LifeStyle : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public string Description { get; set; } // Description (length: 1000)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public int? Status { get; set; } // Status
    }


    // PH_OrderHeaderFile
    public partial class PH_OrderHeaderFile : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PhotoOrderID { get; set; } // PhotoOrderID
        public string FileName { get; set; } // FileName (length: 128)
        public string FilePath { get; set; } // FilePath (length: 128)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_PhotoFile
    public partial class PH_PhotoFile : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PH_PhotoOrderPhotos_ID { get; set; } // PH_PhotoOrderPhotos_ID
        public string FileName { get; set; } // FileName (length: 128)
        public string FilePath { get; set; } // FilePath (length: 128)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_PhotoNotes
    public partial class PH_PhotoNote : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PH_PhotoOrderPhotos_ID { get; set; } // PH_PhotoOrderPhotos_ID
        public string Note { get; set; } // Note (length: 512)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 64)
        public System.DateTime? LastUpdate { get; set; } // LastUpdate
        public string UpdateBy { get; set; } // UpdateBy (length: 64)
    }


    // PH_PhotoOrderHeader
    public partial class PH_PhotoOrderHeader : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string OrderNo { get; set; } // OrderNo (length: 50)
        public int? Merchant { get; set; } // Merchant
        public int? PM { get; set; } // PM
        public int? PA { get; set; } // PA
        public string PONo { get; set; } // PONo (length: 25)
        public int? Status { get; set; } // Status
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public string Customer { get; set; } // Customer (length: 64)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string ProgramName { get; set; } // ProgramName (length: 64)
        public System.DateTime? CompleteDate { get; set; } // CompleteDate
        public int? ReminderEmailSended { get; set; } // ReminderEmailSended
        public string OriginalTiffFilePath { get; set; } // OriginalTiffFilePath (length: 256)
        public System.DateTime? OrderReviewDate { get; set; } // OrderReviewDate
        public int? Buy { get; set; } // Buy
        public System.DateTime? PendingApprovalDate { get; set; } // PendingApprovalDate
        public int? VisualMerchant { get; set; } // VisualMerchant
    }


    // PH_PhotoOrderItem
    public partial class PH_PhotoOrderItem : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? GroupID { get; set; } // GroupID
        public int? Item_ID { get; set; } // Item_ID
        public string ItemNo { get; set; } // ItemNo (length: 200)
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
        public int? LifeStyle_ID { get; set; } // LifeStyle_ID
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public string Notes { get; set; } // Notes (length: 512)
        public System.DateTime? ScheduleDate { get; set; } // ScheduleDate
        public System.DateTime? EstSampleReadyDate { get; set; } // EstSampleReadyDate
        public System.DateTime? ActSampleReadyDate { get; set; } // ActSampleReadyDate
        public System.DateTime? ReqPhotoReadyDate { get; set; } // ReqPhotoReadyDate
        public System.DateTime? InternalDeadlineDate { get; set; } // InternalDeadlineDate
        public int? POItemStatus { get; set; } // POItemStatus
        public int? HaveEvaluate { get; set; } // HaveEvaluate
        public int? HaveEvaluateForVisual { get; set; } // HaveEvaluateForVisual
        public System.DateTime? EvaluateDate { get; set; } // EvaluateDate
        public System.DateTime? EvaluateDateForVisual { get; set; } // EvaluateDateForVisual
        public bool? FeedToEcom { get; set; } // FeedToEcom
        public System.DateTime? FeedDate { get; set; } // FeedDate
    }


    // PH_PhotoOrderItemFile
    public partial class PH_PhotoOrderItemFile : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PhotoOrderItemID { get; set; } // PhotoOrderItemID
        public string FileName { get; set; } // FileName (length: 128)
        public string FilePath { get; set; } // FilePath (length: 128)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
        public int? PhotoOrderGroupID { get; set; } // PhotoOrderGroupID
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public bool? FollowProps { get; set; } // FollowProps
        public bool? FollowLookFeel { get; set; } // FollowLookFeel
        public bool? FollowSet { get; set; } // FollowSet
        public bool? PSNewProduct { get; set; } // PSNewProduct
        public bool? PSNewColorway { get; set; } // PSNewColorway
    }


    // PH_PhotoOrderItemNotes
    public partial class PH_PhotoOrderItemNote : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int PhotoOrderItemID { get; set; } // PhotoOrderItemID
        public int? PhotoOrderGroupID { get; set; } // PhotoOrderGroupID
        public string Note { get; set; } // Note (length: 512)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 64)
        public System.DateTime? LastUpdate { get; set; } // LastUpdate
        public string UpdateBy { get; set; } // UpdateBy (length: 64)
    }


    // PH_PhotoOrderItemProp
    public partial class PH_PhotoOrderItemProp : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? PhotoOrderGroupID { get; set; } // PhotoOrderGroupID
        public int? PhotoOrderItemID { get; set; } // PhotoOrderItemID
        public int RelatedType { get; set; } // RelatedType
        public int RelatedID { get; set; } // RelatedID
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_PhotoOrderNotes
    public partial class PH_PhotoOrderNote : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public string Note { get; set; } // Note (length: 512)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 64)
        public System.DateTime? LastUpdate { get; set; } // LastUpdate
        public string UpdateBy { get; set; } // UpdateBy (length: 64)
    }


    // PH_PhotoOrderPhotos
    public partial class PH_PhotoOrderPhoto : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? PhotoOrderGroup_ID { get; set; } // PhotoOrderGroup_ID
        public int? PhotoOrderPhotoType_ID { get; set; } // PhotoOrderPhotoType_ID
        public string PhotoPath { get; set; } // PhotoPath (length: 200)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public bool? HomePicture { get; set; } // HomePicture
        public int? PhotoScores { get; set; } // PhotoScores
        public bool? ForOlliix { get; set; } // ForOlliix
        public bool? ForDL { get; set; } // ForDL
        public string Comment { get; set; } // Comment (length: 2000)
        public string PhotoName { get; set; } // PhotoName (length: 128)
        public string ThumbnailPath { get; set; } // ThumbnailPath (length: 256)
        public string PhotoID { get; set; } // PhotoID (length: 128)
        public int? PhotoVersion { get; set; } // PhotoVersion
        public int? PhotoIndex { get; set; } // PhotoIndex
        public string ChinaStudioStaff { get; set; } // ChinaStudioStaff (length: 64)
        public string PhotoSize { get; set; } // PhotoSize (length: 64)
        public string ThumbnailPathForEEC { get; set; } // ThumbnailPathForEEC (length: 256)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public int? SequenceNo { get; set; } // SequenceNo
        public int? PhotoStatusForVisual { get; set; } // PhotoStatusForVisual
        public int? PhotoScoresForVisual { get; set; } // PhotoScoresForVisual
        public bool? StackPhoto { get; set; } // StackPhoto
        public int? RemindEmailSended { get; set; } // RemindEmailSended
        public int? PhotoStatus { get; set; } // PhotoStatus
        public int? HaveEvaluate { get; set; } // HaveEvaluate
        public int? HaveEvaluateForVisual { get; set; } // HaveEvaluateForVisual
        public System.DateTime? EvaluateDate { get; set; } // EvaluateDate
        public System.DateTime? EvaluateDateForVisual { get; set; } // EvaluateDateForVisual
        public int? RemindEmailSendedForVisual { get; set; } // RemindEmailSendedForVisual
    }


    // PH_PhotoOrderPhotoType
    public partial class PH_PhotoOrderPhotoType : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? PhotoOrderGroup_ID { get; set; } // PhotoOrderGroup_ID
        public int? PhotoType_ID { get; set; } // PhotoType_ID
        public decimal? PhotoUnitPrice { get; set; } // PhotoUnitPrice
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public int? PhotoQty { get; set; } // PhotoQty
        public int EIPID { get; set; } = -1; // EIPID
    }


    // PH_PhotoType
    public partial class PH_PhotoType : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string PhotoType { get; set; } // PhotoType (length: 100)
        public string PhotoTypeCode { get; set; } // PhotoTypeCode (length: 100)
        public decimal? PhotoUnitPrice { get; set; } // PhotoUnitPrice
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public int? Status { get; set; } // Status
        public int EIPID { get; set; } = -1; // EIPID
        public string ChineseName { get; set; } // ChineseName (length: 64)
    }


    // PH_PropCategory
    public partial class PH_PropCategory : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 64)
        public string AlterName { get; set; } // AlterName (length: 128)
        public int Status { get; set; } // Status
        public System.DateTime LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_PropLibrary
    public partial class PH_PropLibrary : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PropCategory { get; set; } // PropCategory
        public int PropSubCategory { get; set; } // PropSubCategory
        public string Name { get; set; } // Name (length: 64)
        public string PhotoName { get; set; } // PhotoName (length: 128)
        public int Status { get; set; } // Status
        public string PhotoPath { get; set; } // PhotoPath (length: 256)
        public string PhotoThumbnailPath { get; set; } // PhotoThumbnailPath (length: 256)
        public System.DateTime LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_PropSubCategory
    public partial class PH_PropSubCategory : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PropCategory { get; set; } // PropCategory
        public string Name { get; set; } // Name (length: 64)
        public string AlterName { get; set; } // AlterName (length: 128)
        public int Status { get; set; } // Status
        public System.DateTime LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
    }


    // PH_UserPrivilegeMaincetance
    public partial class PH_UserPrivilegeMaincetance : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? T1User { get; set; } // T1User
        public int? T2User { get; set; } // T2User
        public int? T3User { get; set; } // T3User
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
        public int? RoleType { get; set; } // RoleType
    }


    // PH_UserPrivilegeMaincetanceBrand
    public partial class PH_UserPrivilegeMaincetanceBrand : Entity
    {
        public int UserPrivilegeMaincetance_ID { get; set; } // UserPrivilegeMaincetance_ID (Primary key)
        public int BrandID { get; set; } // BrandID (Primary key)
    }


    // PH_UserPrivilegeMaincetanceDivision
    public partial class PH_UserPrivilegeMaincetanceDivision : Entity
    {
        public int UserPrivilegeMaincetance_ID { get; set; } // UserPrivilegeMaincetance_ID (Primary key)
        public string Division { get; set; } // Division (Primary key) (length: 8)
    }


    // PH_UserPrivilegeMaincetancePhotoType
    public partial class PH_UserPrivilegeMaincetancePhotoType : Entity
    {
        public int UserPrivilegeMaincetance_ID { get; set; } // UserPrivilegeMaincetance_ID (Primary key)
        public int PhotoTypeID { get; set; } // PhotoTypeID (Primary key)
    }


    // PH_UserPrivilegeMaincetanceProductCategory
    public partial class PH_UserPrivilegeMaincetanceProductCategory : Entity
    {
        public int UserPrivilegeMaincetance_ID { get; set; } // UserPrivilegeMaincetance_ID (Primary key)
        public string ProdCatCode { get; set; } // ProdCatCode (Primary key) (length: 3)
    }


    // PHV_EComItemMasterList
    public partial class PHV_EComItemMasterList : Entity
    {
        public int Item_ID { get; set; } // Item_ID (Primary key)
        public int? Exclusive { get; set; } // Exclusive
        public string ExclusiveCode { get; set; } // ExclusiveCode (length: 20)
        public decimal? UnitCostDropShip { get; set; } // UnitCostDropShip
        public decimal? OlliixCost { get; set; } // OlliixCost
        public decimal? SuggestedRetail { get; set; } // SuggestedRetail
        public decimal? MSRP { get; set; } // MSRP
        public string PatternType { get; set; } // PatternType (length: 30)
        public int? ThreadCount { get; set; } // ThreadCount
        public int? GSM { get; set; } // GSM
        public string BriefDescription { get; set; } // BriefDescription (length: 200)
        public string RetailBrandName { get; set; } // RetailBrandName (length: 50)
        public string RetailSizeName { get; set; } // RetailSizeName (length: 30)
        public string PrimaryColor { get; set; } // PrimaryColor (length: 30)
        public string SecondaryColor { get; set; } // SecondaryColor (length: 30)
        public string AdhereMAP { get; set; } // AdhereMAP (Primary key) (length: 3)
        public bool? BBBPlaced { get; set; } // BBBPlaced
        public string MaterialAttrName { get; set; } // MaterialAttrName (length: 30)
        public string SizeDescription { get; set; } // SizeDescription (length: 1000)
        public string SetIncludes { get; set; } // SetIncludes (length: 500)
        public string SizeDetail { get; set; } // SizeDetail (length: 500)
        public string CareInstructions { get; set; } // CareInstructions (length: 500)
        public string MaterialDetails { get; set; } // MaterialDetails (length: 1000)
        public string LifeStyles { get; set; } // LifeStyles (length: 1000)
        public string RoomTypes { get; set; } // RoomTypes (length: 1000)
        public string RetailDivisions { get; set; } // RetailDivisions (length: 1000)
        public string OtherDetails { get; set; } // OtherDetails (length: 1000)
        public decimal? ProductWeight { get; set; } // ProductWeight
        public decimal? ProductLength { get; set; } // ProductLength
        public decimal? ProductWidth { get; set; } // ProductWidth
        public decimal? ProductHeight { get; set; } // ProductHeight
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public System.DateTime? InvAvailableDate { get; set; } // InvAvailableDate
        public bool? ECOMPhotoCheck { get; set; } // ECOMPhotoCheck
        public string ProductFamily { get; set; } // ProductFamily (length: 1000)
        public int? FamilyID { get; set; } // FamilyID
        public string Collection { get; set; } // Collection (length: 500)
        public string RetailProductCategories { get; set; } // RetailProductCategories (length: 1000)
        public string RetailProductCategory_IDs { get; set; } // RetailProductCategory_IDs (length: 1000)
        public string PicturePath { get; set; } // PicturePath (length: 400)
        public string PicturePath_144 { get; set; } // PicturePath_144 (length: 400)
        public string T1_Pattern { get; set; } // T1_Pattern (length: 500)
        public string T2_Pattern { get; set; } // T2_Pattern (length: 500)
        public string T3_Pattern { get; set; } // T3_Pattern (length: 500)
        public string T1_CopyDesc { get; set; } // T1_CopyDesc (length: 2000)
        public string T2_CopyDesc { get; set; } // T2_CopyDesc (length: 2000)
        public string T3_CopyDesc { get; set; } // T3_CopyDesc (length: 2000)
        public bool ExistingPattern { get; set; } // ExistingPattern (Primary key)
        public string ExistPattern { get; set; } // ExistPattern (Primary key) (length: 3)
        public int? BuyerID { get; set; } // BuyerID
        public string BuyerName { get; set; } // BuyerName (length: 50)
        public bool? IsUseECOMPhoto { get; set; } // IsUseECOMPhoto
        public int? Seasonal { get; set; } // Seasonal
        public int? EcomCategory_ID { get; set; } // EcomCategory_ID
        public string EcomCategory { get; set; } // EcomCategory (length: 264)
        public string CollectionNo { get; set; } // CollectionNo (length: 200)
        public string AdhereToMAP { get; set; } // AdhereToMAP (Primary key) (length: 4)
        public int? EcomCategoryStatus { get; set; } // EcomCategoryStatus
        public string EcomCategoryStatusName { get; set; } // EcomCategoryStatusName (Primary key) (length: 13)
        public string VideoURL { get; set; } // VideoURL
        public string CollectionName { get; set; } // CollectionName
        public System.DateTime? ItemCreateDate { get; set; } // ItemCreateDate
        public System.DateTime? ItemReviewDate { get; set; } // ItemReviewDate
        public System.DateTime? ItemCompleteDate { get; set; } // ItemCompleteDate
        public int? ISDLPhoto { get; set; } // ISDLPhoto
        public string ClassificationCode { get; set; } // ClassificationCode (length: 4)
        public int ItemID { get; set; } // ItemID (Primary key)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
        public string UPC { get; set; } // UPC (Primary key) (length: 16)
        public string ItemDescription { get; set; } // ItemDescription (length: 250)
        public string Fabrication { get; set; } // Fabrication (length: 1000)
        public string CommCode { get; set; } // CommCode (length: 4)
        public string Division { get; set; } // Division (length: 50)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string ProductCategory { get; set; } // ProductCategory (length: 75)
        public string LicensorCode { get; set; } // LicensorCode (length: 2)
        public string LicensorName { get; set; } // LicensorName (length: 75)
        public string LicensedProduct { get; set; } // LicensedProduct (Primary key) (length: 3)
        public string BrandName { get; set; } // BrandName (length: 50)
        public int? Brand_ID { get; set; } // Brand_ID
        public string Size { get; set; } // Size (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public decimal? SellingQtyPerPack { get; set; } // SellingQtyPerPack
        public decimal? SellingWeight { get; set; } // SellingWeight
        public decimal? SellingWidthIn { get; set; } // SellingWidthIn
        public decimal? SellingLengthIn { get; set; } // SellingLengthIn
        public decimal? SellingHeightIn { get; set; } // SellingHeightIn
        public int? ItemStatus { get; set; } // ItemStatus
        public System.DateTime? ItemStatusDate { get; set; } // ItemStatusDate
        public string DefaultLoc { get; set; } // DefaultLoc (length: 3)
        public string PrimaryLoc { get; set; } // PrimaryLoc (length: 3)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string CountryName { get; set; } // CountryName (length: 100)
        public string MadeIn { get; set; } // MadeIn (length: 108)
        public string CountryCode { get; set; } // CountryCode (length: 2)
        public decimal? Price { get; set; } // Price
        public decimal? Cost { get; set; } // Cost
        public System.DateTime CreationDate { get; set; } // CreationDate (Primary key)
        public System.DateTime? LastRevisedDate { get; set; } // LastRevisedDate
        public string LastRevisedUserName { get; set; } // LastRevisedUserName (length: 50)
        public int? PackCode { get; set; } // PackCode
        public decimal? tblItemMasterWeight { get; set; } // tblItemMasterWeight
        public string PurchaseInfo { get; set; } // PurchaseInfo (length: 3)
        public string @new { get; set; } // new (Primary key) (length: 1)
        public int? BuyerPlnr { get; set; } // BuyerPlnr
        public string PMName { get; set; } // PMName (length: 91)
    }


    // PHV_EcomPhotoApprovalList
    public partial class PHV_EcomPhotoApprovalList : Entity
    {
        public long? rownum { get; set; } // rownum
        public int OrderHeader_ID { get; set; } // OrderHeader_ID (Primary key)
        public int? Id { get; set; } // Id
        public int? Item_ID { get; set; } // Item_ID
        public string ItemNo { get; set; } // ItemNo (length: 200)
        public string OrderNo { get; set; } // OrderNo (length: 50)
        public string PONo { get; set; } // PONo (length: 25)
        public int? Status { get; set; } // Status
        public int? Merchant { get; set; } // Merchant
        public string MerchantEmail { get; set; } // MerchantEmail (length: 100)
        public int? VisualMerchant { get; set; } // VisualMerchant
        public string VisualMerchantEmail { get; set; } // VisualMerchantEmail (length: 100)
        public string CommCode { get; set; } // CommCode (length: 4)
        public string Division { get; set; } // Division (length: 50)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string ProductCategory { get; set; } // ProductCategory (length: 75)
        public int? Brand_ID { get; set; } // Brand_ID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string Size { get; set; } // Size (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public string BriefDescription { get; set; } // BriefDescription (length: 200)
        public System.DateTime? ScheduleDate { get; set; } // ScheduleDate
        public System.DateTime? InvAvailableDate { get; set; } // InvAvailableDate
        public System.DateTime? EstSampleReadyDate { get; set; } // EstSampleReadyDate
        public System.DateTime? ActSampleReadyDate { get; set; } // ActSampleReadyDate
        public System.DateTime? ReqPhotoReadyDate { get; set; } // ReqPhotoReadyDate
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public System.DateTime? OrderReviewDate { get; set; } // OrderReviewDate
        public System.DateTime? PendingApprovalDate { get; set; } // PendingApprovalDate
        public System.DateTime? InternalDeadlineDate { get; set; } // InternalDeadlineDate
        public int? ReminderEmailSended { get; set; } // ReminderEmailSended
        public System.DateTime? EvaluateDate { get; set; } // EvaluateDate
        public System.DateTime? EvaluateDateForVisual { get; set; } // EvaluateDateForVisual
        public int? HaveEvaluate { get; set; } // HaveEvaluate
        public int? HaveEvaluateForVisual { get; set; } // HaveEvaluateForVisual
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public string PhotoTypeCode { get; set; } // PhotoTypeCode
    }


    // PHV_ECOMPhotoItemSelect
    public partial class PHV_ECOMPhotoItemSelect : Entity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string upc { get; set; } // upc (Primary key) (length: 16)
        public string Description { get; set; } // Description (length: 250)
        public string Color { get; set; } // Color (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public string CommCode { get; set; } // CommCode (length: 4)
        public string CommCodeDesc { get; set; } // CommCodeDesc (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public int? Brand_ID { get; set; } // Brand_ID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string ProductCategory { get; set; } // ProductCategory (length: 75)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string Fabrication { get; set; } // Fabrication (length: 1000)
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
    }


    // PHV_ECOMPhotoMaster
    public partial class PHV_ECOMPhotoMaster : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? GroupID { get; set; } // GroupID
        public string ItemNo { get; set; } // ItemNo (length: 64)
        public int? Item_ID { get; set; } // Item_ID
        public string Division { get; set; } // Division (length: 4)
        public string Description { get; set; } // Description (length: 250)
        public string DivisionDesc { get; set; } // DivisionDesc (length: 50)
        public int? BrandID { get; set; } // BrandID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string ProductDescription { get; set; } // ProductDescription (length: 75)
        public string ThumbnailPath { get; set; } // ThumbnailPath (length: 256)
        public string PhotoPath { get; set; } // PhotoPath (length: 200)
        public bool? HomePicture { get; set; } // HomePicture
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
    }


    // PHV_ECOMPhotoMasterRelatedItem
    public partial class PHV_ECOMPhotoMasterRelatedItem : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int PhotoOrder_ID { get; set; } // PhotoOrder_ID (Primary key)
        public int? PhotoOrderGroupID { get; set; } // PhotoOrderGroupID
        public int? PhotoOrderItemID { get; set; } // PhotoOrderItemID
        public int RelatedType { get; set; } // RelatedType (Primary key)
        public int RelatedID { get; set; } // RelatedID (Primary key)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
    }


    // PHV_EcomSampleLibrary
    public partial class PHV_EcomSampleLibrary : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? item_ID { get; set; } // item_ID
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 200)
        public int Status { get; set; } // Status (Primary key)
        public System.DateTime LastUpdatedDate { get; set; } // LastUpdatedDate (Primary key)
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (Primary key) (length: 64)
        public string PicturePath_144 { get; set; } // PicturePath_144 (length: 400)
        public string PicturePath { get; set; } // PicturePath (length: 400)
        public string Division { get; set; } // Division (length: 4)
        public string DivisionDesc { get; set; } // DivisionDesc (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public int? BrandID { get; set; } // BrandID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string ProdCategoryDescription { get; set; } // ProdCategoryDescription (length: 75)
        public string BriefDescription { get; set; } // BriefDescription (length: 200)
        public bool? IsUseECOMPhoto { get; set; } // IsUseECOMPhoto
        public string LifeStyles { get; set; } // LifeStyles (length: 1000)
    }


    // PHV_ECOMStackPhoto
    public partial class PHV_ECOMStackPhoto : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? GroupID { get; set; } // GroupID
        public string ItemNo { get; set; } // ItemNo (length: 64)
        public int? Item_ID { get; set; } // Item_ID
        public string Division { get; set; } // Division (length: 4)
        public string DivisionDesc { get; set; } // DivisionDesc (length: 50)
        public string Description { get; set; } // Description (length: 250)
        public int? BrandID { get; set; } // BrandID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string ProductDescription { get; set; } // ProductDescription (length: 75)
        public string Fabrication { get; set; } // Fabrication (length: 1000)
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
    }


    // PHV_MasterItemPhoto
    public partial class PHV_MasterItemPhoto : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? Item_ID { get; set; } // Item_ID
        public string ItemNo { get; set; } // ItemNo (length: 64)
        public string ChinaStudioStaff { get; set; } // ChinaStudioStaff (length: 64)
        public string Comment { get; set; } // Comment (length: 2000)
        public bool? ForDL { get; set; } // ForDL
        public bool? ForOlliix { get; set; } // ForOlliix
        public bool? HomePicture { get; set; } // HomePicture
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string PhotoID { get; set; } // PhotoID (length: 128)
        public int? PhotoIndex { get; set; } // PhotoIndex
        public string PhotoName { get; set; } // PhotoName (length: 128)
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? PhotoOrderPhotoType_ID { get; set; } // PhotoOrderPhotoType_ID
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public string PhotoPath { get; set; } // PhotoPath (length: 200)
        public int? PhotoScores { get; set; } // PhotoScores
        public int? PhotoVersion { get; set; } // PhotoVersion
        public string ThumbnailPath { get; set; } // ThumbnailPath (length: 256)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string PhotoSize { get; set; } // PhotoSize (length: 64)
        public string PhotoOrderPhotoType { get; set; } // PhotoOrderPhotoType (length: 100)
        public string Merchant { get; set; } // Merchant (length: 50)
        public int? SequenceNo { get; set; } // SequenceNo
        public string OriginalTiffFilePath { get; set; } // OriginalTiffFilePath (length: 256)
        public string LifeStyleName { get; set; } // LifeStyleName (length: 100)
        public string CustomerCode { get; set; } // CustomerCode (length: 20)
        public int? PhotoScoresForVisual { get; set; } // PhotoScoresForVisual
        public int? PhotoStatusForVisual { get; set; } // PhotoStatusForVisual
    }


    // PHV_OrderHeader
    public partial class PHV_OrderHeader : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string OrderNo { get; set; } // OrderNo (length: 50)
        public int? Merchant { get; set; } // Merchant
        public int? PM { get; set; } // PM
        public int? PA { get; set; } // PA
        public string PONo { get; set; } // PONo (length: 25)
        public int? Status { get; set; } // Status
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public string Customer { get; set; } // Customer (length: 64)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string ProgramName { get; set; } // ProgramName (length: 64)
        public System.DateTime? CompleteDate { get; set; } // CompleteDate
        public int? ReminderEmailSended { get; set; } // ReminderEmailSended
        public string OriginalTiffFilePath { get; set; } // OriginalTiffFilePath (length: 256)
        public System.DateTime? PendingApprovalDate { get; set; } // PendingApprovalDate
        public System.DateTime? OrderReviewDate { get; set; } // OrderReviewDate
        public int? Buy { get; set; } // Buy
        public int? VisualMerchant { get; set; } // VisualMerchant
        public System.DateTime? SchedShipDate { get; set; } // SchedShipDate
        public int? Buyer { get; set; } // Buyer
        public string Division { get; set; } // Division (length: 4)
        public System.DateTime? ScheduleDate { get; set; } // ScheduleDate
        public System.DateTime? EstSampleReadyDate { get; set; } // EstSampleReadyDate
        public System.DateTime? ActSampleReadyDate { get; set; } // ActSampleReadyDate
        public System.DateTime? ReqPhotoReadyDate { get; set; } // ReqPhotoReadyDate
        public System.DateTime? InternalDeadlineDate { get; set; } // InternalDeadlineDate
    }


    // PHV_PendingPhotoReport
    public partial class PHV_PendingPhotoReport : Entity
    {
        public int? GroupID { get; set; } // GroupID
        public long? rownum { get; set; } // rownum
        public int? Id { get; set; } // Id
        public int OrderHeader_ID { get; set; } // OrderHeader_ID (Primary key)
        public int? Item_ID { get; set; } // Item_ID
        public string ItemNo { get; set; } // ItemNo (length: 200)
        public string OrderNo { get; set; } // OrderNo (length: 50)
        public string PONo { get; set; } // PONo (length: 25)
        public int? Status { get; set; } // Status
        public int? Merchant { get; set; } // Merchant
        public string MerchantEmail { get; set; } // MerchantEmail (length: 100)
        public int? VisualMerchant { get; set; } // VisualMerchant
        public string VisualMerchantEmail { get; set; } // VisualMerchantEmail (length: 100)
        public string CommCode { get; set; } // CommCode (length: 4)
        public string Division { get; set; } // Division (length: 50)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string ProductCategory { get; set; } // ProductCategory (length: 75)
        public int? Brand_ID { get; set; } // Brand_ID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string Size { get; set; } // Size (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public string BriefDescription { get; set; } // BriefDescription (length: 200)
        public System.DateTime? ScheduleDate { get; set; } // ScheduleDate
        public System.DateTime? InvAvailableDate { get; set; } // InvAvailableDate
        public System.DateTime? EstSampleReadyDate { get; set; } // EstSampleReadyDate
        public System.DateTime? ActSampleReadyDate { get; set; } // ActSampleReadyDate
        public System.DateTime? ReqPhotoReadyDate { get; set; } // ReqPhotoReadyDate
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public System.DateTime? OrderReviewDate { get; set; } // OrderReviewDate
        public System.DateTime? PendingApprovalDate { get; set; } // PendingApprovalDate
        public System.DateTime? InternalDeadlineDate { get; set; } // InternalDeadlineDate
        public int? PhotoOrderPhotoType_ID { get; set; } // PhotoOrderPhotoType_ID
        public System.DateTime? SubmmitPhotoDate { get; set; } // SubmmitPhotoDate
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string PhotoType { get; set; } // PhotoType (length: 100)
        public string PhotoTypeCode { get; set; } // PhotoTypeCode (length: 100)
        public string PhotoID { get; set; } // PhotoID (length: 128)
        public string PhotoPath { get; set; } // PhotoPath (length: 200)
        public string ThumbnailPath { get; set; } // ThumbnailPath (length: 256)
        public int? RemindEmailSended { get; set; } // RemindEmailSended
        public int? RemindEmailSendedForVisual { get; set; } // RemindEmailSendedForVisual
        public int? HaveEvaluate { get; set; } // HaveEvaluate
        public int? HaveEvaluateForVisual { get; set; } // HaveEvaluateForVisual
        public System.DateTime? EvaluateDate { get; set; } // EvaluateDate
        public System.DateTime? EvaluateDateForVisual { get; set; } // EvaluateDateForVisual
    }


    // PHV_PhotoOrderItem
    public partial class PHV_PhotoOrderItem : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public string PONo { get; set; } // PONo (length: 25)
        public int? Item_ID { get; set; } // Item_ID
        public string ItemNo { get; set; } // ItemNo (length: 200)
        public int? POItemStatus { get; set; } // POItemStatus
        public string Notes { get; set; } // Notes (length: 512)
        public int? LifeStyle_ID { get; set; } // LifeStyle_ID
        public string LifeStyleName { get; set; } // LifeStyleName (length: 100)
        public int? GroupID { get; set; } // GroupID
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public System.DateTime? ScheduleDate { get; set; } // ScheduleDate
        public System.DateTime? EstSampleReadyDate { get; set; } // EstSampleReadyDate
        public System.DateTime? ActSampleReadyDate { get; set; } // ActSampleReadyDate
        public System.DateTime? ReqPhotoReadyDate { get; set; } // ReqPhotoReadyDate
        public System.DateTime? InternalDeadlineDate { get; set; } // InternalDeadlineDate
        public bool? FeedToEcom { get; set; } // FeedToEcom
        public System.DateTime? FeedDate { get; set; } // FeedDate
        public string UPC { get; set; } // UPC (length: 16)
        public string Description { get; set; } // Description (length: 250)
        public string Color { get; set; } // Color (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public string Division { get; set; } // Division (length: 4)
        public string DivisionDesc { get; set; } // DivisionDesc (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public int? BrandID { get; set; } // BrandID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string SetIncludes { get; set; } // SetIncludes (length: 500)
        public System.DateTime? InvAvailableDate { get; set; } // InvAvailableDate
        public string ProdCategoryDescription { get; set; } // ProdCategoryDescription (length: 75)
        public string CustomerCode { get; set; } // CustomerCode (length: 20)
        public int? Status { get; set; } // Status
    }


    // PHV_PhotoOrderItemTypeQty
    public partial class PHV_PhotoOrderItemTypeQty : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? PhotoQty { get; set; } // PhotoQty
        public string PhotoTypeCode { get; set; } // PhotoTypeCode (length: 100)
        public int? PhotoType_ID { get; set; } // PhotoType_ID
    }


    // PHV_PhotoOrderPhotoType
    public partial class PHV_PhotoOrderPhotoType : Entity
    {
        public int EIPID { get; set; } // EIPID (Primary key)
        public int Id { get; set; } // Id (Primary key)
        public int? PhotoOrder_ID { get; set; } // PhotoOrder_ID
        public int? PhotoOrderItem_ID { get; set; } // PhotoOrderItem_ID
        public int? PhotoOrderGroup_ID { get; set; } // PhotoOrderGroup_ID
        public int? PhotoType_ID { get; set; } // PhotoType_ID
        public int? PhotoQty { get; set; } // PhotoQty
        public decimal? PhotoUnitPrice { get; set; } // PhotoUnitPrice
        public string PhotoType { get; set; } // PhotoType (length: 100)
        public string PhotoTypeCode { get; set; } // PhotoTypeCode (length: 100)
    }


    // PHV_PhotoStatusReport
    public partial class PHV_PhotoStatusReport : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public string ItemNo { get; set; } // ItemNo (length: 200)
        public int? ItemID { get; set; } // ItemID
        public string OrderNo { get; set; } // OrderNo (length: 50)
        public string PONo { get; set; } // PONo (length: 25)
        public int? Status { get; set; } // Status
        public string Division { get; set; } // Division (length: 4)
        public string DivisionDesc { get; set; } // DivisionDesc (length: 50)
        public string ProductCat { get; set; } // ProductCat (length: 3)
        public string ProductCategory { get; set; } // ProductCategory (length: 75)
        public int? Brand_ID { get; set; } // Brand_ID
        public string BrandName { get; set; } // BrandName (length: 50)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string Color { get; set; } // Color (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public System.DateTime? InvAvailableDate { get; set; } // InvAvailableDate
        public System.DateTime? EstSampleReadyDate { get; set; } // EstSampleReadyDate
        public System.DateTime? ActSampleReadyDate { get; set; } // ActSampleReadyDate
        public System.DateTime? ReqPhotoReadyDate { get; set; } // ReqPhotoReadyDate
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public System.DateTime? OrderReviewDate { get; set; } // OrderReviewDate
        public System.DateTime? CompleteDate { get; set; } // CompleteDate
        public string BriefDescription { get; set; } // BriefDescription (length: 200)
        public System.DateTime? InternalDeadlineDate { get; set; } // InternalDeadlineDate
        public System.DateTime? SchedShipDate { get; set; } // SchedShipDate
        public int? Merchant { get; set; } // Merchant
        public int? VisualMerchant { get; set; } // VisualMerchant
        public int? PM { get; set; } // PM
        public int? PA { get; set; } // PA
    }


    // PHV_UserPrivilegeMaincetance
    public partial class PHV_UserPrivilegeMaincetance : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int? T1User { get; set; } // T1User
        public int? T2User { get; set; } // T2User
        public int? T3User { get; set; } // T3User
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 64)
        public int? RoleType { get; set; } // RoleType
        public string Division { get; set; } // Division
        public string DivisionName { get; set; } // DivisionName
        public string BrandId { get; set; } // BrandId
        public string BrandName { get; set; } // BrandName
        public string ProdCategory { get; set; } // ProdCategory
        public string ProductCategory { get; set; } // ProductCategory
        public string PhotoTypeID { get; set; } // PhotoTypeID
        public string PhotoType { get; set; } // PhotoType
        public string T1UserEmail { get; set; } // T1UserEmail (length: 100)
        public string T2UserEmail { get; set; } // T2UserEmail (length: 100)
        public string T3UserEmail { get; set; } // T3UserEmail (length: 100)
    }

    #endregion

}
// </auto-generated>

