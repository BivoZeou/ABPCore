

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "src\ABPCore.EntityFrameworkCore\App.config"
//     Connection String Name: "BPConnectionString"
//     Connection String:      "Data Source=192.168.20.40;Initial Catalog=BusinessPlan;Persist Security Info=True;User ID=sa;password=**zapped**;;Connect Timeout=300"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Developer Edition (64-bit)
// Database Engine Edition: Enterprise



namespace ABPCore
{
    using System.Data.Common;
    using Abp.Domain.Entities;
	using Abp.EntityFrameworkCore;
	using Microsoft.EntityFrameworkCore;


    #region Database context


    public partial class BPDbContext : ExtendedDbContextBase
    {
        public virtual DbSet<BPEC_CusItemValidWeekSale> BPEC_CusItemValidWeekSales { get; set; }
        public virtual DbSet<BPEC_Customer> BPEC_Customers { get; set; }
        public virtual DbSet<BPEC_Expansion> BPEC_Expansions { get; set; }
        public virtual DbSet<BPEC_FineLineNote> BPEC_FineLineNotes { get; set; }
        public virtual DbSet<BPEC_ItemCalculativeProcess> BPEC_ItemCalculativeProcesses { get; set; }
        public virtual DbSet<BPEC_ItemDayLocInventory> BPEC_ItemDayLocInventories { get; set; }
        public virtual DbSet<BPEC_ItemHistory> BPEC_ItemHistories { get; set; }
        public virtual DbSet<BPEC_ItemLocAvgSale> BPEC_ItemLocAvgSales { get; set; }
        public virtual DbSet<BPEC_ItemLocAvgSaleTemp> BPEC_ItemLocAvgSaleTemps { get; set; }
        public virtual DbSet<BPEC_ItemOnOrder> BPEC_ItemOnOrders { get; set; }
        public virtual DbSet<BPEC_ItemSalesForecast> BPEC_ItemSalesForecasts { get; set; }
        public virtual DbSet<BPEC_ItemSalesForecastHistory> BPEC_ItemSalesForecastHistories { get; set; }
        public virtual DbSet<BPEC_ItemSalesForecastInitial> BPEC_ItemSalesForecastInitials { get; set; }
        public virtual DbSet<BPEC_ItemWeeklyBasicData> BPEC_ItemWeeklyBasicDatas { get; set; }
        public virtual DbSet<BPEC_NewProductIndex> BPEC_NewProductIndexes { get; set; }
        public virtual DbSet<BPEC_OrderPlanningHeader> BPEC_OrderPlanningHeaders { get; set; }
        public virtual DbSet<BPEC_OrderPlanningLineItem> BPEC_OrderPlanningLineItems { get; set; }
        public virtual DbSet<BPEC_Promotion> BPEC_Promotions { get; set; }
        public virtual DbSet<BPEC_RetailItem> BPEC_RetailItems { get; set; }
        public virtual DbSet<BPEC_RetailItemAlternateLoc> BPEC_RetailItemAlternateLocs { get; set; }
        public virtual DbSet<BPEC_RetailItemBPEC_Seasonality> BPEC_RetailItemBPEC_Seasonalities { get; set; }
        public virtual DbSet<BPEC_SafetyStockWO> BPEC_SafetyStockWOes { get; set; }
        public virtual DbSet<BPEC_Seasonal> BPEC_Seasonals { get; set; }
        public virtual DbSet<BPEC_Seasonality> BPEC_Seasonalities { get; set; }
        public virtual DbSet<BPEC_SeasonalityWeeklyData> BPEC_SeasonalityWeeklyDatas { get; set; }
        public virtual DbSet<BPEC_SendEmailHistory> BPEC_SendEmailHistories { get; set; }
        public virtual DbSet<BPEC_SysBlackoutPeriod> BPEC_SysBlackoutPeriods { get; set; }
        public virtual DbSet<BPEC_SysConfig> BPEC_SysConfigs { get; set; }
        public virtual DbSet<BPEC_SysLocPortWeeklyShipDay> BPEC_SysLocPortWeeklyShipDays { get; set; }
        public virtual DbSet<BPEC_SysLocTurnaroundTime> BPEC_SysLocTurnaroundTimes { get; set; }
        public virtual DbSet<BPEC_User_RetailItem> BPEC_User_RetailItems { get; set; }
        public virtual DbSet<BPECV_GetItemLocAvgSale> BPECV_GetItemLocAvgSales { get; set; }
        public virtual DbSet<BPECV_GetItemWeeklyBasicData> BPECV_GetItemWeeklyBasicDatas { get; set; }
        public virtual DbSet<BPECV_GetOrderPlanningLineItem> BPECV_GetOrderPlanningLineItems { get; set; }
        public virtual DbSet<BPECV_ItemValidWeekSaleCust> BPECV_ItemValidWeekSaleCusts { get; set; }
        public virtual DbSet<BPECV_ItemValidWeekSaleDetail> BPECV_ItemValidWeekSaleDetails { get; set; }
        public virtual DbSet<BPECV_ItemValidWeekSaleSum> BPECV_ItemValidWeekSaleSums { get; set; }
        public virtual DbSet<BPECV_ItemWeeklyIncoming> BPECV_ItemWeeklyIncomings { get; set; }
        public virtual DbSet<BPECV_RetailItem> BPECV_RetailItems { get; set; }

		public BPDbContext(DbContextOptions<BPDbContext> Options)
			: base(Options)
        {
        }

        //public override void Initialize()
        //{
        //    this.SetFilterGlobalParameterValue("SoftDelete", "IsDeleted", true);
        //    this.SetFilterScopedParameterValue("SoftDelete", "IsDeleted", true);
    
        //    this.SetFilterGlobalParameterValue("MustHaveTenant", "tenantId", AbpSession.TenantId ?? 0);
        //    this.SetFilterScopedParameterValue("MustHaveTenant", "tenantId", AbpSession.TenantId ?? 0);
    
        //    this.SetFilterGlobalParameterValue("MayHaveTenant", "tenantId", this.AbpSession.TenantId ?? 0);
        //    this.SetFilterScopedParameterValue("MayHaveTenant", "tenantId", this.AbpSession.TenantId ?? 0);
    
        //    base.Initialize();
        //}


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BPEC_CusItemValidWeekSale>(entity =>
            {
				entity.ToTable("BPEC_CusItemValidWeekSale");
				entity.HasKey(x => x.ItemWeekID);
				entity.Property(e => e.ItemWeekID).HasColumnName(@"ItemWeekID").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(40)").HasMaxLength(40);
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.LocCode).HasColumnName(@"LocCode").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.WeekYear).HasColumnName(@"WeekYear").HasColumnType("char(4)").IsRequired().IsUnicode(false).HasMaxLength(4);
				entity.Property(e => e.ValidWeek).HasColumnName(@"ValidWeek").HasColumnType("int").IsRequired();
				entity.Property(e => e.WeekBeginDate).HasColumnName(@"WeekBeginDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.WeekEndDate).HasColumnName(@"WeekEndDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.WeekAvgSaleQty).HasColumnName(@"WeekAvgSaleQty").HasColumnType("decimal");
				entity.Property(e => e.RealWeek).HasColumnName(@"RealWeek").HasColumnType("char(6)").IsUnicode(false).HasMaxLength(6);
				entity.Property(e => e.WeekRealSaleQty).HasColumnName(@"WeekRealSaleQty").HasColumnType("decimal");
				entity.Property(e => e.InvDay).HasColumnName(@"InvDay").HasColumnType("int");
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				entity.Property(e => e.SalesAmount).HasColumnName(@"SalesAmount").HasColumnType("decimal");
				});

            modelBuilder.Entity<BPEC_Customer>(entity =>
            {
				entity.ToTable("BPEC_Customer");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(32)").IsRequired().HasMaxLength(32);
				entity.Property(e => e.IsSupportMultipleLoc).HasColumnName(@"IsSupportMultipleLoc").HasColumnType("bit").IsRequired();
				});

            modelBuilder.Entity<BPEC_Expansion>(entity =>
            {
				entity.ToTable("BPEC_Expansion");
				entity.HasKey(x => new { x.ItemNo, x.DC, x.Week });
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.Value).HasColumnName(@"Value").HasColumnType("numeric").IsRequired();
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.DC).HasColumnName(@"DC").HasColumnType("nvarchar(8)").IsRequired().HasMaxLength(8);
				});

            modelBuilder.Entity<BPEC_FineLineNote>(entity =>
            {
				entity.ToTable("BPEC_FineLineNote");
				entity.HasKey(x => new { x.ItemID, x.Week });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(256)").HasMaxLength(256);
				});

            modelBuilder.Entity<BPEC_ItemCalculativeProcess>(entity =>
            {
				entity.ToTable("BPEC_ItemCalculativeProcess");
				entity.HasKey(x => new { x.Item_ID, x.CurrentWeek });
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.CurrentWeek).HasColumnName(@"CurrentWeek").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.FamilyNo).HasColumnName(@"FamilyNo").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.LeadTime).HasColumnName(@"LeadTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.LeadTimeOnOrder).HasColumnName(@"LeadTimeOnOrder").HasColumnType("int");
				entity.Property(e => e.LeadTimeIncoming).HasColumnName(@"LeadTimeIncoming").HasColumnType("int");
				entity.Property(e => e.OrderSpan).HasColumnName(@"OrderSpan").HasColumnType("int").IsRequired();
				entity.Property(e => e.MOQ).HasColumnName(@"MOQ").HasColumnType("int");
				entity.Property(e => e.A).HasColumnName(@"A").HasColumnType("int").IsRequired();
				entity.Property(e => e.CriticalQty).HasColumnName(@"CriticalQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.T1).HasColumnName(@"T1").HasColumnType("int");
				entity.Property(e => e.T1OnOrder).HasColumnName(@"T1OnOrder").HasColumnType("int");
				entity.Property(e => e.TotalAllocation).HasColumnName(@"TotalAllocation").HasColumnType("int");
				entity.Property(e => e.LeadTimeFinallyOnOrder).HasColumnName(@"LeadTimeFinallyOnOrder").HasColumnType("int");
				entity.Property(e => e.T2).HasColumnName(@"T2").HasColumnType("int");
				entity.Property(e => e.T2OnOrder).HasColumnName(@"T2OnOrder").HasColumnType("int");
				entity.Property(e => e.T2Incoming).HasColumnName(@"T2Incoming").HasColumnType("int");
				entity.Property(e => e.LeadTimeInputOrderQty).HasColumnName(@"LeadTimeInputOrderQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.T2InputOrderQty).HasColumnName(@"T2InputOrderQty").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_ItemDayLocInventory>(entity =>
            {
				entity.ToTable("BPEC_ItemDayLocInventory");
				entity.HasKey(x => new { x.ItemNo, x.LocCode, x.RecordDate });
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(40)").HasMaxLength(40);
				entity.Property(e => e.LocCode).HasColumnName(@"LocCode").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.InvQty).HasColumnName(@"InvQty").HasColumnType("decimal");
				entity.Property(e => e.RecordDate).HasColumnName(@"RecordDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.OnSeasonFlag).HasColumnName(@"OnSeasonFlag").HasColumnType("int");
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				entity.Property(e => e.SafetyStockQty).HasColumnName(@"SafetyStockQty").HasColumnType("decimal");
				});

            modelBuilder.Entity<BPEC_ItemHistory>(entity =>
            {
				entity.ToTable("BPEC_ItemHistory");
				entity.HasKey(x => new { x.ItemID, x.CurrentWeek });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.CurrentWeek).HasColumnName(@"CurrentWeek").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.MOQ).HasColumnName(@"MOQ").HasColumnType("int");
				entity.Property(e => e.ProductionLeadTime).HasColumnName(@"ProductionLeadTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.OrderSpan).HasColumnName(@"OrderSpan").HasColumnType("int").IsRequired();
				entity.Property(e => e.FamilyNo).HasColumnName(@"FamilyNo").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.Brand).HasColumnName(@"Brand").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Category).HasColumnName(@"Category").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.ItemStatus).HasColumnName(@"ItemStatus").HasColumnType("nvarchar(4)").IsRequired().HasMaxLength(4);
				entity.Property(e => e.ReviewStatus).HasColumnName(@"ReviewStatus").HasColumnType("bit").IsRequired();
				entity.Property(e => e.SysSalesQty).HasColumnName(@"SysSalesQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.InputSalesQty).HasColumnName(@"InputSalesQty").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.TransportationTime).HasColumnName(@"TransportationTime").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_ItemLocAvgSale>(entity =>
            {
				entity.ToTable("BPEC_ItemLocAvgSale");
				entity.HasKey(x => new { x.CustomerCode, x.ItemNo, x.LocCode, x.BusinessUnit_ID });
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(40)").HasMaxLength(40);
				entity.Property(e => e.LocCode).HasColumnName(@"LocCode").HasColumnType("char(4)").IsRequired().IsUnicode(false).HasMaxLength(4);
				entity.Property(e => e.CurAvgSaleQty).HasColumnName(@"CurAvgSaleQty").HasColumnType("decimal");
				entity.Property(e => e.CalDate).HasColumnName(@"CalDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_ItemLocAvgSaleTemp>(entity =>
            {
				entity.ToTable("BPEC_ItemLocAvgSaleTemp");
				entity.HasKey(x => new { x.CustomerCode, x.ItemNo, x.LocCode, x.BusinessUnit_ID });
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(40)").HasMaxLength(40);
				entity.Property(e => e.LocCode).HasColumnName(@"LocCode").HasColumnType("char(4)").IsRequired().IsUnicode(false).HasMaxLength(4);
				entity.Property(e => e.CurAvgSaleQty).HasColumnName(@"CurAvgSaleQty").HasColumnType("decimal");
				entity.Property(e => e.CalDate).HasColumnName(@"CalDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_ItemOnOrder>(entity =>
            {
				entity.ToTable("BPEC_ItemOnOrder");
				entity.HasKey(x => new { x.ItemID, x.Week });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.Qty).HasColumnName(@"Qty").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_ItemSalesForecast>(entity =>
            {
				entity.ToTable("BPEC_ItemSalesForecast");
				entity.HasKey(x => new { x.Item_ID, x.Week });
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.ETD).HasColumnName(@"ETD").HasColumnType("date").IsRequired();
				entity.Property(e => e.AWS).HasColumnName(@"AWS").HasColumnType("date").IsRequired();
				entity.Property(e => e.CurrentWeek).HasColumnName(@"CurrentWeek").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.FamilyNo).HasColumnName(@"FamilyNo").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.Inventory).HasColumnName(@"Inventory").HasColumnType("int").IsRequired();
				entity.Property(e => e.SysIncoming).HasColumnName(@"SysIncoming").HasColumnType("int");
				entity.Property(e => e.RequestOrderQty).HasColumnName(@"RequestOrderQty").HasColumnType("int");
				entity.Property(e => e.InputOrderQty).HasColumnName(@"InputOrderQty").HasColumnType("int");
				entity.Property(e => e.Inv_WOS).HasColumnName(@"Inv_WOS").HasColumnType("numeric");
				entity.Property(e => e.SalesForecast).HasColumnName(@"SalesForecast").HasColumnType("int").IsRequired();
				entity.Property(e => e.VirtualSalesFcst).HasColumnName(@"VirtualSalesFcst").HasColumnType("int").IsRequired();
				entity.Property(e => e.Seasonality).HasColumnName(@"Seasonality").HasColumnType("numeric");
				entity.Property(e => e.Promotion).HasColumnName(@"Promotion").HasColumnType("numeric");
				entity.Property(e => e.Expansion).HasColumnName(@"Expansion").HasColumnType("numeric");
				entity.Property(e => e.OnOrderQty).HasColumnName(@"OnOrderQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.isLeadTime).HasColumnName(@"isLeadTime").HasColumnType("bit").IsRequired();
				entity.Property(e => e.isOrderSpan).HasColumnName(@"isOrderSpan").HasColumnType("bit").IsRequired();
				entity.Property(e => e.isFirstSchedule).HasColumnName(@"isFirstSchedule").HasColumnType("bit").IsRequired();
				entity.Property(e => e.isSecondSchedule).HasColumnName(@"isSecondSchedule").HasColumnType("bit").IsRequired();
				entity.Property(e => e.Fabric).HasColumnName(@"Fabric").HasColumnType("bit");
				entity.Property(e => e.FabricQty).HasColumnName(@"FabricQty").HasColumnType("int");
				entity.Property(e => e.ShippingPort).HasColumnName(@"ShippingPort").HasColumnType("nvarchar(30)").HasMaxLength(30);
				});

            modelBuilder.Entity<BPEC_ItemSalesForecastHistory>(entity =>
            {
				entity.ToTable("BPEC_ItemSalesForecastHistory");
				entity.HasKey(x => new { x.Item_ID, x.CurrentWeek, x.Week });
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.CurrentWeek).HasColumnName(@"CurrentWeek").HasColumnType("int").IsRequired();
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.ETD).HasColumnName(@"ETD").HasColumnType("date").IsRequired();
				entity.Property(e => e.AWS).HasColumnName(@"AWS").HasColumnType("date").IsRequired();
				entity.Property(e => e.SysIncoming).HasColumnName(@"SysIncoming").HasColumnType("int");
				entity.Property(e => e.RequestOrderQty).HasColumnName(@"RequestOrderQty").HasColumnType("int");
				entity.Property(e => e.InputOrderQty).HasColumnName(@"InputOrderQty").HasColumnType("int");
				entity.Property(e => e.Inventory).HasColumnName(@"Inventory").HasColumnType("int").IsRequired();
				entity.Property(e => e.Inv_WOS).HasColumnName(@"Inv_WOS").HasColumnType("numeric");
				entity.Property(e => e.SalesForecast).HasColumnName(@"SalesForecast").HasColumnType("int").IsRequired();
				entity.Property(e => e.Seasonality).HasColumnName(@"Seasonality").HasColumnType("numeric");
				entity.Property(e => e.Promotion).HasColumnName(@"Promotion").HasColumnType("numeric");
				entity.Property(e => e.Expansion).HasColumnName(@"Expansion").HasColumnType("numeric");
				entity.Property(e => e.OnOrderQty).HasColumnName(@"OnOrderQty").HasColumnType("int");
				entity.Property(e => e.isLeadTime).HasColumnName(@"isLeadTime").HasColumnType("bit");
				entity.Property(e => e.isOrderSpan).HasColumnName(@"isOrderSpan").HasColumnType("bit");
				entity.Property(e => e.isFirstSchedule).HasColumnName(@"isFirstSchedule").HasColumnType("bit");
				entity.Property(e => e.isSecondSchedule).HasColumnName(@"isSecondSchedule").HasColumnType("bit");
				});

            modelBuilder.Entity<BPEC_ItemSalesForecastInitial>(entity =>
            {
				entity.ToTable("BPEC_ItemSalesForecastInitial");
				entity.HasKey(x => new { x.Item_ID, x.Week });
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.ETD).HasColumnName(@"ETD").HasColumnType("date").IsRequired();
				entity.Property(e => e.AWS).HasColumnName(@"AWS").HasColumnType("date").IsRequired();
				entity.Property(e => e.CurrentWeek).HasColumnName(@"CurrentWeek").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.FamilyNo).HasColumnName(@"FamilyNo").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.Inventory).HasColumnName(@"Inventory").HasColumnType("int").IsRequired();
				entity.Property(e => e.SysIncoming).HasColumnName(@"SysIncoming").HasColumnType("int");
				entity.Property(e => e.RequestOrderQty).HasColumnName(@"RequestOrderQty").HasColumnType("int");
				entity.Property(e => e.InputOrderQty).HasColumnName(@"InputOrderQty").HasColumnType("int");
				entity.Property(e => e.Inv_WOS).HasColumnName(@"Inv_WOS").HasColumnType("numeric");
				entity.Property(e => e.SalesForecast).HasColumnName(@"SalesForecast").HasColumnType("int").IsRequired();
				entity.Property(e => e.VirtualSalesFcst).HasColumnName(@"VirtualSalesFcst").HasColumnType("int").IsRequired();
				entity.Property(e => e.Seasonality).HasColumnName(@"Seasonality").HasColumnType("numeric");
				entity.Property(e => e.Promotion).HasColumnName(@"Promotion").HasColumnType("numeric");
				entity.Property(e => e.Expansion).HasColumnName(@"Expansion").HasColumnType("numeric");
				entity.Property(e => e.OnOrderQty).HasColumnName(@"OnOrderQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.isLeadTime).HasColumnName(@"isLeadTime").HasColumnType("bit").IsRequired();
				entity.Property(e => e.isOrderSpan).HasColumnName(@"isOrderSpan").HasColumnType("bit").IsRequired();
				entity.Property(e => e.isFirstSchedule).HasColumnName(@"isFirstSchedule").HasColumnType("bit").IsRequired();
				entity.Property(e => e.isSecondSchedule).HasColumnName(@"isSecondSchedule").HasColumnType("bit").IsRequired();
				entity.Property(e => e.Fabric).HasColumnName(@"Fabric").HasColumnType("bit");
				entity.Property(e => e.FabricQty).HasColumnName(@"FabricQty").HasColumnType("int");
				entity.Property(e => e.ShippingPort).HasColumnName(@"ShippingPort").HasColumnType("nvarchar(30)").HasMaxLength(30);
				});

            modelBuilder.Entity<BPEC_ItemWeeklyBasicData>(entity =>
            {
				entity.ToTable("BPEC_ItemWeeklyBasicData");
				entity.HasKey(x => new { x.Item_ID, x.CurrentWeek });
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.CurrentWeek).HasColumnName(@"CurrentWeek").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.SysSalesQty).HasColumnName(@"SysSalesQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.InputSalesQty).HasColumnName(@"InputSalesQty").HasColumnType("int");
				entity.Property(e => e.SysInventory).HasColumnName(@"SysInventory").HasColumnType("int").IsRequired();
				entity.Property(e => e.ReviewStatus).HasColumnName(@"ReviewStatus").HasColumnType("bit");
				});

            modelBuilder.Entity<BPEC_NewProductIndex>(entity =>
            {
				entity.ToTable("BPEC_NewProductIndex");
				entity.HasKey(x => x.WeekIndex);
				entity.Property(e => e.WeekIndex).HasColumnName(@"WeekIndex").HasColumnType("int").IsRequired();
				entity.Property(e => e.WeekDesc).HasColumnName(@"WeekDesc").HasColumnType("nvarchar(16)").IsRequired().HasMaxLength(16);
				entity.Property(e => e.Value).HasColumnName(@"Value").HasColumnType("numeric").IsRequired();
				});

            modelBuilder.Entity<BPEC_OrderPlanningHeader>(entity =>
            {
				entity.ToTable("BPEC_OrderPlanningHeader");
				entity.HasKey(x => x.OrderID);
				entity.Property(e => e.OrderID).HasColumnName(@"OrderID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.OrderNo).HasColumnName(@"OrderNo").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.OrderDate).HasColumnName(@"OrderDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
				entity.Property(e => e.ChinaShipDate).HasColumnName(@"ChinaShipDate").HasColumnType("datetime");
				entity.Property(e => e.AvailableWeekStartDate).HasColumnName(@"AvailableWeekStartDate").HasColumnType("datetime");
				entity.Property(e => e.AvailableWeek).HasColumnName(@"AvailableWeek").HasColumnType("nvarchar(10)").HasMaxLength(10);
				entity.Property(e => e.Message).HasColumnName(@"Message").HasColumnType("nvarchar(max)");
				entity.Property(e => e.PreparedBy).HasColumnName(@"PreparedBy").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
				entity.Property(e => e.CreateTime).HasColumnName(@"CreateTime").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.LastRevisedDate).HasColumnName(@"LastRevisedDate").HasColumnType("datetime");
				entity.Property(e => e.LastRevisedUserName).HasColumnName(@"LastRevisedUserName").HasColumnType("nvarchar(100)").HasMaxLength(100);
				});

            modelBuilder.Entity<BPEC_OrderPlanningLineItem>(entity =>
            {
				entity.ToTable("BPEC_OrderPlanningLineItems");
				entity.HasKey(x => new { x.Order_ID, x.OrderLineNo, x.Item_ID });
				entity.Property(e => e.Order_ID).HasColumnName(@"Order_ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.OrderLineNo).HasColumnName(@"OrderLineNo").HasColumnType("int").IsRequired();
				entity.Property(e => e.OrderNo).HasColumnName(@"OrderNo").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.LineItemStatus).HasColumnName(@"LineItemStatus").HasColumnType("int").IsRequired();
				entity.Property(e => e.RequestQty).HasColumnName(@"RequestQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.Quantity).HasColumnName(@"Quantity").HasColumnType("int").IsRequired();
				entity.Property(e => e.NextQty).HasColumnName(@"NextQty").HasColumnType("int");
				});

            modelBuilder.Entity<BPEC_Promotion>(entity =>
            {
				entity.ToTable("BPEC_Promotion");
				entity.HasKey(x => new { x.ItemNo, x.DC, x.Week });
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.Value).HasColumnName(@"Value").HasColumnType("numeric").IsRequired();
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.DC).HasColumnName(@"DC").HasColumnType("nvarchar(8)").IsRequired().HasMaxLength(8);
				});

            modelBuilder.Entity<BPEC_RetailItem>(entity =>
            {
				entity.ToTable("BPEC_RetailItem");
				entity.HasKey(x => new { x.ItemID, x.ItemNo, x.Loc, x.ProductionLeadTime, x.OrderSpan, x.FamilyNo, x.TransportationTime });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.ItemStatus).HasColumnName(@"ItemStatus").HasColumnType("nvarchar(10)").HasMaxLength(10);
				entity.Property(e => e.MOQ).HasColumnName(@"MOQ").HasColumnType("int");
				entity.Property(e => e.ProductionLeadTime).HasColumnName(@"ProductionLeadTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.OrderSpan).HasColumnName(@"OrderSpan").HasColumnType("int").IsRequired();
				entity.Property(e => e.FamilyNo).HasColumnName(@"FamilyNo").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.Brand).HasColumnName(@"Brand").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Category).HasColumnName(@"Category").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.TransportationTime).HasColumnName(@"TransportationTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.SalesPrice).HasColumnName(@"SalesPrice").HasColumnType("decimal");
				entity.Property(e => e.RetailPrice).HasColumnName(@"RetailPrice").HasColumnType("decimal");
				entity.Property(e => e.StartSeason).HasColumnName(@"StartSeason").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.ProducedIn).HasColumnName(@"ProducedIn").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.PM).HasColumnName(@"PM").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.CasePack).HasColumnName(@"CasePack").HasColumnType("int");
				entity.Property(e => e.Factory).HasColumnName(@"Factory").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Seasonal).HasColumnName(@"Seasonal").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Productionteam).HasColumnName(@"Productionteam").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.TagOnFamily).HasColumnName(@"TagOnFamily").HasColumnType("nvarchar(10)").HasMaxLength(10);
				entity.Property(e => e.ShippingPort).HasColumnName(@"ShippingPort").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.InitialDDfcst).HasColumnName(@"InitialDDfcst").HasColumnType("decimal");
				entity.Property(e => e.DCStartDate).HasColumnName(@"DCStartDate").HasColumnType("datetime");
				entity.Property(e => e.DCEndDate).HasColumnName(@"DCEndDate").HasColumnType("datetime");
				entity.Property(e => e.PackCode).HasColumnName(@"PackCode").HasColumnType("int");
				});

            modelBuilder.Entity<BPEC_RetailItemAlternateLoc>(entity =>
            {
				entity.ToTable("BPEC_RetailItemAlternateLoc");
				entity.HasKey(x => new { x.ItemID, x.Loc });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("nvarchar(3)").IsRequired().HasMaxLength(3);
				entity.Property(e => e.Priority).HasColumnName(@"Priority").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_RetailItemBPEC_Seasonality>(entity =>
            {
				entity.ToTable("BPEC_RetailItemBPEC_Seasonality");
				entity.HasKey(x => x.ItemID);
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.Seasonality_ID).HasColumnName(@"Seasonality_ID").HasColumnType("nvarchar(30)").HasMaxLength(30);
				});

            modelBuilder.Entity<BPEC_SafetyStockWO>(entity =>
            {
				entity.ToTable("BPEC_SafetyStockWOS");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.AvgWklySalesMinQty).HasColumnName(@"AvgWklySalesMinQty").HasColumnType("int");
				entity.Property(e => e.AvgWklySalesMaxQty).HasColumnName(@"AvgWklySalesMaxQty").HasColumnType("int");
				entity.Property(e => e.SafetyStockWOS).HasColumnName(@"SafetyStockWOS").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_Seasonal>(entity =>
            {
				entity.ToTable("BPEC_Seasonal");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Seasonal).HasColumnName(@"Seasonal").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.LastUpdatedDate).HasColumnName(@"LastUpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.LastUpdatedBy).HasColumnName(@"LastUpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<BPEC_Seasonality>(entity =>
            {
				entity.ToTable("BPEC_Seasonality");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Category).HasColumnName(@"Category").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.WareHouse).HasColumnName(@"WareHouse").HasColumnType("nvarchar(32)").HasMaxLength(32);
				});

            modelBuilder.Entity<BPEC_SeasonalityWeeklyData>(entity =>
            {
				entity.ToTable("BPEC_SeasonalityWeeklyData");
				entity.HasKey(x => new { x.Seasonality_ID, x.Week });
				entity.Property(e => e.Seasonality_ID).HasColumnName(@"Seasonality_ID").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Week).HasColumnName(@"Week").HasColumnType("int").IsRequired();
				entity.Property(e => e.Value).HasColumnName(@"Value").HasColumnType("numeric").IsRequired();
				});

            modelBuilder.Entity<BPEC_SendEmailHistory>(entity =>
            {
				entity.ToTable("BPEC_SendEmailHistory");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Receiver).HasColumnName(@"Receiver").HasColumnType("nvarchar(256)").IsRequired().HasMaxLength(256);
				entity.Property(e => e.Project_ID).HasColumnName(@"Project_ID").HasColumnType("nvarchar(512)").IsRequired().HasMaxLength(512);
				entity.Property(e => e.SendDate).HasColumnName(@"SendDate").HasColumnType("datetime").IsRequired();
				});

            modelBuilder.Entity<BPEC_SysBlackoutPeriod>(entity =>
            {
				entity.ToTable("BPEC_SysBlackoutPeriod");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.ProducedIn).HasColumnName(@"ProducedIn").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.BlackoutPeriodStartDate).HasColumnName(@"BlackoutPeriodStartDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.BlackoutPeriodEndDate).HasColumnName(@"BlackoutPeriodEndDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				});

            modelBuilder.Entity<BPEC_SysConfig>(entity =>
            {
				entity.ToTable("BPEC_SysConfig");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.BlackoutPeriodStartDate).HasColumnName(@"BlackoutPeriodStartDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.BlackoutPeriodEndDate).HasColumnName(@"BlackoutPeriodEndDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.InterimTime).HasColumnName(@"InterimTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.CalcTime).HasColumnName(@"CalcTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.IncomingAvailableDateAdjust).HasColumnName(@"IncomingAvailableDateAdjust").HasColumnType("int").IsRequired();
				entity.Property(e => e.POExpiredDuration).HasColumnName(@"POExpiredDuration").HasColumnType("int").IsRequired();
				entity.Property(e => e.POEstimatedDeliveryTime).HasColumnName(@"POEstimatedDeliveryTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.AvgSaleDiffRate).HasColumnName(@"AvgSaleDiffRate").HasColumnType("numeric").IsRequired();
				entity.Property(e => e.Non_DropShipAveWklySalesQty).HasColumnName(@"Non_DropShipAveWklySalesQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.WeeklyRegularShipment).HasColumnName(@"WeeklyRegularShipment").HasColumnType("int").IsRequired();
				entity.Property(e => e.SafetyInv_WOS).HasColumnName(@"SafetyInv_WOS").HasColumnType("int");
				entity.Property(e => e.FinelineMin).HasColumnName(@"FinelineMin").HasColumnType("decimal");
				entity.Property(e => e.FinelineMax).HasColumnName(@"FinelineMax").HasColumnType("decimal");
				entity.Property(e => e.BPItemAverageSalesCalculationRunDay).HasColumnName(@"BPItemAverageSalesCalculationRunDay").HasColumnType("nvarchar(32)").HasMaxLength(32);
				entity.Property(e => e.BPInventoryCalculationRunDay).HasColumnName(@"BPInventoryCalculationRunDay").HasColumnType("nvarchar(32)").HasMaxLength(32);
				entity.Property(e => e.IsCalculateAllItemYearSale).HasColumnName(@"IsCalculateAllItemYearSale").HasColumnType("bit");
				});

            modelBuilder.Entity<BPEC_SysLocPortWeeklyShipDay>(entity =>
            {
				entity.ToTable("BPEC_SysLocPortWeeklyShipDay");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("nvarchar(4)").IsRequired().HasMaxLength(4);
				entity.Property(e => e.ProducedIn).HasColumnName(@"ProducedIn").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.WeeklyRegularShipment).HasColumnName(@"WeeklyRegularShipment").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_SysLocTurnaroundTime>(entity =>
            {
				entity.ToTable("BPEC_SysLocTurnaroundTime");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("nvarchar(4)").IsRequired().HasMaxLength(4);
				entity.Property(e => e.Days).HasColumnName(@"Days").HasColumnType("int").IsRequired();
				entity.Property(e => e.WeeklyRegularShipment).HasColumnName(@"WeeklyRegularShipment").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPEC_User_RetailItem>(entity =>
            {
				entity.ToTable("BPEC_User_RetailItem");
				entity.HasKey(x => new { x.Item_ID, x.User_ID });
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.User_ID).HasColumnName(@"User_ID").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPECV_GetItemLocAvgSale>(entity =>
            {
				entity.ToTable("BPECV_GetItemLocAvgSale");
				entity.HasKey(x => new { x.ItemID, x.ItemNo, x.Loc });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.CurAvgSaleQty).HasColumnName(@"CurAvgSaleQty").HasColumnType("decimal");
				});

            modelBuilder.Entity<BPECV_GetItemWeeklyBasicData>(entity =>
            {
				entity.ToTable("BPECV_GetItemWeeklyBasicData");
				entity.HasKey(x => new { x.ItemID, x.ItemNo, x.Loc, x.ProductionLeadTime, x.TransportationTime, x.OrderSpan, x.FamilyNo, x.Inv_Qty, x.SysSalesQty, x.ReviewStatus, x.TurnaroundTime });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.CasePack).HasColumnName(@"CasePack").HasColumnType("int");
				entity.Property(e => e.ItemStatus).HasColumnName(@"ItemStatus").HasColumnType("nvarchar(10)").HasMaxLength(10);
				entity.Property(e => e.ProductionLeadTime).HasColumnName(@"ProductionLeadTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.TransportationTime).HasColumnName(@"TransportationTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.MOQ).HasColumnName(@"MOQ").HasColumnType("int");
				entity.Property(e => e.OrderSpan).HasColumnName(@"OrderSpan").HasColumnType("int").IsRequired();
				entity.Property(e => e.FamilyNo).HasColumnName(@"FamilyNo").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.Brand).HasColumnName(@"Brand").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Category).HasColumnName(@"Category").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.CurrentWeek).HasColumnName(@"CurrentWeek").HasColumnType("int");
				entity.Property(e => e.Inv_Qty).HasColumnName(@"Inv_Qty").HasColumnType("int").IsRequired();
				entity.Property(e => e.AveWeeklySalesQty).HasColumnName(@"AveWeeklySalesQty").HasColumnType("int");
				entity.Property(e => e.SysSalesQty).HasColumnName(@"SysSalesQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.InputSalesQty).HasColumnName(@"InputSalesQty").HasColumnType("int");
				entity.Property(e => e.STDWOS).HasColumnName(@"STDWOS").HasColumnType("int");
				entity.Property(e => e.ReviewStatus).HasColumnName(@"ReviewStatus").HasColumnType("bit").IsRequired();
				entity.Property(e => e.TurnaroundTime).HasColumnName(@"TurnaroundTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.ProducedIn).HasColumnName(@"ProducedIn").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.DCStartWeek).HasColumnName(@"DCStartWeek").HasColumnType("int");
				entity.Property(e => e.DCEndWeek).HasColumnName(@"DCEndWeek").HasColumnType("int");
				});

            modelBuilder.Entity<BPECV_GetOrderPlanningLineItem>(entity =>
            {
				entity.ToTable("BPECV_GetOrderPlanningLineItems");
				entity.HasKey(x => new { x.Order_ID, x.OrderLineNo, x.ItemNo, x.Customer, x.LineItemStatus, x.RtQty, x.Item_ID, x.Loc, x.Qty });
				entity.Property(e => e.Order_ID).HasColumnName(@"Order_ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.OrderLineNo).HasColumnName(@"OrderLineNo").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.LineItemStatus).HasColumnName(@"LineItemStatus").HasColumnType("int").IsRequired();
				entity.Property(e => e.LineItemStatusName).HasColumnName(@"LineItemStatusName").HasColumnType("varchar(9)").IsUnicode(false).HasMaxLength(9);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Category).HasColumnName(@"Category").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.RequestQty).HasColumnName(@"RequestQty").HasColumnType("nvarchar(max)");
				entity.Property(e => e.Quantity).HasColumnName(@"Quantity").HasColumnType("nvarchar(max)");
				entity.Property(e => e.RtQty).HasColumnName(@"RtQty").HasColumnType("int").IsRequired();
				entity.Property(e => e.Productionteam).HasColumnName(@"Productionteam").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProducedIn).HasColumnName(@"ProducedIn").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.Factory).HasColumnName(@"Factory").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Item_ID).HasColumnName(@"Item_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.Qty).HasColumnName(@"Qty").HasColumnType("int").IsRequired();
				});

            modelBuilder.Entity<BPECV_ItemValidWeekSaleCust>(entity =>
            {
				entity.ToTable("BPECV_ItemValidWeekSaleCust");
				entity.HasKey(x => new { x.CustomerCode, x.ItemNo });
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(40)").HasMaxLength(40);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.ProuCatDesc).HasColumnName(@"ProuCatDesc").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.ProdCatCode).HasColumnName(@"ProdCatCode").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(198)").HasMaxLength(198);
				entity.Property(e => e.CalDate).HasColumnName(@"CalDate").HasColumnType("datetime");
				entity.Property(e => e.CurAvgSaleQty).HasColumnName(@"CurAvgSaleQty").HasColumnType("decimal");
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				});

            modelBuilder.Entity<BPECV_ItemValidWeekSaleDetail>(entity =>
            {
				entity.ToTable("BPECV_ItemValidWeekSaleDetail");
				entity.HasKey(x => new { x.CustomerCode, x.ItemNo, x.CalDate });
				entity.Property(e => e.CustomerCode).HasColumnName(@"CustomerCode").HasColumnType("nvarchar(20)").IsRequired().HasMaxLength(20);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(40)").HasMaxLength(40);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.ProuCatDesc).HasColumnName(@"ProuCatDesc").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.ProdCatCode).HasColumnName(@"ProdCatCode").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(198)").HasMaxLength(198);
				entity.Property(e => e.CurAvgSaleQty).HasColumnName(@"CurAvgSaleQty").HasColumnType("decimal");
				entity.Property(e => e.CalDate).HasColumnName(@"CalDate").HasColumnType("datetime").IsRequired();
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				});

            modelBuilder.Entity<BPECV_ItemValidWeekSaleSum>(entity =>
            {
				entity.ToTable("BPECV_ItemValidWeekSaleSum");
				entity.HasKey(x => x.ItemNo);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.UPC).HasColumnName(@"UPC").HasColumnType("nvarchar(40)").HasMaxLength(40);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(1500)").HasMaxLength(1500);
				entity.Property(e => e.ProuCatDesc).HasColumnName(@"ProuCatDesc").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.ProdCatCode).HasColumnName(@"ProdCatCode").HasColumnType("nchar(3)").HasMaxLength(3);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(198)").HasMaxLength(198);
				entity.Property(e => e.CalDate).HasColumnName(@"CalDate").HasColumnType("datetime");
				entity.Property(e => e.CurAvgSaleQty).HasColumnName(@"CurAvgSaleQty").HasColumnType("decimal");
				entity.Property(e => e.BusinessUnit_ID).HasColumnName(@"BusinessUnit_ID").HasColumnType("int");
				});

            modelBuilder.Entity<BPECV_ItemWeeklyIncoming>(entity =>
            {
				entity.ToTable("BPECV_ItemWeeklyIncoming");
				entity.HasKey(x => x.Fabric);
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("nvarchar(6)").HasMaxLength(6);
				entity.Property(e => e.WeekIndex).HasColumnName(@"WeekIndex").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.Qty).HasColumnName(@"Qty").HasColumnType("decimal");
				entity.Property(e => e.Fabric).HasColumnName(@"Fabric").HasColumnType("bit").IsRequired();
				});

            modelBuilder.Entity<BPECV_RetailItem>(entity =>
            {
				entity.ToTable("BPECV_RetailItems");
				entity.HasKey(x => new { x.ItemID, x.ItemNo, x.FamilyNo, x.Loc, x.ProductionLeadTime, x.TransportationTime, x.OrderSpan });
				entity.Property(e => e.ItemID).HasColumnName(@"ItemID").HasColumnType("int").IsRequired();
				entity.Property(e => e.ItemNo).HasColumnName(@"ItemNo").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
				entity.Property(e => e.FamilyNo).HasColumnName(@"FamilyNo").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
				entity.Property(e => e.Brand).HasColumnName(@"Brand").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Pattern).HasColumnName(@"Pattern").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Category).HasColumnName(@"Category").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Color).HasColumnName(@"Color").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Size).HasColumnName(@"Size").HasColumnType("nvarchar(75)").HasMaxLength(75);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(250)").HasMaxLength(250);
				entity.Property(e => e.PackCode).HasColumnName(@"PackCode").HasColumnType("varchar(10)").IsUnicode(false).HasMaxLength(10);
				entity.Property(e => e.Loc).HasColumnName(@"Loc").HasColumnType("char(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
				entity.Property(e => e.DCStartDate).HasColumnName(@"DCStartDate").HasColumnType("varchar(100)").IsUnicode(false).HasMaxLength(100);
				entity.Property(e => e.DCEndDate).HasColumnName(@"DCEndDate").HasColumnType("varchar(100)").IsUnicode(false).HasMaxLength(100);
				entity.Property(e => e.CasePack).HasColumnName(@"CasePack").HasColumnType("int");
				entity.Property(e => e.SalesPrice).HasColumnName(@"SalesPrice").HasColumnType("decimal");
				entity.Property(e => e.RetailPrice).HasColumnName(@"RetailPrice").HasColumnType("decimal");
				entity.Property(e => e.StartSeason).HasColumnName(@"StartSeason").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("varchar(13)").IsUnicode(false).HasMaxLength(13);
				entity.Property(e => e.StatusCode).HasColumnName(@"StatusCode").HasColumnType("nvarchar(10)").HasMaxLength(10);
				entity.Property(e => e.MOQ).HasColumnName(@"MOQ").HasColumnType("int");
				entity.Property(e => e.ProducedIn).HasColumnName(@"ProducedIn").HasColumnType("nvarchar(20)").HasMaxLength(20);
				entity.Property(e => e.ProductionLeadTime).HasColumnName(@"ProductionLeadTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.TransportationTime).HasColumnName(@"TransportationTime").HasColumnType("int").IsRequired();
				entity.Property(e => e.OrderSpan).HasColumnName(@"OrderSpan").HasColumnType("int").IsRequired();
				entity.Property(e => e.Seasonality_ID).HasColumnName(@"Seasonality_ID").HasColumnType("nvarchar(30)").HasMaxLength(30);
				entity.Property(e => e.InitialDDfcst).HasColumnName(@"InitialDDfcst").HasColumnType("decimal");
				entity.Property(e => e.User_ID).HasColumnName(@"User_ID").HasColumnType("int");
				entity.Property(e => e.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Email).HasColumnName(@"Email").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.PM).HasColumnName(@"PM").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Factory).HasColumnName(@"Factory").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Seasonal).HasColumnName(@"Seasonal").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Productionteam).HasColumnName(@"Productionteam").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.TagOnFamily).HasColumnName(@"TagOnFamily").HasColumnType("nvarchar(10)").HasMaxLength(10);
				});

            		}



        // Stored Procedures

    }
    #endregion

    #region POCO classes


    // BPEC_CusItemValidWeekSale
    public partial class BPEC_CusItemValidWeekSale : IDbEntity
    {
        public string ItemWeekID { get; set; } // ItemWeekID (Primary key) (length: 100)
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string UPC { get; set; } // UPC (length: 40)
        public string CustomerCode { get; set; } // CustomerCode (length: 20)
        public string LocCode { get; set; } // LocCode (length: 3)
        public string WeekYear { get; set; } // WeekYear (length: 4)
        public int ValidWeek { get; set; } // ValidWeek
        public System.DateTime WeekBeginDate { get; set; } // WeekBeginDate
        public System.DateTime WeekEndDate { get; set; } // WeekEndDate
        public decimal? WeekAvgSaleQty { get; set; } // WeekAvgSaleQty
        public string RealWeek { get; set; } // RealWeek (length: 6)
        public decimal? WeekRealSaleQty { get; set; } // WeekRealSaleQty
        public int? InvDay { get; set; } // InvDay
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
        public decimal? SalesAmount { get; set; } // SalesAmount
    }


    // BPEC_Customer
    public partial class BPEC_Customer : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string CustomerCode { get; set; } // CustomerCode (length: 32)
        public bool IsSupportMultipleLoc { get; set; } = true; // IsSupportMultipleLoc
    }


    // BPEC_Expansion
    public partial class BPEC_Expansion : IDbEntity
    {
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public int Week { get; set; } // Week (Primary key)
        public decimal Value { get; set; } // Value
        public string Note { get; set; } // Note (length: 200)
        public string DC { get; set; } = "LVM"; // DC (Primary key) (length: 8)
    }


    // BPEC_FineLineNote
    public partial class BPEC_FineLineNote : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public int Week { get; set; } // Week (Primary key)
        public string Note { get; set; } // Note (length: 256)
    }


    // BPEC_ItemCalculativeProcess
    public partial class BPEC_ItemCalculativeProcess : IDbEntity
    {
        public int Item_ID { get; set; } // Item_ID (Primary key)

        ///<summary>
        /// 当前周
        ///</summary>
        public int CurrentWeek { get; set; } // CurrentWeek (Primary key)
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 3)
        public string FamilyNo { get; set; } // FamilyNo (length: 10)

        ///<summary>
        /// 当前周下单 未来到货的周
        ///</summary>
        public int LeadTime { get; set; } // LeadTime

        ///<summary>
        /// 不考虑MOQ LeadTime应该有的下单量
        ///</summary>
        public int? LeadTimeOnOrder { get; set; } // LeadTimeOnOrder

        ///<summary>
        /// 未来到货的数量
        ///</summary>
        public int? LeadTimeIncoming { get; set; } // LeadTimeIncoming

        ///<summary>
        /// 订单间隔周
        ///</summary>
        public int OrderSpan { get; set; } // OrderSpan

        ///<summary>
        /// 最小下单量
        ///</summary>
        public int? MOQ { get; set; } // MOQ

        ///<summary>
        /// family的总下单量
        ///</summary>
        public int A { get; set; } // A

        ///<summary>
        /// 13周* 平均销量
        ///</summary>
        public int CriticalQty { get; set; } // CriticalQty

        ///<summary>
        /// 第一个船期
        ///</summary>
        public int? T1 { get; set; } // T1

        ///<summary>
        /// 第一个船期的下单量
        ///</summary>
        public int? T1OnOrder { get; set; } // T1OnOrder

        ///<summary>
        /// family总下单量
        ///</summary>
        public int? TotalAllocation { get; set; } // TotalAllocation

        ///<summary>
        /// LeadTime最终下单量
        ///</summary>
        public int? LeadTimeFinallyOnOrder { get; set; } // LeadTimeFinallyOnOrder

        ///<summary>
        /// 第二个船期
        ///</summary>
        public int? T2 { get; set; } // T2

        ///<summary>
        /// 第二个船期下单量
        ///</summary>
        public int? T2OnOrder { get; set; } // T2OnOrder

        ///<summary>
        /// 第二个船期的 到货数量
        ///</summary>
        public int? T2Incoming { get; set; } // T2Incoming

        ///<summary>
        /// leadTime 用户输入数量
        ///</summary>
        public int LeadTimeInputOrderQty { get; set; } = -1; // LeadTimeInputOrderQty

        ///<summary>
        /// 第二个船期 用户输入数量
        ///</summary>
        public int T2InputOrderQty { get; set; } = -1; // T2InputOrderQty
    }


    // BPEC_ItemDayLocInventory
    public partial class BPEC_ItemDayLocInventory : IDbEntity
    {
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string UPC { get; set; } // UPC (length: 40)
        public string LocCode { get; set; } // LocCode (Primary key) (length: 3)
        public decimal? InvQty { get; set; } // InvQty
        public System.DateTime RecordDate { get; set; } // RecordDate (Primary key)
        public int? OnSeasonFlag { get; set; } // OnSeasonFlag
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
        public decimal? SafetyStockQty { get; set; } // SafetyStockQty
    }


    // BPEC_ItemHistory
    public partial class BPEC_ItemHistory : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public int CurrentWeek { get; set; } // CurrentWeek (Primary key)
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 3)
        public int? MOQ { get; set; } // MOQ
        public int ProductionLeadTime { get; set; } // ProductionLeadTime
        public int OrderSpan { get; set; } // OrderSpan
        public string FamilyNo { get; set; } // FamilyNo (length: 10)
        public string Brand { get; set; } // Brand (length: 50)
        public string Pattern { get; set; } // Pattern (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public string Category { get; set; } // Category (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public string Description { get; set; } // Description (length: 250)
        public string ItemStatus { get; set; } // ItemStatus (length: 4)
        public bool ReviewStatus { get; set; } // ReviewStatus
        public int SysSalesQty { get; set; } // SysSalesQty
        public int? InputSalesQty { get; set; } // InputSalesQty
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public int TransportationTime { get; set; } = 3; // TransportationTime

        // Reverse navigation

        /// <summary>
        /// Child BPEC_ItemSalesForecastHistories where [BPEC_ItemSalesForecastHistory].([CurrentWeek], [Item_ID]) point to this entity (FK_BPEC_ItemSalesForecastHistory_BPEC_ItemHistory)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BPEC_ItemSalesForecastHistory> BPEC_ItemSalesForecastHistories { get; set; } = new System.Collections.Generic.List<BPEC_ItemSalesForecastHistory>(); // BPEC_ItemSalesForecastHistory.FK_BPEC_ItemSalesForecastHistory_BPEC_ItemHistory
    }


    // BPEC_ItemLocAvgSale
    public partial class BPEC_ItemLocAvgSale : IDbEntity
    {
        public string CustomerCode { get; set; } // CustomerCode (Primary key) (length: 20)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string UPC { get; set; } // UPC (length: 40)
        public string LocCode { get; set; } // LocCode (Primary key) (length: 4)
        public decimal? CurAvgSaleQty { get; set; } // CurAvgSaleQty
        public System.DateTime CalDate { get; set; } // CalDate
        public int BusinessUnit_ID { get; set; } // BusinessUnit_ID (Primary key)
    }


    // BPEC_ItemLocAvgSaleTemp
    public partial class BPEC_ItemLocAvgSaleTemp : IDbEntity
    {
        public string CustomerCode { get; set; } // CustomerCode (Primary key) (length: 20)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string UPC { get; set; } // UPC (length: 40)
        public string LocCode { get; set; } // LocCode (Primary key) (length: 4)
        public decimal? CurAvgSaleQty { get; set; } // CurAvgSaleQty
        public System.DateTime CalDate { get; set; } // CalDate
        public int BusinessUnit_ID { get; set; } // BusinessUnit_ID (Primary key)
    }


    // BPEC_ItemOnOrder
    public partial class BPEC_ItemOnOrder : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public int Week { get; set; } // Week (Primary key)
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 3)
        public int Qty { get; set; } // Qty
    }


    // BPEC_ItemSalesForecast
    public partial class BPEC_ItemSalesForecast : IDbEntity
    {
        public int Item_ID { get; set; } // Item_ID (Primary key)

        ///<summary>
        /// 预测周
        ///</summary>
        public int Week { get; set; } // Week (Primary key)
        public System.DateTime ETD { get; set; } // ETD
        public System.DateTime AWS { get; set; } // AWS

        ///<summary>
        /// 当前周
        ///</summary>
        public int CurrentWeek { get; set; } // CurrentWeek
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 3)
        public string FamilyNo { get; set; } // FamilyNo (length: 10)

        ///<summary>
        /// 库存
        ///</summary>
        public int Inventory { get; set; } // Inventory

        ///<summary>
        /// 系统到货数量
        ///</summary>
        public int? SysIncoming { get; set; } // SysIncoming

        ///<summary>
        /// 推荐需要下单数量
        ///</summary>
        public int? RequestOrderQty { get; set; } = 0; // RequestOrderQty

        ///<summary>
        /// 用户页面手动输入数量
        ///</summary>
        public int? InputOrderQty { get; set; } // InputOrderQty

        ///<summary>
        /// 安全库存
        ///</summary>
        public decimal? Inv_WOS { get; set; } // Inv_WOS

        ///<summary>
        /// 实际销量
        ///</summary>
        public int SalesForecast { get; set; } // SalesForecast

        ///<summary>
        /// 预测销量
        ///</summary>
        public int VirtualSalesFcst { get; set; } // VirtualSalesFcst

        ///<summary>
        /// 季节因子
        ///</summary>
        public decimal? Seasonality { get; set; } // Seasonality

        ///<summary>
        /// 促销因子
        ///</summary>
        public decimal? Promotion { get; set; } // Promotion

        ///<summary>
        /// 膨胀因子
        ///</summary>
        public decimal? Expansion { get; set; } // Expansion

        ///<summary>
        /// 未来订单数量
        ///</summary>
        public int OnOrderQty { get; set; } // OnOrderQty

        ///<summary>
        /// 是否是当前周下单 未来到货的周
        ///</summary>
        public bool isLeadTime { get; set; } // isLeadTime

        ///<summary>
        /// 是否是订单间隔周
        ///</summary>
        public bool isOrderSpan { get; set; } = false; // isOrderSpan

        ///<summary>
        /// 是否是第一个船期
        ///</summary>
        public bool isFirstSchedule { get; set; } = true; // isFirstSchedule

        ///<summary>
        /// 是否是第二个船期
        ///</summary>
        public bool isSecondSchedule { get; set; } = true; // isSecondSchedule
        public bool? Fabric { get; set; } // Fabric
        public int? FabricQty { get; set; } // FabricQty

        ///<summary>
        /// 出运港口
        ///</summary>
        public string ShippingPort { get; set; } // ShippingPort (length: 30)
    }


    // BPEC_ItemSalesForecastHistory
    public partial class BPEC_ItemSalesForecastHistory : IDbEntity
    {
        public int Item_ID { get; set; } // Item_ID (Primary key)
        public int CurrentWeek { get; set; } // CurrentWeek (Primary key)
        public int Week { get; set; } // Week (Primary key)
        public System.DateTime ETD { get; set; } // ETD
        public System.DateTime AWS { get; set; } // AWS
        public int? SysIncoming { get; set; } // SysIncoming
        public int? RequestOrderQty { get; set; } = 0; // RequestOrderQty
        public int? InputOrderQty { get; set; } // InputOrderQty
        public int Inventory { get; set; } // Inventory
        public decimal? Inv_WOS { get; set; } // Inv_WOS
        public int SalesForecast { get; set; } // SalesForecast
        public decimal? Seasonality { get; set; } // Seasonality
        public decimal? Promotion { get; set; } // Promotion
        public decimal? Expansion { get; set; } // Expansion
        public int? OnOrderQty { get; set; } // OnOrderQty
        public bool? isLeadTime { get; set; } // isLeadTime
        public bool? isOrderSpan { get; set; } // isOrderSpan
        public bool? isFirstSchedule { get; set; } // isFirstSchedule
        public bool? isSecondSchedule { get; set; } // isSecondSchedule

        // Foreign keys

        /// <summary>
        /// Parent BPEC_ItemHistory pointed by [BPEC_ItemSalesForecastHistory].([Item_ID], [CurrentWeek]) (FK_BPEC_ItemSalesForecastHistory_BPEC_ItemHistory)
        /// </summary>
        public virtual BPEC_ItemHistory BPEC_ItemHistory { get; set; } // FK_BPEC_ItemSalesForecastHistory_BPEC_ItemHistory
    }


    // BPEC_ItemSalesForecastInitial
    public partial class BPEC_ItemSalesForecastInitial : IDbEntity
    {
        public int Item_ID { get; set; } // Item_ID (Primary key)
        public int Week { get; set; } // Week (Primary key)
        public System.DateTime ETD { get; set; } // ETD
        public System.DateTime AWS { get; set; } // AWS
        public int CurrentWeek { get; set; } // CurrentWeek
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 3)
        public string FamilyNo { get; set; } // FamilyNo (length: 10)
        public int Inventory { get; set; } // Inventory
        public int? SysIncoming { get; set; } // SysIncoming
        public int? RequestOrderQty { get; set; } = 0; // RequestOrderQty
        public int? InputOrderQty { get; set; } // InputOrderQty
        public decimal? Inv_WOS { get; set; } // Inv_WOS
        public int SalesForecast { get; set; } // SalesForecast
        public int VirtualSalesFcst { get; set; } // VirtualSalesFcst
        public decimal? Seasonality { get; set; } // Seasonality
        public decimal? Promotion { get; set; } // Promotion
        public decimal? Expansion { get; set; } // Expansion
        public int OnOrderQty { get; set; } // OnOrderQty
        public bool isLeadTime { get; set; } // isLeadTime
        public bool isOrderSpan { get; set; } = false; // isOrderSpan
        public bool isFirstSchedule { get; set; } = false; // isFirstSchedule
        public bool isSecondSchedule { get; set; } = false; // isSecondSchedule
        public bool? Fabric { get; set; } // Fabric
        public int? FabricQty { get; set; } // FabricQty
        public string ShippingPort { get; set; } // ShippingPort (length: 30)
    }


    // BPEC_ItemWeeklyBasicData
    public partial class BPEC_ItemWeeklyBasicData : IDbEntity
    {
        public int Item_ID { get; set; } // Item_ID (Primary key)

        ///<summary>
        /// 当前周
        ///</summary>
        public int CurrentWeek { get; set; } // CurrentWeek (Primary key)
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 3)

        ///<summary>
        /// 年度平均销量
        ///</summary>
        public int SysSalesQty { get; set; } // SysSalesQty

        ///<summary>
        /// 用户输入的销售数量
        ///</summary>
        public int? InputSalesQty { get; set; } // InputSalesQty

        ///<summary>
        /// 当前库存
        ///</summary>
        public int SysInventory { get; set; } // SysInventory

        ///<summary>
        /// 计划是否完成
        ///</summary>
        public bool? ReviewStatus { get; set; } // ReviewStatus
    }


    // BPEC_NewProductIndex
    public partial class BPEC_NewProductIndex : IDbEntity
    {
        public int WeekIndex { get; set; } // WeekIndex (Primary key)
        public string WeekDesc { get; set; } // WeekDesc (length: 16)
        public decimal Value { get; set; } // Value
    }


    // BPEC_OrderPlanningHeader
    public partial class BPEC_OrderPlanningHeader : IDbEntity
    {
        public System.Guid OrderID { get; set; } // OrderID (Primary key)
        public string OrderNo { get; set; } // OrderNo (length: 20)
        public System.DateTime OrderDate { get; set; } // OrderDate
        public int Status { get; set; } // Status
        public System.DateTime? ChinaShipDate { get; set; } // ChinaShipDate
        public System.DateTime? AvailableWeekStartDate { get; set; } // AvailableWeekStartDate
        public string AvailableWeek { get; set; } // AvailableWeek (length: 10)
        public string Message { get; set; } // Message
        public string PreparedBy { get; set; } // PreparedBy (length: 100)
        public System.DateTime CreateTime { get; set; } // CreateTime
        public System.DateTime? LastRevisedDate { get; set; } // LastRevisedDate
        public string LastRevisedUserName { get; set; } // LastRevisedUserName (length: 100)
    }


    // BPEC_OrderPlanningLineItems
    public partial class BPEC_OrderPlanningLineItem : IDbEntity
    {
        public System.Guid Order_ID { get; set; } // Order_ID (Primary key)
        public int OrderLineNo { get; set; } // OrderLineNo (Primary key)
        public string OrderNo { get; set; } // OrderNo (length: 20)
        public int Item_ID { get; set; } // Item_ID (Primary key)
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 3)
        public string Customer { get; set; } // Customer (length: 20)
        public int LineItemStatus { get; set; } // LineItemStatus
        public int RequestQty { get; set; } // RequestQty
        public int Quantity { get; set; } // Quantity
        public int? NextQty { get; set; } // NextQty
    }


    // BPEC_Promotion
    public partial class BPEC_Promotion : IDbEntity
    {
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public int Week { get; set; } // Week (Primary key)
        public decimal Value { get; set; } // Value
        public string Note { get; set; } // Note (length: 200)
        public string DC { get; set; } = "LVM"; // DC (Primary key) (length: 8)
    }


    // BPEC_RetailItem
    public partial class BPEC_RetailItem : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string Loc { get; set; } // Loc (Primary key) (length: 3)
        public string ItemStatus { get; set; } // ItemStatus (length: 10)
        public int? MOQ { get; set; } // MOQ
        public int ProductionLeadTime { get; set; } // ProductionLeadTime (Primary key)
        public int OrderSpan { get; set; } // OrderSpan (Primary key)
        public string FamilyNo { get; set; } // FamilyNo (Primary key) (length: 10)
        public string Brand { get; set; } // Brand (length: 50)
        public string Pattern { get; set; } // Pattern (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public string Division { get; set; } // Division (length: 75)
        public string Category { get; set; } // Category (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public string Description { get; set; } // Description (length: 250)
        public int TransportationTime { get; set; } = 3; // TransportationTime (Primary key)
        public decimal? SalesPrice { get; set; } // SalesPrice
        public decimal? RetailPrice { get; set; } // RetailPrice
        public string StartSeason { get; set; } // StartSeason (length: 20)
        public string ProducedIn { get; set; } // ProducedIn (length: 20)
        public string PM { get; set; } // PM (length: 50)
        public int? CasePack { get; set; } // CasePack
        public string Factory { get; set; } // Factory (length: 50)
        public string Seasonal { get; set; } // Seasonal (length: 50)
        public string Productionteam { get; set; } // Productionteam (length: 50)
        public string TagOnFamily { get; set; } // TagOnFamily (length: 10)
        public string ShippingPort { get; set; } // ShippingPort (length: 30)
        public decimal? InitialDDfcst { get; set; } // InitialDDfcst
        public System.DateTime? DCStartDate { get; set; } // DCStartDate
        public System.DateTime? DCEndDate { get; set; } // DCEndDate
        public int? PackCode { get; set; } // PackCode
    }


    // BPEC_RetailItemAlternateLoc
    public partial class BPEC_RetailItemAlternateLoc : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public string Loc { get; set; } // Loc (Primary key) (length: 3)
        public int Priority { get; set; } // Priority
    }


    // BPEC_RetailItemBPEC_Seasonality
    public partial class BPEC_RetailItemBPEC_Seasonality : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Seasonality_ID { get; set; } // Seasonality_ID (length: 30)
    }


    // BPEC_SafetyStockWOS
    public partial class BPEC_SafetyStockWO : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public int? AvgWklySalesMinQty { get; set; } // AvgWklySalesMinQty
        public int? AvgWklySalesMaxQty { get; set; } // AvgWklySalesMaxQty
        public int SafetyStockWOS { get; set; } // SafetyStockWOS
    }


    // BPEC_Seasonal
    public partial class BPEC_Seasonal : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Seasonal { get; set; } // Seasonal (length: 50)
        public System.DateTime? LastUpdatedDate { get; set; } // LastUpdatedDate
        public string LastUpdatedBy { get; set; } // LastUpdatedBy (length: 50)
    }


    // BPEC_Seasonality
    public partial class BPEC_Seasonality : IDbEntity
    {
        public string ID { get; set; } // ID (Primary key) (length: 30)
        public string Division { get; set; } // Division (length: 75)
        public string Category { get; set; } // Category (length: 75)
        public string Size { get; set; } // Size (length: 100)
        public string Note { get; set; } // Note (length: 200)
        public string WareHouse { get; set; } // WareHouse (length: 32)
    }


    // BPEC_SeasonalityWeeklyData
    public partial class BPEC_SeasonalityWeeklyData : IDbEntity
    {
        public string Seasonality_ID { get; set; } // Seasonality_ID (Primary key) (length: 30)
        public int Week { get; set; } // Week (Primary key)
        public decimal Value { get; set; } // Value
    }


    // BPEC_SendEmailHistory
    public partial class BPEC_SendEmailHistory : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Receiver { get; set; } // Receiver (length: 256)
        public string Project_ID { get; set; } // Project_ID (length: 512)
        public System.DateTime SendDate { get; set; } // SendDate
    }


    // BPEC_SysBlackoutPeriod
    public partial class BPEC_SysBlackoutPeriod : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string ProducedIn { get; set; } // ProducedIn (length: 30)
        public string BlackoutPeriodStartDate { get; set; } // BlackoutPeriodStartDate (length: 10)
        public string BlackoutPeriodEndDate { get; set; } // BlackoutPeriodEndDate (length: 10)
    }


    // BPEC_SysConfig
    public partial class BPEC_SysConfig : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public string BlackoutPeriodStartDate { get; set; } // BlackoutPeriodStartDate (length: 10)
        public string BlackoutPeriodEndDate { get; set; } // BlackoutPeriodEndDate (length: 10)
        public int InterimTime { get; set; } // InterimTime
        public int CalcTime { get; set; } // CalcTime
        public int IncomingAvailableDateAdjust { get; set; } // IncomingAvailableDateAdjust
        public int POExpiredDuration { get; set; } // POExpiredDuration
        public int POEstimatedDeliveryTime { get; set; } // POEstimatedDeliveryTime
        public decimal AvgSaleDiffRate { get; set; } = 0.25m; // AvgSaleDiffRate
        public int Non_DropShipAveWklySalesQty { get; set; } = 15; // Non_DropShipAveWklySalesQty
        public int WeeklyRegularShipment { get; set; } = 6; // WeeklyRegularShipment
        public int? SafetyInv_WOS { get; set; } // SafetyInv_WOS
        public decimal? FinelineMin { get; set; } // FinelineMin
        public decimal? FinelineMax { get; set; } // FinelineMax
        public string BPItemAverageSalesCalculationRunDay { get; set; } // BPItemAverageSalesCalculationRunDay (length: 32)
        public string BPInventoryCalculationRunDay { get; set; } // BPInventoryCalculationRunDay (length: 32)
        public bool? IsCalculateAllItemYearSale { get; set; } // IsCalculateAllItemYearSale
    }


    // BPEC_SysLocPortWeeklyShipDay
    public partial class BPEC_SysLocPortWeeklyShipDay : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Loc { get; set; } // Loc (length: 4)
        public string ProducedIn { get; set; } // ProducedIn (length: 30)
        public int WeeklyRegularShipment { get; set; } = 6; // WeeklyRegularShipment
    }


    // BPEC_SysLocTurnaroundTime
    public partial class BPEC_SysLocTurnaroundTime : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Loc { get; set; } // Loc (length: 4)
        public int Days { get; set; } // Days
        public int WeeklyRegularShipment { get; set; } = 6; // WeeklyRegularShipment
    }


    // BPEC_User_RetailItem
    public partial class BPEC_User_RetailItem : IDbEntity
    {
        public int Item_ID { get; set; } // Item_ID (Primary key)
        public int User_ID { get; set; } // User_ID (Primary key)
    }


    // BPECV_GetItemLocAvgSale
    public partial class BPECV_GetItemLocAvgSale : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string Loc { get; set; } // Loc (Primary key) (length: 3)
        public decimal? CurAvgSaleQty { get; set; } // CurAvgSaleQty
    }


    // BPECV_GetItemWeeklyBasicData
    public partial class BPECV_GetItemWeeklyBasicData : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string Loc { get; set; } // Loc (Primary key) (length: 3)
        public int? CasePack { get; set; } // CasePack
        public string ItemStatus { get; set; } // ItemStatus (length: 10)
        public int ProductionLeadTime { get; set; } // ProductionLeadTime (Primary key)
        public int TransportationTime { get; set; } // TransportationTime (Primary key)
        public int? MOQ { get; set; } // MOQ
        public int OrderSpan { get; set; } // OrderSpan (Primary key)
        public string FamilyNo { get; set; } // FamilyNo (Primary key) (length: 10)
        public string Brand { get; set; } // Brand (length: 50)
        public string Pattern { get; set; } // Pattern (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public string Division { get; set; } // Division (length: 75)
        public string Category { get; set; } // Category (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public string Description { get; set; } // Description (length: 250)
        public int? CurrentWeek { get; set; } // CurrentWeek
        public int Inv_Qty { get; set; } // Inv_Qty (Primary key)
        public int? AveWeeklySalesQty { get; set; } // AveWeeklySalesQty
        public int SysSalesQty { get; set; } // SysSalesQty (Primary key)
        public int? InputSalesQty { get; set; } // InputSalesQty
        public int? STDWOS { get; set; } // STDWOS
        public bool ReviewStatus { get; set; } // ReviewStatus (Primary key)
        public int TurnaroundTime { get; set; } // TurnaroundTime (Primary key)
        public string ProducedIn { get; set; } // ProducedIn (length: 20)
        public int? DCStartWeek { get; set; } // DCStartWeek
        public int? DCEndWeek { get; set; } // DCEndWeek
    }


    // BPECV_GetOrderPlanningLineItems
    public partial class BPECV_GetOrderPlanningLineItem : IDbEntity
    {
        public System.Guid Order_ID { get; set; } // Order_ID (Primary key)
        public int OrderLineNo { get; set; } // OrderLineNo (Primary key)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string Customer { get; set; } // Customer (Primary key) (length: 20)
        public int LineItemStatus { get; set; } // LineItemStatus (Primary key)
        public string LineItemStatusName { get; set; } // LineItemStatusName (length: 9)
        public string Pattern { get; set; } // Pattern (length: 75)
        public string Category { get; set; } // Category (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public string Description { get; set; } // Description (length: 250)
        public string RequestQty { get; set; } // RequestQty
        public string Quantity { get; set; } // Quantity
        public int RtQty { get; set; } // RtQty (Primary key)
        public string Productionteam { get; set; } // Productionteam (length: 50)
        public string ProducedIn { get; set; } // ProducedIn (length: 20)
        public string Factory { get; set; } // Factory (length: 50)
        public int Item_ID { get; set; } // Item_ID (Primary key)
        public string Loc { get; set; } // Loc (Primary key) (length: 3)
        public int Qty { get; set; } // Qty (Primary key)
    }


    // BPECV_ItemValidWeekSaleCust
    public partial class BPECV_ItemValidWeekSaleCust : IDbEntity
    {
        public string CustomerCode { get; set; } // CustomerCode (Primary key) (length: 20)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string UPC { get; set; } // UPC (length: 40)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string ProuCatDesc { get; set; } // ProuCatDesc (length: 75)
        public string ProdCatCode { get; set; } // ProdCatCode (length: 3)
        public string Description { get; set; } // Description (length: 198)
        public System.DateTime? CalDate { get; set; } // CalDate
        public decimal? CurAvgSaleQty { get; set; } // CurAvgSaleQty
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
    }


    // BPECV_ItemValidWeekSaleDetail
    public partial class BPECV_ItemValidWeekSaleDetail : IDbEntity
    {
        public string CustomerCode { get; set; } // CustomerCode (Primary key) (length: 20)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string UPC { get; set; } // UPC (length: 40)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string ProuCatDesc { get; set; } // ProuCatDesc (length: 75)
        public string ProdCatCode { get; set; } // ProdCatCode (length: 3)
        public string Description { get; set; } // Description (length: 198)
        public decimal? CurAvgSaleQty { get; set; } // CurAvgSaleQty
        public System.DateTime CalDate { get; set; } // CalDate (Primary key)
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
    }


    // BPECV_ItemValidWeekSaleSum
    public partial class BPECV_ItemValidWeekSaleSum : IDbEntity
    {
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string UPC { get; set; } // UPC (length: 40)
        public string Pattern { get; set; } // Pattern (length: 1500)
        public string ProuCatDesc { get; set; } // ProuCatDesc (length: 75)
        public string ProdCatCode { get; set; } // ProdCatCode (length: 3)
        public string Description { get; set; } // Description (length: 198)
        public System.DateTime? CalDate { get; set; } // CalDate
        public decimal? CurAvgSaleQty { get; set; } // CurAvgSaleQty
        public int? BusinessUnit_ID { get; set; } // BusinessUnit_ID
    }


    // BPECV_ItemWeeklyIncoming
    public partial class BPECV_ItemWeeklyIncoming : IDbEntity
    {
        public string ItemNo { get; set; } // ItemNo (length: 30)
        public string Loc { get; set; } // Loc (length: 6)
        public string WeekIndex { get; set; } // WeekIndex (length: 20)
        public decimal? Qty { get; set; } // Qty
        public bool Fabric { get; set; } // Fabric (Primary key)
    }


    // BPECV_RetailItems
    public partial class BPECV_RetailItem : IDbEntity
    {
        public int ItemID { get; set; } // ItemID (Primary key)
        public string ItemNo { get; set; } // ItemNo (Primary key) (length: 30)
        public string FamilyNo { get; set; } // FamilyNo (Primary key) (length: 10)
        public string Brand { get; set; } // Brand (length: 50)
        public string Division { get; set; } // Division (length: 75)
        public string Pattern { get; set; } // Pattern (length: 75)
        public string Category { get; set; } // Category (length: 75)
        public string Color { get; set; } // Color (length: 75)
        public string Size { get; set; } // Size (length: 75)
        public string Description { get; set; } // Description (length: 250)
        public string PackCode { get; set; } // PackCode (length: 10)
        public string Loc { get; set; } // Loc (Primary key) (length: 3)
        public string DCStartDate { get; set; } // DCStartDate (length: 100)
        public string DCEndDate { get; set; } // DCEndDate (length: 100)
        public int? CasePack { get; set; } // CasePack
        public decimal? SalesPrice { get; set; } // SalesPrice
        public decimal? RetailPrice { get; set; } // RetailPrice
        public string StartSeason { get; set; } // StartSeason (length: 20)
        public string Status { get; set; } // Status (length: 13)
        public string StatusCode { get; set; } // StatusCode (length: 10)
        public int? MOQ { get; set; } // MOQ
        public string ProducedIn { get; set; } // ProducedIn (length: 20)
        public int ProductionLeadTime { get; set; } // ProductionLeadTime (Primary key)
        public int TransportationTime { get; set; } // TransportationTime (Primary key)
        public int OrderSpan { get; set; } // OrderSpan (Primary key)
        public string Seasonality_ID { get; set; } // Seasonality_ID (length: 30)
        public decimal? InitialDDfcst { get; set; } // InitialDDfcst
        public int? User_ID { get; set; } // User_ID
        public string UserName { get; set; } // UserName (length: 50)
        public string Email { get; set; } // Email (length: 100)
        public string PM { get; set; } // PM (length: 50)
        public string Factory { get; set; } // Factory (length: 50)
        public string Seasonal { get; set; } // Seasonal (length: 50)
        public string Productionteam { get; set; } // Productionteam (length: 50)
        public string TagOnFamily { get; set; } // TagOnFamily (length: 10)
    }

    #endregion

}
// </auto-generated>

