

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "src\ABPCore.EntityFrameworkCore\App.config"
//     Connection String Name: "PMConnectionString"
//     Connection String:      "Data Source=192.168.20.17;Initial Catalog=ProjectManagement;Persist Security Info=True;User ID=sa;password=**zapped**;;Connect Timeout=300"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Enterprise Edition (64-bit)
// Database Engine Edition: Enterprise



namespace ABPCore
{
    using System.Data.Common;
    using Abp.Domain.Entities;
	using Abp.EntityFrameworkCore;
	using Microsoft.EntityFrameworkCore;


    #region Database context


    public partial class ProjectManageDbContext : ExtendedDbContextBase
    {
        public virtual DbSet<EvaluationDetail> EvaluationDetails { get; set; }
        public virtual DbSet<EvaluationDetailItem> EvaluationDetailItems { get; set; }
        public virtual DbSet<EvaluationEmail> EvaluationEmails { get; set; }
        public virtual DbSet<EvaluationEmailTo> EvaluationEmailToes { get; set; }
        public virtual DbSet<PM_Develop> PM_Develops { get; set; }
        public virtual DbSet<PM_DevelopEvaluation> PM_DevelopEvaluations { get; set; }
        public virtual DbSet<PM_DevelopFile> PM_DevelopFiles { get; set; }
        public virtual DbSet<PM_DevelopQuotation> PM_DevelopQuotations { get; set; }
        public virtual DbSet<PM_DevelopRemark> PM_DevelopRemarks { get; set; }
        public virtual DbSet<PM_DevelopTask> PM_DevelopTasks { get; set; }
        public virtual DbSet<PM_Document> PM_Documents { get; set; }
        public virtual DbSet<PM_DocumentsMaintenance> PM_DocumentsMaintenances { get; set; }
        public virtual DbSet<PM_EmailTemplate> PM_EmailTemplates { get; set; }
        public virtual DbSet<PM_Expense> PM_Expenses { get; set; }
        public virtual DbSet<PM_ExpenseDivision> PM_ExpenseDivisions { get; set; }
        public virtual DbSet<PM_Group> PM_Groups { get; set; }
        public virtual DbSet<PM_GroupMaintenance> PM_GroupMaintenances { get; set; }
        public virtual DbSet<PM_LaborCost> PM_LaborCosts { get; set; }
        public virtual DbSet<PM_LaborCostType> PM_LaborCostTypes { get; set; }
        public virtual DbSet<PM_LevelMaintenance> PM_LevelMaintenances { get; set; }
        public virtual DbSet<PM_MaintenanceQuotation> PM_MaintenanceQuotations { get; set; }
        public virtual DbSet<PM_MaintennanceCustomer> PM_MaintennanceCustomers { get; set; }
        public virtual DbSet<PM_MaintennanceStatu> PM_MaintennanceStatus { get; set; }
        public virtual DbSet<PM_MaintennanceType> PM_MaintennanceTypes { get; set; }
        public virtual DbSet<PM_ProjectGlossary> PM_ProjectGlossaries { get; set; }
        public virtual DbSet<PM_ProjectGlossaryContent> PM_ProjectGlossaryContents { get; set; }
        public virtual DbSet<PM_ProjectManager> PM_ProjectManagers { get; set; }
        public virtual DbSet<PM_ProjectQuotation> PM_ProjectQuotations { get; set; }
        public virtual DbSet<PM_QuotationOtherFee> PM_QuotationOtherFees { get; set; }
        public virtual DbSet<PM_QuotationPayment> PM_QuotationPayments { get; set; }
        public virtual DbSet<PM_QuotationRemark> PM_QuotationRemarks { get; set; }
        public virtual DbSet<PM_QuoteByHeadCount> PM_QuoteByHeadCounts { get; set; }
        public virtual DbSet<PM_QuoteByProjectCost> PM_QuoteByProjectCosts { get; set; }
        public virtual DbSet<PM_QuoteBySaleRevenue> PM_QuoteBySaleRevenues { get; set; }
        public virtual DbSet<PM_RevenueType> PM_RevenueTypes { get; set; }
        public virtual DbSet<PM_RunningAccount> PM_RunningAccounts { get; set; }
        public virtual DbSet<PM_StoryArea> PM_StoryAreas { get; set; }
        public virtual DbSet<PM_SubLevelMaintenance> PM_SubLevelMaintenances { get; set; }
        public virtual DbSet<PM_System> PM_Systems { get; set; }
        public virtual DbSet<PM_SystemMaintenance> PM_SystemMaintenances { get; set; }
        public virtual DbSet<PM_TemplateSetting> PM_TemplateSettings { get; set; }
        public virtual DbSet<PM_TemplateSettingAttach> PM_TemplateSettingAttaches { get; set; }
        public virtual DbSet<PM_TransactionHistory> PM_TransactionHistories { get; set; }
        public virtual DbSet<PM_TransactionHistoryInstead> PM_TransactionHistoryInsteads { get; set; }
        public virtual DbSet<PM_User> PM_Users { get; set; }
        public virtual DbSet<PM_UserTask> PM_UserTasks { get; set; }
        public virtual DbSet<V_DevelopmentQuotation> V_DevelopmentQuotations { get; set; }
        public virtual DbSet<V_EvaluationList> V_EvaluationLists { get; set; }
        public virtual DbSet<V_EvaluationView> V_EvaluationViews { get; set; }
        public virtual DbSet<V_Expense> V_Expenses { get; set; }
        public virtual DbSet<V_GlossaryScore> V_GlossaryScores { get; set; }
        public virtual DbSet<V_LaborCost> V_LaborCosts { get; set; }
        public virtual DbSet<V_MaintenanceQuotation> V_MaintenanceQuotations { get; set; }
        public virtual DbSet<V_PaymentProcess> V_PaymentProcesses { get; set; }
        public virtual DbSet<V_ProfitLossReport> V_ProfitLossReports { get; set; }
        public virtual DbSet<V_ProjectEvaluation> V_ProjectEvaluations { get; set; }
        public virtual DbSet<V_ProjectQuotation> V_ProjectQuotations { get; set; }
        public virtual DbSet<V_ProjectSummaryReport> V_ProjectSummaryReports { get; set; }
        public virtual DbSet<V_Quotation> V_Quotations { get; set; }
        public virtual DbSet<V_RevenueOutlook> V_RevenueOutlooks { get; set; }
        public virtual DbSet<V_SumDevelopQuotation> V_SumDevelopQuotations { get; set; }
        public virtual DbSet<V_Task> V_Tasks { get; set; }

		public ProjectManageDbContext(DbContextOptions<ProjectManageDbContext> Options)
			: base(Options)
        {
        }

        //public override void Initialize()
        //{
        //    this.SetFilterGlobalParameterValue("SoftDelete", "IsDeleted", true);
        //    this.SetFilterScopedParameterValue("SoftDelete", "IsDeleted", true);
    
        //    this.SetFilterGlobalParameterValue("MustHaveTenant", "tenantId", AbpSession.TenantId ?? 0);
        //    this.SetFilterScopedParameterValue("MustHaveTenant", "tenantId", AbpSession.TenantId ?? 0);
    
        //    this.SetFilterGlobalParameterValue("MayHaveTenant", "tenantId", this.AbpSession.TenantId ?? 0);
        //    this.SetFilterScopedParameterValue("MayHaveTenant", "tenantId", this.AbpSession.TenantId ?? 0);
    
        //    base.Initialize();
        //}


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EvaluationDetail>(entity =>
            {
				entity.ToTable("EvaluationDetail");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.DevelopmentID).HasColumnName(@"DevelopmentID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.TotalCount).HasColumnName(@"TotalCount").HasColumnType("nvarchar(10)").HasMaxLength(10);
				entity.Property(e => e.CommentsSuggestion).HasColumnName(@"CommentsSuggestion").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.Submit).HasColumnName(@"Submit").HasColumnType("bit");
				entity.Property(e => e.GlossaryType).HasColumnName(@"GlossaryType").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				});

            modelBuilder.Entity<EvaluationDetailItem>(entity =>
            {
				entity.ToTable("EvaluationDetailItem");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.EvaluationDetail_ID).HasColumnName(@"EvaluationDetail_ID").HasColumnType("int");
				entity.Property(e => e.GlossaryID).HasColumnName(@"GlossaryID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.Score).HasColumnName(@"Score").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				});

            modelBuilder.Entity<EvaluationEmail>(entity =>
            {
				entity.ToTable("EvaluationEmail");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.DevelopmentID).HasColumnName(@"DevelopmentID").HasColumnType("nvarchar(36)").IsRequired().HasMaxLength(36);
				entity.Property(e => e.Type).HasColumnName(@"Type").HasColumnType("int");
				entity.Property(e => e.Glossary).HasColumnName(@"Glossary").HasColumnType("nvarchar(36)").HasMaxLength(36);
				entity.Property(e => e.EmailSubject).HasColumnName(@"EmailSubject").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				});

            modelBuilder.Entity<EvaluationEmailTo>(entity =>
            {
				entity.ToTable("EvaluationEmailTo");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.EvaluationEmail_ID).HasColumnName(@"EvaluationEmail_ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.EmailUserName).HasColumnName(@"EmailUserName").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.EmailTo).HasColumnName(@"EmailTo").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.EvaluationStatus).HasColumnName(@"EvaluationStatus").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				});

            modelBuilder.Entity<PM_Develop>(entity =>
            {
				entity.ToTable("PM_Develop");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.EstStartDate).HasColumnName(@"EstStartDate").HasColumnType("datetime");
				entity.Property(e => e.System).HasColumnName(@"System").HasColumnType("int");
				entity.Property(e => e.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstEndDate).HasColumnName(@"EstEndDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectManager).HasColumnName(@"ProjectManager").HasColumnType("int");
				entity.Property(e => e.KeyUser).HasColumnName(@"KeyUser").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ActualEndDate).HasColumnName(@"ActualEndDate").HasColumnType("datetime");
				entity.Property(e => e.TotalHeadcount).HasColumnName(@"TotalHeadcount").HasColumnType("decimal");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.EstDevlDays).HasColumnName(@"EstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.ActualDevlDays).HasColumnName(@"ActualDevlDays").HasColumnType("decimal");
				entity.Property(e => e.UserStoryNo).HasColumnName(@"UserStoryNo").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.StoryArea).HasColumnName(@"StoryArea").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.TotalDevlAmount).HasColumnName(@"TotalDevlAmount").HasColumnType("decimal");
				entity.Property(e => e.ActualStartDate).HasColumnName(@"ActualStartDate").HasColumnType("datetime");
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				entity.Property(e => e.StoryDetail).HasColumnName(@"StoryDetail").HasColumnType("nvarchar(max)");
				entity.Property(e => e.RevenueType).HasColumnName(@"RevenueType").HasColumnType("int");
				entity.Property(e => e.IsLinkedUserStory).HasColumnName(@"IsLinkedUserStory").HasColumnType("bit");
				entity.Property(e => e.ProjectBriefDesc).HasColumnName(@"ProjectBriefDesc").HasColumnType("nvarchar(max)");
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectSpecialty).HasColumnName(@"ProjectSpecialty").HasColumnType("int");
				entity.Property(e => e.ProjectLoad).HasColumnName(@"ProjectLoad").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ProjectOwnBy).HasColumnName(@"ProjectOwnBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ApprovedDate).HasColumnName(@"ApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.AssignedUsers).HasColumnName(@"AssignedUsers").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.ReqApprovedDate).HasColumnName(@"ReqApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluationStatus).HasColumnName(@"EvaluationStatus").HasColumnType("int");
				entity.Property(e => e.IsDocumentComplete).HasColumnName(@"IsDocumentComplete").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_DevelopEvaluation>(entity =>
            {
				entity.ToTable("PM_DevelopEvaluation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.DevelopmentID).HasColumnName(@"DevelopmentID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DeliveryTimelinessRatio).HasColumnName(@"DeliveryTimelinessRatio").HasColumnType("decimal");
				entity.Property(e => e.DeliveryTimelinessScore).HasColumnName(@"DeliveryTimelinessScore").HasColumnType("decimal");
				entity.Property(e => e.DeliveryTimelinessNotes).HasColumnName(@"DeliveryTimelinessNotes").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.QualityRatio).HasColumnName(@"QualityRatio").HasColumnType("decimal");
				entity.Property(e => e.QualityScore).HasColumnName(@"QualityScore").HasColumnType("decimal");
				entity.Property(e => e.QualityNotes).HasColumnName(@"QualityNotes").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.CustomerSatisfactionRatio).HasColumnName(@"CustomerSatisfactionRatio").HasColumnType("decimal");
				entity.Property(e => e.CustomerSatisfactionScore).HasColumnName(@"CustomerSatisfactionScore").HasColumnType("decimal");
				entity.Property(e => e.CustomerSatisfactionNotes).HasColumnName(@"CustomerSatisfactionNotes").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.FileIntegrityRatio).HasColumnName(@"FileIntegrityRatio").HasColumnType("decimal");
				entity.Property(e => e.FileIntegrityScore).HasColumnName(@"FileIntegrityScore").HasColumnType("decimal");
				entity.Property(e => e.FileIntegrityNotes).HasColumnName(@"FileIntegrityNotes").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.SelfRatio).HasColumnName(@"SelfRatio").HasColumnType("decimal");
				entity.Property(e => e.SelfScore).HasColumnName(@"SelfScore").HasColumnType("decimal");
				entity.Property(e => e.SelfNotes).HasColumnName(@"SelfNotes").HasColumnType("nvarchar(512)").HasMaxLength(512);
				});

            modelBuilder.Entity<PM_DevelopFile>(entity =>
            {
				entity.ToTable("PM_DevelopFile");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ServerPath).HasColumnName(@"ServerPath").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.Comments).HasColumnName(@"Comments").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_DevelopQuotation>(entity =>
            {
				entity.ToTable("PM_DevelopQuotation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.QuotationNo).HasColumnName(@"QuotationNo").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.RiskFactor).HasColumnName(@"RiskFactor").HasColumnType("decimal");
				entity.Property(e => e.Headcount).HasColumnName(@"Headcount").HasColumnType("decimal");
				entity.Property(e => e.TeamLeader).HasColumnName(@"TeamLeader").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstDevlDays).HasColumnName(@"EstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.QuotationDate).HasColumnName(@"QuotationDate").HasColumnType("datetime");
				entity.Property(e => e.DevlAmount).HasColumnName(@"DevlAmount").HasColumnType("decimal");
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(max)");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("int");
				entity.Property(e => e.PMDQ_Group).HasColumnName(@"PMDQ_Group").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				});

            modelBuilder.Entity<PM_DevelopRemark>(entity =>
            {
				entity.ToTable("PM_DevelopRemarks");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.Topic).HasColumnName(@"Topic").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.Content).HasColumnName(@"Content").HasColumnType("nvarchar(1024)").HasMaxLength(1024);
				entity.Property(e => e.ShowInQuotation).HasColumnName(@"ShowInQuotation").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_DevelopTask>(entity =>
            {
				entity.ToTable("PM_DevelopTask");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.BriefDesc).HasColumnName(@"BriefDesc").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.TaskDetail).HasColumnName(@"TaskDetail").HasColumnType("nvarchar(768)").HasMaxLength(768);
				entity.Property(e => e.TaskGroup).HasColumnName(@"TaskGroup").HasColumnType("int");
				entity.Property(e => e.SchedStartDate).HasColumnName(@"SchedStartDate").HasColumnType("datetime");
				entity.Property(e => e.SchedEndDate).HasColumnName(@"SchedEndDate").HasColumnType("datetime");
				entity.Property(e => e.TaskEstDevlDays).HasColumnName(@"TaskEstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.ActStartDate).HasColumnName(@"ActStartDate").HasColumnType("datetime");
				entity.Property(e => e.ActEndDate).HasColumnName(@"ActEndDate").HasColumnType("datetime");
				entity.Property(e => e.TaskActDevlDays).HasColumnName(@"TaskActDevlDays").HasColumnType("decimal");
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.RiskFactor).HasColumnName(@"RiskFactor").HasColumnType("decimal");
				entity.Property(e => e.Headcount).HasColumnName(@"Headcount").HasColumnType("decimal");
				entity.Property(e => e.EstWorkingDay).HasColumnName(@"EstWorkingDay").HasColumnType("decimal");
				entity.Property(e => e.ExtPrice).HasColumnName(@"ExtPrice").HasColumnType("decimal");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.TaskStatus).HasColumnName(@"TaskStatus").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_Document>(entity =>
            {
				entity.ToTable("PM_Documents");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("nvarchar(36)").IsRequired().HasMaxLength(36);
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.Finished).HasColumnName(@"Finished").HasColumnType("bit");
				entity.Property(e => e.Ratio).HasColumnName(@"Ratio").HasColumnType("decimal");
				entity.Property(e => e.Score).HasColumnName(@"Score").HasColumnType("decimal");
				});

            modelBuilder.Entity<PM_DocumentsMaintenance>(entity =>
            {
				entity.ToTable("PM_DocumentsMaintenance");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.TemplateFile).HasColumnName(@"TemplateFile").HasColumnType("nvarchar(256)").HasMaxLength(256);
				});

            modelBuilder.Entity<PM_EmailTemplate>(entity =>
            {
				entity.ToTable("PM_EmailTemplate");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Type).HasColumnName(@"Type").HasColumnType("int");
				entity.Property(e => e.Content).HasColumnName(@"Content").HasColumnType("nvarchar(4000)").HasMaxLength(4000);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				});

            modelBuilder.Entity<PM_Expense>(entity =>
            {
				entity.ToTable("PM_Expense");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.UOM).HasColumnName(@"UOM").HasColumnType("varchar(50)").IsUnicode(false).HasMaxLength(50);
				entity.Property(e => e.OfficeRent).HasColumnName(@"OfficeRent").HasColumnType("decimal");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.FixedAsset).HasColumnName(@"FixedAsset").HasColumnType("decimal");
				entity.Property(e => e.WaterElectric).HasColumnName(@"WaterElectric").HasColumnType("decimal");
				entity.Property(e => e.OthersExpense).HasColumnName(@"OthersExpense").HasColumnType("decimal");
				entity.Property(e => e.Salaries).HasColumnName(@"Salaries").HasColumnType("decimal");
				entity.Property(e => e.PayrollTax).HasColumnName(@"PayrollTax").HasColumnType("decimal");
				entity.Property(e => e.Bonus).HasColumnName(@"Bonus").HasColumnType("decimal");
				entity.Property(e => e.OfficeSupplies).HasColumnName(@"OfficeSupplies").HasColumnType("decimal");
				entity.Property(e => e.DinnerExpense).HasColumnName(@"DinnerExpense").HasColumnType("decimal");
				entity.Property(e => e.TelephoneExpense).HasColumnName(@"TelephoneExpense").HasColumnType("decimal");
				entity.Property(e => e.TravelExpense).HasColumnName(@"TravelExpense").HasColumnType("decimal");
				entity.Property(e => e.TotalExpense).HasColumnName(@"TotalExpense").HasColumnType("decimal");
				entity.Property(e => e.LaborExpense).HasColumnName(@"LaborExpense").HasColumnType("decimal");
				entity.Property(e => e.OfficeExpense).HasColumnName(@"OfficeExpense").HasColumnType("decimal");
				entity.Property(e => e.DistributionExpense).HasColumnName(@"DistributionExpense").HasColumnType("decimal");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Month).HasColumnName(@"Month").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_ExpenseDivision>(entity =>
            {
				entity.ToTable("PM_ExpenseDivision");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<PM_Group>(entity =>
            {
				entity.ToTable("PM_Group");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_GroupMaintenance>(entity =>
            {
				entity.ToTable("PM_GroupMaintenance");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.GroupName).HasColumnName(@"GroupName").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.GroupAltName).HasColumnName(@"GroupAltName").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.GroupCategory).HasColumnName(@"GroupCategory").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.GroupTeamLeader).HasColumnName(@"GroupTeamLeader").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.GroupStatus).HasColumnName(@"GroupStatus").HasColumnType("int");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_LaborCost>(entity =>
            {
				entity.ToTable("PM_LaborCost");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.LaborCostTypeID).HasColumnName(@"LaborCostTypeID").HasColumnType("int");
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(1024)").HasMaxLength(1024);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.AverageSalary).HasColumnName(@"AverageSalary").HasColumnType("decimal");
				entity.Property(e => e.PayrollTax).HasColumnName(@"PayrollTax").HasColumnType("decimal");
				entity.Property(e => e.OfficeExpenses).HasColumnName(@"OfficeExpenses").HasColumnType("decimal");
				entity.Property(e => e.WorkingDays).HasColumnName(@"WorkingDays").HasColumnType("decimal");
				entity.Property(e => e.TravelExpense).HasColumnName(@"TravelExpense").HasColumnType("decimal");
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("bit");
				entity.Property(e => e.BusinessTax).HasColumnName(@"BusinessTax").HasColumnType("decimal");
				entity.Property(e => e.MGTFactor).HasColumnName(@"MGTFactor").HasColumnType("decimal");
				});

            modelBuilder.Entity<PM_LaborCostType>(entity =>
            {
				entity.ToTable("PM_LaborCostType");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_LevelMaintenance>(entity =>
            {
				entity.ToTable("PM_LevelMaintenance");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.LevelName).HasColumnName(@"LevelName").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.ScoreRange).HasColumnName(@"ScoreRange").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.LevelDesc).HasColumnName(@"LevelDesc").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.LevelScoreDesc).HasColumnName(@"LevelScoreDesc").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.AltLevelDesc).HasColumnName(@"AltLevelDesc").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PM_MaintenanceQuotation>(entity =>
            {
				entity.ToTable("PM_MaintenanceQuotation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.MaintenanceType).HasColumnName(@"MaintenanceType").HasColumnType("int");
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.MaintenanceID).HasColumnName(@"MaintenanceID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PMMQ_System).HasColumnName(@"PMMQ_System").HasColumnType("int");
				entity.Property(e => e.PMMQ_Division).HasColumnName(@"PMMQ_Division").HasColumnType("int");
				entity.Property(e => e.PMMQ_Group).HasColumnName(@"PMMQ_Group").HasColumnType("int");
				entity.Property(e => e.PMMQ_Load).HasColumnName(@"PMMQ_Load").HasColumnType("decimal");
				entity.Property(e => e.Headcount).HasColumnName(@"Headcount").HasColumnType("decimal");
				entity.Property(e => e.QuotationDate).HasColumnName(@"QuotationDate").HasColumnType("datetime");
				entity.Property(e => e.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime");
				entity.Property(e => e.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime");
				entity.Property(e => e.MaintenanceAmt).HasColumnName(@"MaintenanceAmt").HasColumnType("decimal");
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(max)");
				entity.Property(e => e.MaintenanceDays).HasColumnName(@"MaintenanceDays").HasColumnType("decimal");
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.SalesTotal).HasColumnName(@"SalesTotal").HasColumnType("decimal");
				entity.Property(e => e.AdjustmentFactor).HasColumnName(@"AdjustmentFactor").HasColumnType("decimal");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				entity.Property(e => e.RevenueType).HasColumnName(@"RevenueType").HasColumnType("int");
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				});

            modelBuilder.Entity<PM_MaintennanceCustomer>(entity =>
            {
				entity.ToTable("PM_MaintennanceCustomer");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<PM_MaintennanceStatu>(entity =>
            {
				entity.ToTable("PM_MaintennanceStatus");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				entity.Property(e => e.Value).HasColumnName(@"Value").HasColumnType("int");
				});

            modelBuilder.Entity<PM_MaintennanceType>(entity =>
            {
				entity.ToTable("PM_MaintennanceType");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_ProjectGlossary>(entity =>
            {
				entity.ToTable("PM_ProjectGlossary");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.Type).HasColumnName(@"Type").HasColumnType("int");
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_ProjectGlossaryContent>(entity =>
            {
				entity.ToTable("PM_ProjectGlossaryContent");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.GlossaryID).HasColumnName(@"GlossaryID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.SubjectName).HasColumnName(@"SubjectName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.AlterSubjectName).HasColumnName(@"AlterSubjectName").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.Ratio).HasColumnName(@"Ratio").HasColumnType("decimal");
				entity.Property(e => e.OrderIndex).HasColumnName(@"OrderIndex").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_ProjectManager>(entity =>
            {
				entity.ToTable("PM_ProjectManager");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				});

            modelBuilder.Entity<PM_ProjectQuotation>(entity =>
            {
				entity.ToTable("PM_ProjectQuotation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.QuotationAmount).HasColumnName(@"QuotationAmount").HasColumnType("decimal");
				entity.Property(e => e.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ApprovedDate).HasColumnName(@"ApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.ApprovedAmount).HasColumnName(@"ApprovedAmount").HasColumnType("decimal");
				entity.Property(e => e.QuoteType).HasColumnName(@"QuoteType").HasColumnType("int");
				entity.Property(e => e.FeeName).HasColumnName(@"FeeName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PaymentTerms).HasColumnName(@"PaymentTerms").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_QuotationOtherFee>(entity =>
            {
				entity.ToTable("PM_QuotationOtherFee");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.DevelopQuotationID).HasColumnName(@"DevelopQuotationID").HasColumnType("nvarchar(36)").IsRequired().HasMaxLength(36);
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
				entity.Property(e => e.Amount).HasColumnName(@"Amount").HasColumnType("decimal");
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				});

            modelBuilder.Entity<PM_QuotationPayment>(entity =>
            {
				entity.ToTable("PM_QuotationPayment");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.DevelopQuotationID).HasColumnName(@"DevelopQuotationID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.PaymentNo).HasColumnName(@"PaymentNo").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
				entity.Property(e => e.Ratio).HasColumnName(@"Ratio").HasColumnType("decimal");
				entity.Property(e => e.IssuedAmt).HasColumnName(@"IssuedAmt").HasColumnType("decimal");
				entity.Property(e => e.PayDueDate).HasColumnName(@"PayDueDate").HasColumnType("datetime");
				entity.Property(e => e.Paid).HasColumnName(@"Paid").HasColumnType("bit");
				entity.Property(e => e.ReceivedDate).HasColumnName(@"ReceivedDate").HasColumnType("datetime");
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.DeductionAmt).HasColumnName(@"DeductionAmt").HasColumnType("decimal");
				});

            modelBuilder.Entity<PM_QuotationRemark>(entity =>
            {
				entity.ToTable("PM_QuotationRemark");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.DevelopQuotationID).HasColumnName(@"DevelopQuotationID").HasColumnType("nvarchar(36)").IsRequired().HasMaxLength(36);
				entity.Property(e => e.Topic).HasColumnName(@"Topic").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
				entity.Property(e => e.ShowInQuotation).HasColumnName(@"ShowInQuotation").HasColumnType("bit");
				entity.Property(e => e.Content).HasColumnName(@"Content").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				});

            modelBuilder.Entity<PM_QuoteByHeadCount>(entity =>
            {
				entity.ToTable("PM_QuoteByHeadCount");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.QuoteID).HasColumnName(@"QuoteID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.BriefDesc).HasColumnName(@"BriefDesc").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.HeadCount).HasColumnName(@"HeadCount").HasColumnType("decimal");
				entity.Property(e => e.ExtPrice).HasColumnName(@"ExtPrice").HasColumnType("decimal");
				entity.Property(e => e.CostManday).HasColumnName(@"CostManday").HasColumnType("decimal");
				entity.Property(e => e.WorkingDays).HasColumnName(@"WorkingDays").HasColumnType("decimal");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_QuoteByProjectCost>(entity =>
            {
				entity.ToTable("PM_QuoteByProjectCost");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.QuoteID).HasColumnName(@"QuoteID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.BriefDesc).HasColumnName(@"BriefDesc").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.Group).HasColumnName(@"Group").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstWorkLoad).HasColumnName(@"EstWorkLoad").HasColumnType("decimal");
				entity.Property(e => e.CostManday).HasColumnName(@"CostManday").HasColumnType("decimal");
				entity.Property(e => e.LoadPercent).HasColumnName(@"LoadPercent").HasColumnType("decimal");
				entity.Property(e => e.WorkLoadManday).HasColumnName(@"WorkLoadManday").HasColumnType("decimal");
				entity.Property(e => e.ExtPrice).HasColumnName(@"ExtPrice").HasColumnType("decimal");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_QuoteBySaleRevenue>(entity =>
            {
				entity.ToTable("PM_QuoteBySaleRevenue");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.QuoteID).HasColumnName(@"QuoteID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.LicenseFee).HasColumnName(@"LicenseFee").HasColumnType("decimal");
				entity.Property(e => e.Ratio).HasColumnName(@"Ratio").HasColumnType("decimal");
				entity.Property(e => e.TotalAmt).HasColumnName(@"TotalAmt").HasColumnType("decimal");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_RevenueType>(entity =>
            {
				entity.ToTable("PM_RevenueType");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_RunningAccount>(entity =>
            {
				entity.ToTable("PM_RunningAccount");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.PaymentNo).HasColumnName(@"PaymentNo").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.CurrentStep).HasColumnName(@"CurrentStep").HasColumnType("int");
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.ReceivedAmt).HasColumnName(@"ReceivedAmt").HasColumnType("decimal");
				entity.Property(e => e.ReceivedDate).HasColumnName(@"ReceivedDate").HasColumnType("datetime");
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime");
				entity.Property(e => e.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(64)").HasMaxLength(64);
				});

            modelBuilder.Entity<PM_StoryArea>(entity =>
            {
				entity.ToTable("PM_StoryArea");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_SubLevelMaintenance>(entity =>
            {
				entity.ToTable("PM_SubLevelMaintenance");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.SubLevelID).HasColumnName(@"SubLevelID").HasColumnType("int").IsRequired();
				entity.Property(e => e.SubLevelName).HasColumnName(@"SubLevelName").HasColumnType("nvarchar(64)").HasMaxLength(64);
				entity.Property(e => e.SubLevelScroe).HasColumnName(@"SubLevelScroe").HasColumnType("decimal");
				});

            modelBuilder.Entity<PM_System>(entity =>
            {
				entity.ToTable("PM_System");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int");
				entity.Property(e => e.IsHide).HasColumnName(@"IsHide").HasColumnType("bit");
				});

            modelBuilder.Entity<PM_SystemMaintenance>(entity =>
            {
				entity.ToTable("PM_SystemMaintenance");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.FullName).HasColumnName(@"FullName").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.ShortName).HasColumnName(@"ShortName").HasColumnType("nvarchar(150)").HasMaxLength(150);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.OnlineAddress).HasColumnName(@"OnlineAddress").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.TestAddress).HasColumnName(@"TestAddress").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.IntegratedTestAddress).HasColumnName(@"IntegratedTestAddress").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_TemplateSetting>(entity =>
            {
				entity.ToTable("PM_TemplateSetting");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.TemplateName).HasColumnName(@"TemplateName").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_TemplateSettingAttach>(entity =>
            {
				entity.ToTable("PM_TemplateSettingAttach");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.TemplateSettingID).HasColumnName(@"TemplateSettingID").HasColumnType("int").IsRequired();
				entity.Property(e => e.BriefDesc).HasColumnName(@"BriefDesc").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.TaskDetail).HasColumnName(@"TaskDetail").HasColumnType("nvarchar(500)").HasMaxLength(500);
				entity.Property(e => e.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime");
				});

            modelBuilder.Entity<PM_TransactionHistory>(entity =>
            {
				entity.ToTable("PM_TransactionHistory");
				entity.HasKey(x => x.TransactionHistoryID);
				entity.Property(e => e.TransactionHistoryID).HasColumnName(@"TransactionHistoryID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.FromValue).HasColumnName(@"FromValue").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.ToValue).HasColumnName(@"ToValue").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.ChangeDesc).HasColumnName(@"ChangeDesc").HasColumnType("nvarchar(2100)").HasMaxLength(2100);
				entity.Property(e => e.ChangeDate).HasColumnName(@"ChangeDate").HasColumnType("datetime");
				entity.Property(e => e.ChangeBy).HasColumnName(@"ChangeBy").HasColumnType("nvarchar(100)").HasMaxLength(100);
				entity.Property(e => e.SubjectID).HasColumnName(@"SubjectID").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.SubjectNo).HasColumnName(@"SubjectNo").HasColumnType("nvarchar(200)").HasMaxLength(200);
				});

            modelBuilder.Entity<PM_TransactionHistoryInstead>(entity =>
            {
				entity.ToTable("PM_TransactionHistoryInstead");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.PM_Key).HasColumnName(@"PM_Key").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Value).HasColumnName(@"Value").HasColumnType("int");
				entity.Property(e => e.PM_Content).HasColumnName(@"PM_Content").HasColumnType("varchar(100)").IsUnicode(false).HasMaxLength(100);
				});

            modelBuilder.Entity<PM_User>(entity =>
            {
				entity.ToTable("PM_User");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Password).HasColumnName(@"Password").HasColumnType("nvarchar(128)").HasMaxLength(128);
				});

            modelBuilder.Entity<PM_UserTask>(entity =>
            {
				entity.ToTable("PM_UserTask");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().UseSqlServerIdentityColumn();
				entity.Property(e => e.UserID).HasColumnName(@"UserID").HasColumnType("int").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.TaskID).HasColumnName(@"TaskID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.WoringHour).HasColumnName(@"WoringHour").HasColumnType("decimal");
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.BeginDate).HasColumnName(@"BeginDate").HasColumnType("date");
				entity.Property(e => e.EndDate).HasColumnName(@"EndDate").HasColumnType("date");
				});

            modelBuilder.Entity<V_DevelopmentQuotation>(entity =>
            {
				entity.ToTable("V_DevelopmentQuotation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.EstStartDate).HasColumnName(@"EstStartDate").HasColumnType("datetime");
				entity.Property(e => e.System).HasColumnName(@"System").HasColumnType("int");
				entity.Property(e => e.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstEndDate).HasColumnName(@"EstEndDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectManager).HasColumnName(@"ProjectManager").HasColumnType("int");
				entity.Property(e => e.KeyUser).HasColumnName(@"KeyUser").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ActualEndDate).HasColumnName(@"ActualEndDate").HasColumnType("datetime");
				entity.Property(e => e.TotalHeadcount).HasColumnName(@"TotalHeadcount").HasColumnType("decimal");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.EstDevlDays).HasColumnName(@"EstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.ActualDevlDays).HasColumnName(@"ActualDevlDays").HasColumnType("decimal");
				entity.Property(e => e.UserStoryNo).HasColumnName(@"UserStoryNo").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.StoryArea).HasColumnName(@"StoryArea").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.TotalDevlAmount).HasColumnName(@"TotalDevlAmount").HasColumnType("decimal");
				entity.Property(e => e.ActualStartDate).HasColumnName(@"ActualStartDate").HasColumnType("datetime");
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				entity.Property(e => e.StoryDetail).HasColumnName(@"StoryDetail").HasColumnType("nvarchar(max)");
				entity.Property(e => e.RevenueType).HasColumnName(@"RevenueType").HasColumnType("int");
				entity.Property(e => e.IsLinkedUserStory).HasColumnName(@"IsLinkedUserStory").HasColumnType("bit");
				entity.Property(e => e.ProjectBriefDesc).HasColumnName(@"ProjectBriefDesc").HasColumnType("nvarchar(max)");
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectSpecialty).HasColumnName(@"ProjectSpecialty").HasColumnType("int");
				entity.Property(e => e.ProjectLoad).HasColumnName(@"ProjectLoad").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ProjectOwnBy).HasColumnName(@"ProjectOwnBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ApprovedDate).HasColumnName(@"ApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.AssignedUsers).HasColumnName(@"AssignedUsers").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.ReqApprovedDate).HasColumnName(@"ReqApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluationStatus).HasColumnName(@"EvaluationStatus").HasColumnType("int");
				entity.Property(e => e.IsDocumentComplete).HasColumnName(@"IsDocumentComplete").HasColumnType("bit");
				entity.Property(e => e.MaintennanceStatusName).HasColumnName(@"MaintennanceStatusName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.MaintennanceCustomerName).HasColumnName(@"MaintennanceCustomerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.SystemName).HasColumnName(@"SystemName").HasColumnType("nvarchar(150)").HasMaxLength(150);
				entity.Property(e => e.StoryAreaName).HasColumnName(@"StoryAreaName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProjectManagerName).HasColumnName(@"ProjectManagerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_EvaluationList>(entity =>
            {
				entity.ToTable("V_EvaluationList");
				entity.HasKey(x => new { x.ID, x.DevelopmentID, x.EvaluationStatusName });
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired();
				entity.Property(e => e.DevelopmentID).HasColumnName(@"DevelopmentID").HasColumnType("nvarchar(36)").IsRequired().HasMaxLength(36);
				entity.Property(e => e.Type).HasColumnName(@"Type").HasColumnType("int");
				entity.Property(e => e.Glossary).HasColumnName(@"Glossary").HasColumnType("nvarchar(36)").HasMaxLength(36);
				entity.Property(e => e.EmailSubject).HasColumnName(@"EmailSubject").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(200)").HasMaxLength(200);
				entity.Property(e => e.EmailTo).HasColumnName(@"EmailTo").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.EmailUserName).HasColumnName(@"EmailUserName").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.EvaluationStatusName).HasColumnName(@"EvaluationStatusName").HasColumnType("varchar(9)").IsRequired().IsUnicode(false).HasMaxLength(9);
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.score).HasColumnName(@"score").HasColumnType("decimal");
				});

            modelBuilder.Entity<V_EvaluationView>(entity =>
            {
				entity.ToTable("V_EvaluationView");
				entity.HasKey(x => new { x.ID, x.PeopleEvaluationProjStatus });
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.EstStartDate).HasColumnName(@"EstStartDate").HasColumnType("datetime");
				entity.Property(e => e.System).HasColumnName(@"System").HasColumnType("int");
				entity.Property(e => e.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstEndDate).HasColumnName(@"EstEndDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectManager).HasColumnName(@"ProjectManager").HasColumnType("int");
				entity.Property(e => e.KeyUser).HasColumnName(@"KeyUser").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ActualEndDate).HasColumnName(@"ActualEndDate").HasColumnType("datetime");
				entity.Property(e => e.TotalHeadcount).HasColumnName(@"TotalHeadcount").HasColumnType("decimal");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.EstDevlDays).HasColumnName(@"EstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.ActualDevlDays).HasColumnName(@"ActualDevlDays").HasColumnType("decimal");
				entity.Property(e => e.UserStoryNo).HasColumnName(@"UserStoryNo").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.StoryArea).HasColumnName(@"StoryArea").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.TotalDevlAmount).HasColumnName(@"TotalDevlAmount").HasColumnType("decimal");
				entity.Property(e => e.ActualStartDate).HasColumnName(@"ActualStartDate").HasColumnType("datetime");
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				entity.Property(e => e.StoryDetail).HasColumnName(@"StoryDetail").HasColumnType("nvarchar(max)");
				entity.Property(e => e.RevenueType).HasColumnName(@"RevenueType").HasColumnType("int");
				entity.Property(e => e.IsLinkedUserStory).HasColumnName(@"IsLinkedUserStory").HasColumnType("bit");
				entity.Property(e => e.ProjectBriefDesc).HasColumnName(@"ProjectBriefDesc").HasColumnType("nvarchar(max)");
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectSpecialty).HasColumnName(@"ProjectSpecialty").HasColumnType("int");
				entity.Property(e => e.ProjectLoad).HasColumnName(@"ProjectLoad").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ProjectOwnBy).HasColumnName(@"ProjectOwnBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ApprovedDate).HasColumnName(@"ApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.AssignedUsers).HasColumnName(@"AssignedUsers").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.ReqApprovedDate).HasColumnName(@"ReqApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluationStatus).HasColumnName(@"EvaluationStatus").HasColumnType("int");
				entity.Property(e => e.IsDocumentComplete).HasColumnName(@"IsDocumentComplete").HasColumnType("bit");
				entity.Property(e => e.Type).HasColumnName(@"Type").HasColumnType("int");
				entity.Property(e => e.Glossary).HasColumnName(@"Glossary").HasColumnType("nvarchar(36)").HasMaxLength(36);
				entity.Property(e => e.EmailUserName).HasColumnName(@"EmailUserName").HasColumnType("nvarchar(1000)").HasMaxLength(1000);
				entity.Property(e => e.EmailTo).HasColumnName(@"EmailTo").HasColumnType("nvarchar(2000)").HasMaxLength(2000);
				entity.Property(e => e.EmailToID).HasColumnName(@"EmailToID").HasColumnType("int");
				entity.Property(e => e.PeopleEvaluationProjStatus).HasColumnName(@"PeopleEvaluationProjStatus").HasColumnType("varchar(9)").IsRequired().IsUnicode(false).HasMaxLength(9);
				entity.Property(e => e.ProjectManagerName).HasColumnName(@"ProjectManagerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_Expense>(entity =>
            {
				entity.ToTable("V_Expense");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.UOM).HasColumnName(@"UOM").HasColumnType("varchar(50)").IsUnicode(false).HasMaxLength(50);
				entity.Property(e => e.OfficeRent).HasColumnName(@"OfficeRent").HasColumnType("decimal");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.FixedAsset).HasColumnName(@"FixedAsset").HasColumnType("decimal");
				entity.Property(e => e.WaterElectric).HasColumnName(@"WaterElectric").HasColumnType("decimal");
				entity.Property(e => e.OthersExpense).HasColumnName(@"OthersExpense").HasColumnType("decimal");
				entity.Property(e => e.Salaries).HasColumnName(@"Salaries").HasColumnType("decimal");
				entity.Property(e => e.PayrollTax).HasColumnName(@"PayrollTax").HasColumnType("decimal");
				entity.Property(e => e.Bonus).HasColumnName(@"Bonus").HasColumnType("decimal");
				entity.Property(e => e.OfficeSupplies).HasColumnName(@"OfficeSupplies").HasColumnType("decimal");
				entity.Property(e => e.DinnerExpense).HasColumnName(@"DinnerExpense").HasColumnType("decimal");
				entity.Property(e => e.TelephoneExpense).HasColumnName(@"TelephoneExpense").HasColumnType("decimal");
				entity.Property(e => e.TravelExpense).HasColumnName(@"TravelExpense").HasColumnType("decimal");
				entity.Property(e => e.TotalExpense).HasColumnName(@"TotalExpense").HasColumnType("decimal");
				entity.Property(e => e.LaborExpense).HasColumnName(@"LaborExpense").HasColumnType("decimal");
				entity.Property(e => e.OfficeExpense).HasColumnName(@"OfficeExpense").HasColumnType("decimal");
				entity.Property(e => e.DistributionExpense).HasColumnName(@"DistributionExpense").HasColumnType("decimal");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Month).HasColumnName(@"Month").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_GlossaryScore>(entity =>
            {
				entity.ToTable("V_GlossaryScore");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.GlossaryID).HasColumnName(@"GlossaryID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.SubjectName).HasColumnName(@"SubjectName").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.AlterSubjectName).HasColumnName(@"AlterSubjectName").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.Ratio).HasColumnName(@"Ratio").HasColumnType("decimal");
				entity.Property(e => e.OrderIndex).HasColumnName(@"OrderIndex").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.Score).HasColumnName(@"Score").HasColumnType("int");
				entity.Property(e => e.EvaluationDetail_ID).HasColumnName(@"EvaluationDetail_ID").HasColumnType("int");
				});

            modelBuilder.Entity<V_LaborCost>(entity =>
            {
				entity.ToTable("V_LaborCost");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.LaborCostTypeID).HasColumnName(@"LaborCostTypeID").HasColumnType("int");
				entity.Property(e => e.Description).HasColumnName(@"Description").HasColumnType("nvarchar(1024)").HasMaxLength(1024);
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.AverageSalary).HasColumnName(@"AverageSalary").HasColumnType("decimal");
				entity.Property(e => e.PayrollTax).HasColumnName(@"PayrollTax").HasColumnType("decimal");
				entity.Property(e => e.OfficeExpenses).HasColumnName(@"OfficeExpenses").HasColumnType("decimal");
				entity.Property(e => e.WorkingDays).HasColumnName(@"WorkingDays").HasColumnType("decimal");
				entity.Property(e => e.TravelExpense).HasColumnName(@"TravelExpense").HasColumnType("decimal");
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("bit");
				entity.Property(e => e.BusinessTax).HasColumnName(@"BusinessTax").HasColumnType("decimal");
				entity.Property(e => e.MGTFactor).HasColumnName(@"MGTFactor").HasColumnType("decimal");
				entity.Property(e => e.Name).HasColumnName(@"Name").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_MaintenanceQuotation>(entity =>
            {
				entity.ToTable("V_MaintenanceQuotation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.MaintenanceType).HasColumnName(@"MaintenanceType").HasColumnType("int");
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.MaintenanceID).HasColumnName(@"MaintenanceID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.PMMQ_System).HasColumnName(@"PMMQ_System").HasColumnType("int");
				entity.Property(e => e.PMMQ_Division).HasColumnName(@"PMMQ_Division").HasColumnType("int");
				entity.Property(e => e.PMMQ_Group).HasColumnName(@"PMMQ_Group").HasColumnType("int");
				entity.Property(e => e.PMMQ_Load).HasColumnName(@"PMMQ_Load").HasColumnType("decimal");
				entity.Property(e => e.Headcount).HasColumnName(@"Headcount").HasColumnType("decimal");
				entity.Property(e => e.QuotationDate).HasColumnName(@"QuotationDate").HasColumnType("datetime");
				entity.Property(e => e.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime");
				entity.Property(e => e.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime");
				entity.Property(e => e.MaintenanceAmt).HasColumnName(@"MaintenanceAmt").HasColumnType("decimal");
				entity.Property(e => e.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(max)");
				entity.Property(e => e.MaintenanceDays).HasColumnName(@"MaintenanceDays").HasColumnType("decimal");
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.SalesTotal).HasColumnName(@"SalesTotal").HasColumnType("decimal");
				entity.Property(e => e.AdjustmentFactor).HasColumnName(@"AdjustmentFactor").HasColumnType("decimal");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				entity.Property(e => e.RevenueType).HasColumnName(@"RevenueType").HasColumnType("int");
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.MaintenanceTypeName).HasColumnName(@"MaintenanceTypeName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.MaintennanceStatusName).HasColumnName(@"MaintennanceStatusName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.MaintennanceCustomerName).HasColumnName(@"MaintennanceCustomerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.SystemName).HasColumnName(@"SystemName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DivisionName).HasColumnName(@"DivisionName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.GroupName).HasColumnName(@"GroupName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_PaymentProcess>(entity =>
            {
				entity.ToTable("V_PaymentProcess");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.ApprovedAmount).HasColumnName(@"ApprovedAmount").HasColumnType("decimal");
				entity.Property(e => e.System).HasColumnName(@"System").HasColumnType("int");
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.TotalPaidAmt).HasColumnName(@"TotalPaidAmt").HasColumnType("decimal");
				entity.Property(e => e.TotalUnpaidAmt).HasColumnName(@"TotalUnpaidAmt").HasColumnType("decimal");
				entity.Property(e => e.TotalDeductionAmt).HasColumnName(@"TotalDeductionAmt").HasColumnType("decimal");
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectSpecialty).HasColumnName(@"ProjectSpecialty").HasColumnType("int");
				entity.Property(e => e.ProjectManager).HasColumnName(@"ProjectManager").HasColumnType("int");
				entity.Property(e => e.ProjectManagerName).HasColumnName(@"ProjectManagerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				});

            modelBuilder.Entity<V_ProfitLossReport>(entity =>
            {
				entity.ToTable("V_ProfitLossReport");
				entity.HasKey(x => x.year);
				entity.Property(e => e.year).HasColumnName(@"year").HasColumnType("int").IsRequired();
				entity.Property(e => e.DevelopmentIncome).HasColumnName(@"DevelopmentIncome").HasColumnType("decimal");
				entity.Property(e => e.MaintenanceIncome).HasColumnName(@"MaintenanceIncome").HasColumnType("decimal");
				entity.Property(e => e.TotalCost).HasColumnName(@"TotalCost").HasColumnType("decimal");
				entity.Property(e => e.Profit).HasColumnName(@"Profit").HasColumnType("decimal");
				});

            modelBuilder.Entity<V_ProjectEvaluation>(entity =>
            {
				entity.ToTable("V_ProjectEvaluation");
				entity.HasKey(x => new { x.ID, x.EvaluationStatusName });
				entity.Property(e => e.TotalCount).HasColumnName(@"TotalCount").HasColumnType("int");
				entity.Property(e => e.CompletedCount).HasColumnName(@"CompletedCount").HasColumnType("int");
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.EstStartDate).HasColumnName(@"EstStartDate").HasColumnType("datetime");
				entity.Property(e => e.System).HasColumnName(@"System").HasColumnType("int");
				entity.Property(e => e.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstEndDate).HasColumnName(@"EstEndDate").HasColumnType("datetime");
				entity.Property(e => e.ProjectManager).HasColumnName(@"ProjectManager").HasColumnType("int");
				entity.Property(e => e.KeyUser).HasColumnName(@"KeyUser").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ActualEndDate).HasColumnName(@"ActualEndDate").HasColumnType("datetime");
				entity.Property(e => e.TotalHeadcount).HasColumnName(@"TotalHeadcount").HasColumnType("decimal");
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.EstDevlDays).HasColumnName(@"EstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.ActualDevlDays).HasColumnName(@"ActualDevlDays").HasColumnType("decimal");
				entity.Property(e => e.UserStoryNo).HasColumnName(@"UserStoryNo").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.StoryArea).HasColumnName(@"StoryArea").HasColumnType("int");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.TotalDevlAmount).HasColumnName(@"TotalDevlAmount").HasColumnType("decimal");
				entity.Property(e => e.ActualStartDate).HasColumnName(@"ActualStartDate").HasColumnType("datetime");
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				entity.Property(e => e.StoryDetail).HasColumnName(@"StoryDetail").HasColumnType("nvarchar(max)");
				entity.Property(e => e.RevenueType).HasColumnName(@"RevenueType").HasColumnType("int");
				entity.Property(e => e.IsLinkedUserStory).HasColumnName(@"IsLinkedUserStory").HasColumnType("bit");
				entity.Property(e => e.ProjectBriefDesc).HasColumnName(@"ProjectBriefDesc").HasColumnType("nvarchar(max)");
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectSpecialty).HasColumnName(@"ProjectSpecialty").HasColumnType("int");
				entity.Property(e => e.ProjectLoad).HasColumnName(@"ProjectLoad").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ProjectOwnBy).HasColumnName(@"ProjectOwnBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ApprovedDate).HasColumnName(@"ApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.AssignedUsers).HasColumnName(@"AssignedUsers").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.ReqApprovedDate).HasColumnName(@"ReqApprovedDate").HasColumnType("datetime");
				entity.Property(e => e.EvaluationStatus).HasColumnName(@"EvaluationStatus").HasColumnType("int");
				entity.Property(e => e.IsDocumentComplete).HasColumnName(@"IsDocumentComplete").HasColumnType("bit");
				entity.Property(e => e.EvaluationStatusName).HasColumnName(@"EvaluationStatusName").HasColumnType("varchar(9)").IsRequired().IsUnicode(false).HasMaxLength(9);
				entity.Property(e => e.ManagerName).HasColumnName(@"ManagerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.SelfScore).HasColumnName(@"SelfScore").HasColumnType("decimal");
				entity.Property(e => e.CustomerScore).HasColumnName(@"CustomerScore").HasColumnType("decimal");
				});

            modelBuilder.Entity<V_ProjectQuotation>(entity =>
            {
				entity.ToTable("V_ProjectQuotation");
				entity.HasKey(x => x.QuotationID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.QuotationID).HasColumnName(@"QuotationID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectSpecialty).HasColumnName(@"ProjectSpecialty").HasColumnType("int");
				entity.Property(e => e.ProjectManager).HasColumnName(@"ProjectManager").HasColumnType("int");
				entity.Property(e => e.ProjectManagerName).HasColumnName(@"ProjectManagerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.Customer).HasColumnName(@"Customer").HasColumnType("int");
				entity.Property(e => e.CustomerName).HasColumnName(@"CustomerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.KeyUser).HasColumnName(@"KeyUser").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.System).HasColumnName(@"System").HasColumnType("int");
				entity.Property(e => e.SystemName).HasColumnName(@"SystemName").HasColumnType("nvarchar(150)").HasMaxLength(150);
				entity.Property(e => e.Status).HasColumnName(@"Status").HasColumnType("int");
				entity.Property(e => e.StatusName).HasColumnName(@"StatusName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.QuotationAmount).HasColumnName(@"QuotationAmount").HasColumnType("decimal");
				entity.Property(e => e.ApprovedAmount).HasColumnName(@"ApprovedAmount").HasColumnType("decimal");
				entity.Property(e => e.QuotationStatus).HasColumnName(@"QuotationStatus").HasColumnType("int");
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				});

            modelBuilder.Entity<V_ProjectSummaryReport>(entity =>
            {
				entity.ToTable("V_ProjectSummaryReport");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectManagerName).HasColumnName(@"ProjectManagerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.ProjectManager).HasColumnName(@"ProjectManager").HasColumnType("int");
				entity.Property(e => e.KeyUser).HasColumnName(@"KeyUser").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.Score).HasColumnName(@"Score").HasColumnType("decimal");
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstEndDate).HasColumnName(@"EstEndDate").HasColumnType("datetime");
				entity.Property(e => e.ActualEndDate).HasColumnName(@"ActualEndDate").HasColumnType("datetime");
				entity.Property(e => e.EstDevlDays).HasColumnName(@"EstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.ActualDevlDays).HasColumnName(@"ActualDevlDays").HasColumnType("decimal");
				entity.Property(e => e.QuotationAmount).HasColumnName(@"QuotationAmount").HasColumnType("decimal");
				entity.Property(e => e.ApprovedAmount).HasColumnName(@"ApprovedAmount").HasColumnType("decimal");
				entity.Property(e => e.DeliveryTimelinessScore).HasColumnName(@"DeliveryTimelinessScore").HasColumnType("decimal");
				entity.Property(e => e.QualityScore).HasColumnName(@"QualityScore").HasColumnType("decimal");
				entity.Property(e => e.CustomerSatisfactionScore).HasColumnName(@"CustomerSatisfactionScore").HasColumnType("decimal");
				entity.Property(e => e.FileIntegrityScore).HasColumnName(@"FileIntegrityScore").HasColumnType("decimal");
				entity.Property(e => e.SelfScore).HasColumnName(@"SelfScore").HasColumnType("decimal");
				entity.Property(e => e.TotalScore).HasColumnName(@"TotalScore").HasColumnType("decimal");
				entity.Property(e => e.MaintennanceStatusName).HasColumnName(@"MaintennanceStatusName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_Quotation>(entity =>
            {
				entity.ToTable("V_Quotation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier");
				entity.Property(e => e.QuotationNo).HasColumnName(@"QuotationNo").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.RiskFactor).HasColumnName(@"RiskFactor").HasColumnType("decimal");
				entity.Property(e => e.Headcount).HasColumnName(@"Headcount").HasColumnType("decimal");
				entity.Property(e => e.TeamLeader).HasColumnName(@"TeamLeader").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.EstDevlDays).HasColumnName(@"EstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.QuotationDate).HasColumnName(@"QuotationDate").HasColumnType("datetime");
				entity.Property(e => e.DevlAmount).HasColumnName(@"DevlAmount").HasColumnType("decimal");
				entity.Property(e => e.Note).HasColumnName(@"Note").HasColumnType("nvarchar(max)");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.Division).HasColumnName(@"Division").HasColumnType("int");
				entity.Property(e => e.PMDQ_Group).HasColumnName(@"PMDQ_Group").HasColumnType("int");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.Number).HasColumnName(@"Number").HasColumnType("int");
				entity.Property(e => e.GroupName).HasColumnName(@"GroupName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				entity.Property(e => e.DivisionrName).HasColumnName(@"DivisionrName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_RevenueOutlook>(entity =>
            {
				entity.ToTable("V_RevenueOutlook");
				entity.HasKey(x => x.ProjectID);
				entity.Property(e => e.ProjectID).HasColumnName(@"ProjectID").HasColumnType("nvarchar(128)").IsRequired().HasMaxLength(128);
				entity.Property(e => e.ProjectCategory).HasColumnName(@"ProjectCategory").HasColumnType("int");
				entity.Property(e => e.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar(512)").HasMaxLength(512);
				entity.Property(e => e.TotalDevlAmount).HasColumnName(@"TotalDevlAmount").HasColumnType("decimal");
				entity.Property(e => e.Year).HasColumnName(@"Year").HasColumnType("int");
				entity.Property(e => e.SystemName).HasColumnName(@"SystemName").HasColumnType("nvarchar(150)").HasMaxLength(150);
				entity.Property(e => e.CustomerName).HasColumnName(@"CustomerName").HasColumnType("nvarchar(50)").HasMaxLength(50);
				});

            modelBuilder.Entity<V_SumDevelopQuotation>(entity =>
            {
				entity.ToTable("V_SumDevelopQuotation");
				entity.HasKey(x => x.ID);
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.TotalHeadcount).HasColumnName(@"TotalHeadcount").HasColumnType("decimal");
				entity.Property(e => e.TotalDevlAmount).HasColumnName(@"TotalDevlAmount").HasColumnType("decimal");
				});

            modelBuilder.Entity<V_Task>(entity =>
            {
				entity.ToTable("V_Task");
				entity.HasKey(x => new { x.ID, x.DevelopID });
				entity.Property(e => e.ID).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.DevelopID).HasColumnName(@"DevelopID").HasColumnType("uniqueidentifier").IsRequired();
				entity.Property(e => e.BriefDesc).HasColumnName(@"BriefDesc").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.TaskDetail).HasColumnName(@"TaskDetail").HasColumnType("nvarchar(256)").HasMaxLength(256);
				entity.Property(e => e.TaskGroup).HasColumnName(@"TaskGroup").HasColumnType("int");
				entity.Property(e => e.SchedStartDate).HasColumnName(@"SchedStartDate").HasColumnType("datetime");
				entity.Property(e => e.SchedEndDate).HasColumnName(@"SchedEndDate").HasColumnType("datetime");
				entity.Property(e => e.TaskEstDevlDays).HasColumnName(@"TaskEstDevlDays").HasColumnType("decimal");
				entity.Property(e => e.ActStartDate).HasColumnName(@"ActStartDate").HasColumnType("datetime");
				entity.Property(e => e.ActEndDate).HasColumnName(@"ActEndDate").HasColumnType("datetime");
				entity.Property(e => e.TaskActDevlDays).HasColumnName(@"TaskActDevlDays").HasColumnType("decimal");
				entity.Property(e => e.LaborCost).HasColumnName(@"LaborCost").HasColumnType("decimal");
				entity.Property(e => e.RiskFactor).HasColumnName(@"RiskFactor").HasColumnType("decimal");
				entity.Property(e => e.Headcount).HasColumnName(@"Headcount").HasColumnType("decimal");
				entity.Property(e => e.EstWorkingDay).HasColumnName(@"EstWorkingDay").HasColumnType("decimal");
				entity.Property(e => e.ExtPrice).HasColumnName(@"ExtPrice").HasColumnType("decimal");
				entity.Property(e => e.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(128)").HasMaxLength(128);
				entity.Property(e => e.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
				entity.Property(e => e.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
				entity.Property(e => e.TaskStatus).HasColumnName(@"TaskStatus").HasColumnType("bit");
				entity.Property(e => e.GroupName).HasColumnName(@"GroupName").HasColumnType("nvarchar(100)").HasMaxLength(100);
				});

            		}



        // Stored Procedures

    }
    #endregion

    #region POCO classes


    // EvaluationDetail
    public partial class EvaluationDetail : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public System.Guid? DevelopmentID { get; set; } // DevelopmentID
        public string TotalCount { get; set; } // TotalCount (length: 10)
        public string CommentsSuggestion { get; set; } // CommentsSuggestion (length: 2000)
        public bool? Submit { get; set; } // Submit
        public int? GlossaryType { get; set; } // GlossaryType
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 200)

        // Reverse navigation

        /// <summary>
        /// Child EvaluationDetailItems where [EvaluationDetailItem].[EvaluationDetail_ID] point to this entity (FK__Evaluatio__Evalu__4A8310C6)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EvaluationDetailItem> EvaluationDetailItems { get; set; } = new System.Collections.Generic.List<EvaluationDetailItem>(); // EvaluationDetailItem.FK__Evaluatio__Evalu__4A8310C6
    }


    // EvaluationDetailItem
    public partial class EvaluationDetailItem : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public int? EvaluationDetail_ID { get; set; } // EvaluationDetail_ID
        public System.Guid? GlossaryID { get; set; } // GlossaryID
        public int? Score { get; set; } // Score
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 200)

        // Foreign keys

        /// <summary>
        /// Parent EvaluationDetail pointed by [EvaluationDetailItem].([EvaluationDetail_ID]) (FK__Evaluatio__Evalu__4A8310C6)
        /// </summary>
        public virtual EvaluationDetail EvaluationDetail { get; set; } // FK__Evaluatio__Evalu__4A8310C6
    }


    // EvaluationEmail
    public partial class EvaluationEmail : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string DevelopmentID { get; set; } // DevelopmentID (length: 36)
        public int? Type { get; set; } // Type
        public string Glossary { get; set; } // Glossary (length: 36)
        public string EmailSubject { get; set; } // EmailSubject (length: 2000)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 200)

        // Reverse navigation

        /// <summary>
        /// Child EvaluationEmailToes where [EvaluationEmailTo].[EvaluationEmail_ID] point to this entity (FK__Evaluatio__Evalu__43D61337)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EvaluationEmailTo> EvaluationEmailToes { get; set; } = new System.Collections.Generic.List<EvaluationEmailTo>(); // EvaluationEmailTo.FK__Evaluatio__Evalu__43D61337
    }


    // EvaluationEmailTo
    public partial class EvaluationEmailTo : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public int EvaluationEmail_ID { get; set; } // EvaluationEmail_ID
        public string EmailUserName { get; set; } // EmailUserName (length: 1000)
        public string EmailTo { get; set; } // EmailTo (length: 2000)
        public int? EvaluationStatus { get; set; } // EvaluationStatus
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 200)

        // Foreign keys

        /// <summary>
        /// Parent EvaluationEmail pointed by [EvaluationEmailTo].([EvaluationEmail_ID]) (FK__Evaluatio__Evalu__43D61337)
        /// </summary>
        public virtual EvaluationEmail EvaluationEmail { get; set; } // FK__Evaluatio__Evalu__43D61337
    }


    // PM_Develop
    public partial class PM_Develop : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public string ProjectID { get; set; } // ProjectID (length: 128)
        public int? Year { get; set; } // Year
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public int? Customer { get; set; } // Customer
        public System.DateTime? EstStartDate { get; set; } // EstStartDate
        public int? System { get; set; } // System
        public string ApprovedBy { get; set; } // ApprovedBy (length: 128)
        public System.DateTime? EstEndDate { get; set; } // EstEndDate
        public int? ProjectManager { get; set; } // ProjectManager
        public string KeyUser { get; set; } // KeyUser (length: 128)
        public System.DateTime? ActualEndDate { get; set; } // ActualEndDate
        public decimal? TotalHeadcount { get; set; } // TotalHeadcount
        public int? Status { get; set; } // Status
        public decimal? EstDevlDays { get; set; } // EstDevlDays
        public decimal? ActualDevlDays { get; set; } // ActualDevlDays
        public string UserStoryNo { get; set; } // UserStoryNo (length: 128)
        public int? StoryArea { get; set; } // StoryArea
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public decimal? TotalDevlAmount { get; set; } // TotalDevlAmount
        public System.DateTime? ActualStartDate { get; set; } // ActualStartDate
        public int? Number { get; set; } // Number
        public string StoryDetail { get; set; } // StoryDetail
        public int? RevenueType { get; set; } // RevenueType
        public bool? IsLinkedUserStory { get; set; } // IsLinkedUserStory
        public string ProjectBriefDesc { get; set; } // ProjectBriefDesc
        public int? ProjectCategory { get; set; } // ProjectCategory
        public int? ProjectSpecialty { get; set; } // ProjectSpecialty
        public string ProjectLoad { get; set; } // ProjectLoad (length: 128)
        public string ProjectOwnBy { get; set; } // ProjectOwnBy (length: 128)
        public System.DateTime? ApprovedDate { get; set; } // ApprovedDate
        public string AssignedUsers { get; set; } // AssignedUsers (length: 256)
        public System.DateTime? ReqApprovedDate { get; set; } // ReqApprovedDate
        public int? EvaluationStatus { get; set; } = 1; // EvaluationStatus
        public bool? IsDocumentComplete { get; set; } // IsDocumentComplete
    }


    // PM_DevelopEvaluation
    public partial class PM_DevelopEvaluation : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public System.Guid DevelopmentID { get; set; } // DevelopmentID
        public decimal? DeliveryTimelinessRatio { get; set; } // DeliveryTimelinessRatio
        public decimal? DeliveryTimelinessScore { get; set; } // DeliveryTimelinessScore
        public string DeliveryTimelinessNotes { get; set; } // DeliveryTimelinessNotes (length: 512)
        public decimal? QualityRatio { get; set; } // QualityRatio
        public decimal? QualityScore { get; set; } // QualityScore
        public string QualityNotes { get; set; } // QualityNotes (length: 512)
        public decimal? CustomerSatisfactionRatio { get; set; } // CustomerSatisfactionRatio
        public decimal? CustomerSatisfactionScore { get; set; } // CustomerSatisfactionScore
        public string CustomerSatisfactionNotes { get; set; } // CustomerSatisfactionNotes (length: 512)
        public decimal? FileIntegrityRatio { get; set; } // FileIntegrityRatio
        public decimal? FileIntegrityScore { get; set; } // FileIntegrityScore
        public string FileIntegrityNotes { get; set; } // FileIntegrityNotes (length: 512)
        public decimal? SelfRatio { get; set; } // SelfRatio
        public decimal? SelfScore { get; set; } // SelfScore
        public string SelfNotes { get; set; } // SelfNotes (length: 512)
    }


    // PM_DevelopFile
    public partial class PM_DevelopFile : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid? DevelopID { get; set; } // DevelopID
        public string Name { get; set; } // Name (length: 128)
        public string ServerPath { get; set; } // ServerPath (length: 256)
        public string Comments { get; set; } // Comments (length: 256)
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
    }


    // PM_DevelopQuotation
    public partial class PM_DevelopQuotation : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid? DevelopID { get; set; } // DevelopID
        public string QuotationNo { get; set; } // QuotationNo (length: 128)
        public decimal? LaborCost { get; set; } // LaborCost
        public decimal? RiskFactor { get; set; } // RiskFactor
        public decimal? Headcount { get; set; } // Headcount
        public string TeamLeader { get; set; } // TeamLeader (length: 128)
        public decimal? EstDevlDays { get; set; } // EstDevlDays
        public System.DateTime? QuotationDate { get; set; } // QuotationDate
        public decimal? DevlAmount { get; set; } // DevlAmount
        public string Note { get; set; } // Note
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public int? Division { get; set; } // Division
        public int? PMDQ_Group { get; set; } // PMDQ_Group
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public int? Number { get; set; } // Number
    }


    // PM_DevelopRemarks
    public partial class PM_DevelopRemark : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid? DevelopID { get; set; } // DevelopID
        public string Topic { get; set; } // Topic (length: 512)
        public string Content { get; set; } // Content (length: 1024)
        public int? ShowInQuotation { get; set; } // ShowInQuotation
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
    }


    // PM_DevelopTask
    public partial class PM_DevelopTask : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid DevelopID { get; set; } // DevelopID
        public string BriefDesc { get; set; } // BriefDesc (length: 256)
        public string TaskDetail { get; set; } // TaskDetail (length: 768)
        public int? TaskGroup { get; set; } // TaskGroup
        public System.DateTime? SchedStartDate { get; set; } // SchedStartDate
        public System.DateTime? SchedEndDate { get; set; } // SchedEndDate
        public decimal? TaskEstDevlDays { get; set; } // TaskEstDevlDays
        public System.DateTime? ActStartDate { get; set; } // ActStartDate
        public System.DateTime? ActEndDate { get; set; } // ActEndDate
        public decimal? TaskActDevlDays { get; set; } // TaskActDevlDays
        public decimal? LaborCost { get; set; } // LaborCost
        public decimal? RiskFactor { get; set; } // RiskFactor
        public decimal? Headcount { get; set; } // Headcount
        public decimal? EstWorkingDay { get; set; } // EstWorkingDay
        public decimal? ExtPrice { get; set; } // ExtPrice
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public bool? TaskStatus { get; set; } // TaskStatus
    }


    // PM_Documents
    public partial class PM_Document : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string DevelopID { get; set; } // DevelopID (length: 36)
        public string Name { get; set; } // Name (length: 200)
        public string Notes { get; set; } // Notes (length: 1000)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string CreateBy { get; set; } // CreateBy (length: 100)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateBy { get; set; } // UpdateBy (length: 100)
        public bool? Finished { get; set; } // Finished
        public decimal? Ratio { get; set; } // Ratio
        public decimal? Score { get; set; } // Score
    }


    // PM_DocumentsMaintenance
    public partial class PM_DocumentsMaintenance : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 200)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string CreateBy { get; set; } // CreateBy (length: 100)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateBy { get; set; } // UpdateBy (length: 100)
        public string TemplateFile { get; set; } // TemplateFile (length: 256)
    }


    // PM_EmailTemplate
    public partial class PM_EmailTemplate : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public int? Type { get; set; } // Type
        public string Content { get; set; } // Content (length: 4000)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
    }


    // PM_Expense
    public partial class PM_Expense : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public int? Year { get; set; } // Year
        public string UOM { get; set; } // UOM (length: 50)
        public decimal? OfficeRent { get; set; } // OfficeRent
        public int? Division { get; set; } // Division
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public decimal? FixedAsset { get; set; } // FixedAsset
        public decimal? WaterElectric { get; set; } // WaterElectric
        public decimal? OthersExpense { get; set; } // OthersExpense
        public decimal? Salaries { get; set; } // Salaries
        public decimal? PayrollTax { get; set; } // PayrollTax
        public decimal? Bonus { get; set; } // Bonus
        public decimal? OfficeSupplies { get; set; } // OfficeSupplies
        public decimal? DinnerExpense { get; set; } // DinnerExpense
        public decimal? TelephoneExpense { get; set; } // TelephoneExpense
        public decimal? TravelExpense { get; set; } // TravelExpense
        public decimal? TotalExpense { get; set; } // TotalExpense
        public decimal? LaborExpense { get; set; } // LaborExpense
        public decimal? OfficeExpense { get; set; } // OfficeExpense
        public decimal? DistributionExpense { get; set; } // DistributionExpense
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public int? Month { get; set; } // Month
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
    }


    // PM_ExpenseDivision
    public partial class PM_ExpenseDivision : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 50)
    }


    // PM_Group
    public partial class PM_Group : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
    }


    // PM_GroupMaintenance
    public partial class PM_GroupMaintenance : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string GroupName { get; set; } // GroupName (length: 100)
        public string GroupAltName { get; set; } // GroupAltName (length: 100)
        public string GroupCategory { get; set; } // GroupCategory (length: 100)
        public string GroupTeamLeader { get; set; } // GroupTeamLeader (length: 100)
        public int? GroupStatus { get; set; } // GroupStatus
        public string UpdateBy { get; set; } // UpdateBy (length: 100)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
    }


    // PM_LaborCost
    public partial class PM_LaborCost : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public int? LaborCostTypeID { get; set; } // LaborCostTypeID
        public string Description { get; set; } // Description (length: 1024)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public decimal? AverageSalary { get; set; } // AverageSalary
        public decimal? PayrollTax { get; set; } // PayrollTax
        public decimal? OfficeExpenses { get; set; } // OfficeExpenses
        public decimal? WorkingDays { get; set; } // WorkingDays
        public decimal? TravelExpense { get; set; } // TravelExpense
        public decimal? LaborCost { get; set; } // LaborCost
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public int? Year { get; set; } // Year
        public bool? Status { get; set; } // Status
        public decimal? BusinessTax { get; set; } // BusinessTax
        public decimal? MGTFactor { get; set; } // MGTFactor
    }


    // PM_LaborCostType
    public partial class PM_LaborCostType : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
    }


    // PM_LevelMaintenance
    public partial class PM_LevelMaintenance : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string LevelName { get; set; } // LevelName (length: 64)
        public string ScoreRange { get; set; } // ScoreRange (length: 64)
        public string LevelDesc { get; set; } // LevelDesc (length: 256)
        public string LevelScoreDesc { get; set; } // LevelScoreDesc (length: 64)
        public string AltLevelDesc { get; set; } // AltLevelDesc (length: 256)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 64)
        public string CreatedBy { get; set; } // CreatedBy (length: 64)

        // Reverse navigation

        /// <summary>
        /// Child PM_SubLevelMaintenances where [PM_SubLevelMaintenance].[SubLevelID] point to this entity (FK__PM_SubLev__SubLe__56E8E7AB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PM_SubLevelMaintenance> PM_SubLevelMaintenances { get; set; } = new System.Collections.Generic.List<PM_SubLevelMaintenance>(); // PM_SubLevelMaintenance.FK__PM_SubLev__SubLe__56E8E7AB
    }


    // PM_MaintenanceQuotation
    public partial class PM_MaintenanceQuotation : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public int? MaintenanceType { get; set; } // MaintenanceType
        public int? Year { get; set; } // Year
        public int? Status { get; set; } // Status
        public string MaintenanceID { get; set; } // MaintenanceID (length: 128)
        public int? Customer { get; set; } // Customer
        public string ApprovedBy { get; set; } // ApprovedBy (length: 128)
        public int? PMMQ_System { get; set; } // PMMQ_System
        public int? PMMQ_Division { get; set; } // PMMQ_Division
        public int? PMMQ_Group { get; set; } // PMMQ_Group
        public decimal? PMMQ_Load { get; set; } // PMMQ_Load
        public decimal? Headcount { get; set; } // Headcount
        public System.DateTime? QuotationDate { get; set; } // QuotationDate
        public System.DateTime? StartDate { get; set; } // StartDate
        public System.DateTime? EndDate { get; set; } // EndDate
        public decimal? MaintenanceAmt { get; set; } // MaintenanceAmt
        public string Notes { get; set; } // Notes
        public decimal? MaintenanceDays { get; set; } // MaintenanceDays
        public decimal? LaborCost { get; set; } // LaborCost
        public decimal? SalesTotal { get; set; } // SalesTotal
        public decimal? AdjustmentFactor { get; set; } // AdjustmentFactor
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 50)
        public int? Number { get; set; } // Number
        public int? RevenueType { get; set; } // RevenueType
        public string ProjectName { get; set; } // ProjectName (length: 512)
    }


    // PM_MaintennanceCustomer
    public partial class PM_MaintennanceCustomer : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 50)
    }


    // PM_MaintennanceStatus
    public partial class PM_MaintennanceStatu : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
        public int? Value { get; set; } // Value
    }


    // PM_MaintennanceType
    public partial class PM_MaintennanceType : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
    }


    // PM_ProjectGlossary
    public partial class PM_ProjectGlossary : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 256)
        public int? Status { get; set; } // Status
        public int? Type { get; set; } // Type
        public string ProjectCategory { get; set; } // ProjectCategory (length: 128)
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
    }


    // PM_ProjectGlossaryContent
    public partial class PM_ProjectGlossaryContent : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid? GlossaryID { get; set; } // GlossaryID
        public string SubjectName { get; set; } // SubjectName (length: 128)
        public string AlterSubjectName { get; set; } // AlterSubjectName (length: 256)
        public decimal? Ratio { get; set; } // Ratio
        public int? OrderIndex { get; set; } // OrderIndex
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
    }


    // PM_ProjectManager
    public partial class PM_ProjectManager : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
    }


    // PM_ProjectQuotation
    public partial class PM_ProjectQuotation : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid? DevelopID { get; set; } // DevelopID
        public int? Status { get; set; } // Status
        public decimal? QuotationAmount { get; set; } // QuotationAmount
        public string ApprovedBy { get; set; } // ApprovedBy (length: 128)
        public System.DateTime? ApprovedDate { get; set; } // ApprovedDate
        public decimal? ApprovedAmount { get; set; } // ApprovedAmount
        public int? QuoteType { get; set; } // QuoteType
        public string FeeName { get; set; } // FeeName (length: 128)
        public string PaymentTerms { get; set; } // PaymentTerms (length: 512)
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
    }


    // PM_QuotationOtherFee
    public partial class PM_QuotationOtherFee : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string DevelopQuotationID { get; set; } // DevelopQuotationID (length: 36)
        public string Description { get; set; } // Description (length: 200)
        public decimal? Amount { get; set; } // Amount
        public string Notes { get; set; } // Notes (length: 1000)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string CreateBy { get; set; } // CreateBy (length: 200)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateBy { get; set; } // UpdateBy (length: 200)
    }


    // PM_QuotationPayment
    public partial class PM_QuotationPayment : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public System.Guid? DevelopQuotationID { get; set; } // DevelopQuotationID
        public string PaymentNo { get; set; } // PaymentNo (length: 200)
        public decimal? Ratio { get; set; } // Ratio
        public decimal? IssuedAmt { get; set; } // IssuedAmt
        public System.DateTime? PayDueDate { get; set; } // PayDueDate
        public bool? Paid { get; set; } // Paid
        public System.DateTime? ReceivedDate { get; set; } // ReceivedDate
        public string Notes { get; set; } // Notes (length: 1000)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string CreateBy { get; set; } // CreateBy (length: 200)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateBy { get; set; } // UpdateBy (length: 200)
        public decimal? DeductionAmt { get; set; } // DeductionAmt
    }


    // PM_QuotationRemark
    public partial class PM_QuotationRemark : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string DevelopQuotationID { get; set; } // DevelopQuotationID (length: 36)
        public string Topic { get; set; } // Topic (length: 200)
        public bool? ShowInQuotation { get; set; } // ShowInQuotation
        public string Content { get; set; } // Content (length: 1000)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string CreateBy { get; set; } // CreateBy (length: 200)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateBy { get; set; } // UpdateBy (length: 200)
    }


    // PM_QuoteByHeadCount
    public partial class PM_QuoteByHeadCount : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid QuoteID { get; set; } // QuoteID
        public string BriefDesc { get; set; } // BriefDesc (length: 128)
        public decimal? HeadCount { get; set; } // HeadCount
        public decimal? ExtPrice { get; set; } // ExtPrice
        public decimal? CostManday { get; set; } // CostManday
        public decimal? WorkingDays { get; set; } // WorkingDays
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
    }


    // PM_QuoteByProjectCost
    public partial class PM_QuoteByProjectCost : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid QuoteID { get; set; } // QuoteID
        public string BriefDesc { get; set; } // BriefDesc (length: 256)
        public string Group { get; set; } // Group (length: 128)
        public decimal? EstWorkLoad { get; set; } // EstWorkLoad
        public decimal? CostManday { get; set; } // CostManday
        public decimal? LoadPercent { get; set; } // LoadPercent
        public decimal? WorkLoadManday { get; set; } // WorkLoadManday
        public decimal? ExtPrice { get; set; } // ExtPrice
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
    }


    // PM_QuoteBySaleRevenue
    public partial class PM_QuoteBySaleRevenue : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid QuoteID { get; set; } // QuoteID
        public decimal? LicenseFee { get; set; } // LicenseFee
        public decimal? Ratio { get; set; } // Ratio
        public decimal? TotalAmt { get; set; } // TotalAmt
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
    }


    // PM_RevenueType
    public partial class PM_RevenueType : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
    }


    // PM_RunningAccount
    public partial class PM_RunningAccount : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string PaymentNo { get; set; } // PaymentNo (length: 64)
        public int? CurrentStep { get; set; } // CurrentStep
        public int? Customer { get; set; } // Customer
        public decimal? ReceivedAmt { get; set; } // ReceivedAmt
        public System.DateTime? ReceivedDate { get; set; } // ReceivedDate
        public string Notes { get; set; } // Notes (length: 256)
        public System.DateTime? CreateDate { get; set; } // CreateDate
        public string CreateBy { get; set; } // CreateBy (length: 64)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
        public string UpdateBy { get; set; } // UpdateBy (length: 64)
    }


    // PM_StoryArea
    public partial class PM_StoryArea : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
    }


    // PM_SubLevelMaintenance
    public partial class PM_SubLevelMaintenance : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public int SubLevelID { get; set; } // SubLevelID
        public string SubLevelName { get; set; } // SubLevelName (length: 64)
        public decimal? SubLevelScroe { get; set; } // SubLevelScroe

        // Foreign keys

        /// <summary>
        /// Parent PM_LevelMaintenance pointed by [PM_SubLevelMaintenance].([SubLevelID]) (FK__PM_SubLev__SubLe__56E8E7AB)
        /// </summary>
        public virtual PM_LevelMaintenance PM_LevelMaintenance { get; set; } // FK__PM_SubLev__SubLe__56E8E7AB
    }


    // PM_System
    public partial class PM_System : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? DisplayOrder { get; set; } // DisplayOrder
        public bool? IsHide { get; set; } // IsHide
    }


    // PM_SystemMaintenance
    public partial class PM_SystemMaintenance : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string FullName { get; set; } // FullName (length: 200)
        public string ShortName { get; set; } // ShortName (length: 150)
        public int? Status { get; set; } // Status
        public string OnlineAddress { get; set; } // OnlineAddress (length: 500)
        public string TestAddress { get; set; } // TestAddress (length: 500)
        public string IntegratedTestAddress { get; set; } // IntegratedTestAddress (length: 500)
        public string Notes { get; set; } // Notes (length: 1000)
        public string UpdateBy { get; set; } // UpdateBy (length: 100)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate
    }


    // PM_TemplateSetting
    public partial class PM_TemplateSetting : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string TemplateName { get; set; } // TemplateName (length: 200)
        public int? Status { get; set; } // Status
        public string UpdateBy { get; set; } // UpdateBy (length: 100)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate

        // Reverse navigation

        /// <summary>
        /// Child PM_TemplateSettingAttaches where [PM_TemplateSettingAttach].[TemplateSettingID] point to this entity (FK__PM_Templa__Templ__19DFD96B)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PM_TemplateSettingAttach> PM_TemplateSettingAttaches { get; set; } = new System.Collections.Generic.List<PM_TemplateSettingAttach>(); // PM_TemplateSettingAttach.FK__PM_Templa__Templ__19DFD96B
    }


    // PM_TemplateSettingAttach
    public partial class PM_TemplateSettingAttach : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public int TemplateSettingID { get; set; } // TemplateSettingID
        public string BriefDesc { get; set; } // BriefDesc (length: 500)
        public string TaskDetail { get; set; } // TaskDetail (length: 500)
        public string UpdateBy { get; set; } // UpdateBy (length: 100)
        public System.DateTime? UpdateDate { get; set; } // UpdateDate

        // Foreign keys

        /// <summary>
        /// Parent PM_TemplateSetting pointed by [PM_TemplateSettingAttach].([TemplateSettingID]) (FK__PM_Templa__Templ__19DFD96B)
        /// </summary>
        public virtual PM_TemplateSetting PM_TemplateSetting { get; set; } // FK__PM_Templa__Templ__19DFD96B
    }


    // PM_TransactionHistory
    public partial class PM_TransactionHistory : IDbEntity
    {
        public int TransactionHistoryID { get; set; } // TransactionHistoryID (Primary key)
        public string FromValue { get; set; } // FromValue (length: 1000)
        public string ToValue { get; set; } // ToValue (length: 1000)
        public string ChangeDesc { get; set; } // ChangeDesc (length: 2100)
        public System.DateTime? ChangeDate { get; set; } // ChangeDate
        public string ChangeBy { get; set; } // ChangeBy (length: 100)
        public string SubjectID { get; set; } // SubjectID (length: 50)
        public string SubjectNo { get; set; } // SubjectNo (length: 200)
    }


    // PM_TransactionHistoryInstead
    public partial class PM_TransactionHistoryInstead : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string PM_Key { get; set; } // PM_Key (length: 50)
        public int? Value { get; set; } // Value
        public string PM_Content { get; set; } // PM_Content (length: 100)
    }


    // PM_User
    public partial class PM_User : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string UserName { get; set; } // UserName (length: 128)
        public string Password { get; set; } // Password (length: 128)
    }


    // PM_UserTask
    public partial class PM_UserTask : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public int UserID { get; set; } // UserID
        public System.Guid DevelopID { get; set; } // DevelopID
        public System.Guid TaskID { get; set; } // TaskID
        public decimal? WoringHour { get; set; } // WoringHour
        public string Note { get; set; } // Note (length: 256)
        public System.DateTime? BeginDate { get; set; } // BeginDate
        public System.DateTime? EndDate { get; set; } // EndDate
    }


    // The table 'v_DevelopmentIncome' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // v_DevelopmentIncome
    public partial class v_DevelopmentIncome : IDbEntity
    {
        public decimal? DevelopmentIncome { get; set; } // DevelopmentIncome
        public int? year { get; set; } // year
    }


    // V_DevelopmentQuotation
    public partial class V_DevelopmentQuotation : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public string ProjectID { get; set; } // ProjectID (length: 128)
        public int? Year { get; set; } // Year
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public int? Customer { get; set; } // Customer
        public System.DateTime? EstStartDate { get; set; } // EstStartDate
        public int? System { get; set; } // System
        public string ApprovedBy { get; set; } // ApprovedBy (length: 128)
        public System.DateTime? EstEndDate { get; set; } // EstEndDate
        public int? ProjectManager { get; set; } // ProjectManager
        public string KeyUser { get; set; } // KeyUser (length: 128)
        public System.DateTime? ActualEndDate { get; set; } // ActualEndDate
        public decimal? TotalHeadcount { get; set; } // TotalHeadcount
        public int? Status { get; set; } // Status
        public decimal? EstDevlDays { get; set; } // EstDevlDays
        public decimal? ActualDevlDays { get; set; } // ActualDevlDays
        public string UserStoryNo { get; set; } // UserStoryNo (length: 128)
        public int? StoryArea { get; set; } // StoryArea
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public decimal? TotalDevlAmount { get; set; } // TotalDevlAmount
        public System.DateTime? ActualStartDate { get; set; } // ActualStartDate
        public int? Number { get; set; } // Number
        public string StoryDetail { get; set; } // StoryDetail
        public int? RevenueType { get; set; } // RevenueType
        public bool? IsLinkedUserStory { get; set; } // IsLinkedUserStory
        public string ProjectBriefDesc { get; set; } // ProjectBriefDesc
        public int? ProjectCategory { get; set; } // ProjectCategory
        public int? ProjectSpecialty { get; set; } // ProjectSpecialty
        public string ProjectLoad { get; set; } // ProjectLoad (length: 128)
        public string ProjectOwnBy { get; set; } // ProjectOwnBy (length: 128)
        public System.DateTime? ApprovedDate { get; set; } // ApprovedDate
        public string AssignedUsers { get; set; } // AssignedUsers (length: 256)
        public System.DateTime? ReqApprovedDate { get; set; } // ReqApprovedDate
        public int? EvaluationStatus { get; set; } // EvaluationStatus
        public bool? IsDocumentComplete { get; set; } // IsDocumentComplete
        public string MaintennanceStatusName { get; set; } // MaintennanceStatusName (length: 50)
        public string MaintennanceCustomerName { get; set; } // MaintennanceCustomerName (length: 50)
        public string SystemName { get; set; } // SystemName (length: 150)
        public string StoryAreaName { get; set; } // StoryAreaName (length: 50)
        public string ProjectManagerName { get; set; } // ProjectManagerName (length: 50)
    }


    // V_EvaluationList
    public partial class V_EvaluationList : IDbEntity
    {
        public int ID { get; set; } // ID (Primary key)
        public string DevelopmentID { get; set; } // DevelopmentID (Primary key) (length: 36)
        public int? Type { get; set; } // Type
        public string Glossary { get; set; } // Glossary (length: 36)
        public string EmailSubject { get; set; } // EmailSubject (length: 2000)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 200)
        public string EmailTo { get; set; } // EmailTo (length: 2000)
        public string EmailUserName { get; set; } // EmailUserName (length: 1000)
        public string EvaluationStatusName { get; set; } // EvaluationStatusName (Primary key) (length: 9)
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public decimal? score { get; set; } // score
    }


    // V_EvaluationView
    public partial class V_EvaluationView : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public string ProjectID { get; set; } // ProjectID (length: 128)
        public int? Year { get; set; } // Year
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public int? Customer { get; set; } // Customer
        public System.DateTime? EstStartDate { get; set; } // EstStartDate
        public int? System { get; set; } // System
        public string ApprovedBy { get; set; } // ApprovedBy (length: 128)
        public System.DateTime? EstEndDate { get; set; } // EstEndDate
        public int? ProjectManager { get; set; } // ProjectManager
        public string KeyUser { get; set; } // KeyUser (length: 128)
        public System.DateTime? ActualEndDate { get; set; } // ActualEndDate
        public decimal? TotalHeadcount { get; set; } // TotalHeadcount
        public int? Status { get; set; } // Status
        public decimal? EstDevlDays { get; set; } // EstDevlDays
        public decimal? ActualDevlDays { get; set; } // ActualDevlDays
        public string UserStoryNo { get; set; } // UserStoryNo (length: 128)
        public int? StoryArea { get; set; } // StoryArea
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public decimal? TotalDevlAmount { get; set; } // TotalDevlAmount
        public System.DateTime? ActualStartDate { get; set; } // ActualStartDate
        public int? Number { get; set; } // Number
        public string StoryDetail { get; set; } // StoryDetail
        public int? RevenueType { get; set; } // RevenueType
        public bool? IsLinkedUserStory { get; set; } // IsLinkedUserStory
        public string ProjectBriefDesc { get; set; } // ProjectBriefDesc
        public int? ProjectCategory { get; set; } // ProjectCategory
        public int? ProjectSpecialty { get; set; } // ProjectSpecialty
        public string ProjectLoad { get; set; } // ProjectLoad (length: 128)
        public string ProjectOwnBy { get; set; } // ProjectOwnBy (length: 128)
        public System.DateTime? ApprovedDate { get; set; } // ApprovedDate
        public string AssignedUsers { get; set; } // AssignedUsers (length: 256)
        public System.DateTime? ReqApprovedDate { get; set; } // ReqApprovedDate
        public int? EvaluationStatus { get; set; } // EvaluationStatus
        public bool? IsDocumentComplete { get; set; } // IsDocumentComplete
        public int? Type { get; set; } // Type
        public string Glossary { get; set; } // Glossary (length: 36)
        public string EmailUserName { get; set; } // EmailUserName (length: 1000)
        public string EmailTo { get; set; } // EmailTo (length: 2000)
        public int? EmailToID { get; set; } // EmailToID
        public string PeopleEvaluationProjStatus { get; set; } // PeopleEvaluationProjStatus (Primary key) (length: 9)
        public string ProjectManagerName { get; set; } // ProjectManagerName (length: 50)
    }


    // V_Expense
    public partial class V_Expense : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public int? Year { get; set; } // Year
        public string UOM { get; set; } // UOM (length: 50)
        public decimal? OfficeRent { get; set; } // OfficeRent
        public int? Division { get; set; } // Division
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public decimal? FixedAsset { get; set; } // FixedAsset
        public decimal? WaterElectric { get; set; } // WaterElectric
        public decimal? OthersExpense { get; set; } // OthersExpense
        public decimal? Salaries { get; set; } // Salaries
        public decimal? PayrollTax { get; set; } // PayrollTax
        public decimal? Bonus { get; set; } // Bonus
        public decimal? OfficeSupplies { get; set; } // OfficeSupplies
        public decimal? DinnerExpense { get; set; } // DinnerExpense
        public decimal? TelephoneExpense { get; set; } // TelephoneExpense
        public decimal? TravelExpense { get; set; } // TravelExpense
        public decimal? TotalExpense { get; set; } // TotalExpense
        public decimal? LaborExpense { get; set; } // LaborExpense
        public decimal? OfficeExpense { get; set; } // OfficeExpense
        public decimal? DistributionExpense { get; set; } // DistributionExpense
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public int? Month { get; set; } // Month
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string Name { get; set; } // Name (length: 50)
    }


    // V_GlossaryScore
    public partial class V_GlossaryScore : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid? GlossaryID { get; set; } // GlossaryID
        public string SubjectName { get; set; } // SubjectName (length: 128)
        public string AlterSubjectName { get; set; } // AlterSubjectName (length: 256)
        public decimal? Ratio { get; set; } // Ratio
        public int? OrderIndex { get; set; } // OrderIndex
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public int? Score { get; set; } // Score
        public int? EvaluationDetail_ID { get; set; } // EvaluationDetail_ID
    }


    // V_LaborCost
    public partial class V_LaborCost : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public int? LaborCostTypeID { get; set; } // LaborCostTypeID
        public string Description { get; set; } // Description (length: 1024)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public decimal? AverageSalary { get; set; } // AverageSalary
        public decimal? PayrollTax { get; set; } // PayrollTax
        public decimal? OfficeExpenses { get; set; } // OfficeExpenses
        public decimal? WorkingDays { get; set; } // WorkingDays
        public decimal? TravelExpense { get; set; } // TravelExpense
        public decimal? LaborCost { get; set; } // LaborCost
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public int? Year { get; set; } // Year
        public bool? Status { get; set; } // Status
        public decimal? BusinessTax { get; set; } // BusinessTax
        public decimal? MGTFactor { get; set; } // MGTFactor
        public string Name { get; set; } // Name (length: 50)
    }


    // The table 'v_MaintenanceIncome' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // v_MaintenanceIncome
    public partial class v_MaintenanceIncome : IDbEntity
    {
        public decimal? MaintenanceIncome { get; set; } // MaintenanceIncome
        public int? year { get; set; } // year
    }


    // V_MaintenanceQuotation
    public partial class V_MaintenanceQuotation : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public int? MaintenanceType { get; set; } // MaintenanceType
        public int? Year { get; set; } // Year
        public int? Status { get; set; } // Status
        public string MaintenanceID { get; set; } // MaintenanceID (length: 128)
        public int? Customer { get; set; } // Customer
        public string ApprovedBy { get; set; } // ApprovedBy (length: 128)
        public int? PMMQ_System { get; set; } // PMMQ_System
        public int? PMMQ_Division { get; set; } // PMMQ_Division
        public int? PMMQ_Group { get; set; } // PMMQ_Group
        public decimal? PMMQ_Load { get; set; } // PMMQ_Load
        public decimal? Headcount { get; set; } // Headcount
        public System.DateTime? QuotationDate { get; set; } // QuotationDate
        public System.DateTime? StartDate { get; set; } // StartDate
        public System.DateTime? EndDate { get; set; } // EndDate
        public decimal? MaintenanceAmt { get; set; } // MaintenanceAmt
        public string Notes { get; set; } // Notes
        public decimal? MaintenanceDays { get; set; } // MaintenanceDays
        public decimal? LaborCost { get; set; } // LaborCost
        public decimal? SalesTotal { get; set; } // SalesTotal
        public decimal? AdjustmentFactor { get; set; } // AdjustmentFactor
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 50)
        public int? Number { get; set; } // Number
        public int? RevenueType { get; set; } // RevenueType
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public string MaintenanceTypeName { get; set; } // MaintenanceTypeName (length: 50)
        public string MaintennanceStatusName { get; set; } // MaintennanceStatusName (length: 50)
        public string MaintennanceCustomerName { get; set; } // MaintennanceCustomerName (length: 50)
        public string SystemName { get; set; } // SystemName (length: 50)
        public string DivisionName { get; set; } // DivisionName (length: 50)
        public string GroupName { get; set; } // GroupName (length: 50)
    }


    // V_PaymentProcess
    public partial class V_PaymentProcess : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public string ProjectID { get; set; } // ProjectID (length: 128)
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public decimal? ApprovedAmount { get; set; } // ApprovedAmount
        public int? System { get; set; } // System
        public int? Customer { get; set; } // Customer
        public decimal? TotalPaidAmt { get; set; } // TotalPaidAmt
        public decimal? TotalUnpaidAmt { get; set; } // TotalUnpaidAmt
        public decimal? TotalDeductionAmt { get; set; } // TotalDeductionAmt
        public int? ProjectCategory { get; set; } // ProjectCategory
        public int? ProjectSpecialty { get; set; } // ProjectSpecialty
        public int? ProjectManager { get; set; } // ProjectManager
        public string ProjectManagerName { get; set; } // ProjectManagerName (length: 50)
        public int? Year { get; set; } // Year
    }


    // V_ProfitLossReport
    public partial class V_ProfitLossReport : IDbEntity
    {
        public int year { get; set; } // year (Primary key)
        public decimal? DevelopmentIncome { get; set; } // DevelopmentIncome
        public decimal? MaintenanceIncome { get; set; } // MaintenanceIncome
        public decimal? TotalCost { get; set; } // TotalCost
        public decimal? Profit { get; set; } // Profit
    }


    // V_ProjectEvaluation
    public partial class V_ProjectEvaluation : IDbEntity
    {
        public int? TotalCount { get; set; } // TotalCount
        public int? CompletedCount { get; set; } // CompletedCount
        public System.Guid ID { get; set; } // ID (Primary key)
        public string ProjectID { get; set; } // ProjectID (length: 128)
        public int? Year { get; set; } // Year
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public int? Customer { get; set; } // Customer
        public System.DateTime? EstStartDate { get; set; } // EstStartDate
        public int? System { get; set; } // System
        public string ApprovedBy { get; set; } // ApprovedBy (length: 128)
        public System.DateTime? EstEndDate { get; set; } // EstEndDate
        public int? ProjectManager { get; set; } // ProjectManager
        public string KeyUser { get; set; } // KeyUser (length: 128)
        public System.DateTime? ActualEndDate { get; set; } // ActualEndDate
        public decimal? TotalHeadcount { get; set; } // TotalHeadcount
        public int? Status { get; set; } // Status
        public decimal? EstDevlDays { get; set; } // EstDevlDays
        public decimal? ActualDevlDays { get; set; } // ActualDevlDays
        public string UserStoryNo { get; set; } // UserStoryNo (length: 128)
        public int? StoryArea { get; set; } // StoryArea
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public decimal? TotalDevlAmount { get; set; } // TotalDevlAmount
        public System.DateTime? ActualStartDate { get; set; } // ActualStartDate
        public int? Number { get; set; } // Number
        public string StoryDetail { get; set; } // StoryDetail
        public int? RevenueType { get; set; } // RevenueType
        public bool? IsLinkedUserStory { get; set; } // IsLinkedUserStory
        public string ProjectBriefDesc { get; set; } // ProjectBriefDesc
        public int? ProjectCategory { get; set; } // ProjectCategory
        public int? ProjectSpecialty { get; set; } // ProjectSpecialty
        public string ProjectLoad { get; set; } // ProjectLoad (length: 128)
        public string ProjectOwnBy { get; set; } // ProjectOwnBy (length: 128)
        public System.DateTime? ApprovedDate { get; set; } // ApprovedDate
        public string AssignedUsers { get; set; } // AssignedUsers (length: 256)
        public System.DateTime? ReqApprovedDate { get; set; } // ReqApprovedDate
        public int? EvaluationStatus { get; set; } // EvaluationStatus
        public bool? IsDocumentComplete { get; set; } // IsDocumentComplete
        public string EvaluationStatusName { get; set; } // EvaluationStatusName (Primary key) (length: 9)
        public string ManagerName { get; set; } // ManagerName (length: 50)
        public decimal? SelfScore { get; set; } // SelfScore
        public decimal? CustomerScore { get; set; } // CustomerScore
    }


    // V_ProjectQuotation
    public partial class V_ProjectQuotation : IDbEntity
    {
        public System.Guid? ID { get; set; } // ID
        public System.Guid QuotationID { get; set; } // QuotationID (Primary key)
        public string ProjectID { get; set; } // ProjectID (length: 128)
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public int? ProjectCategory { get; set; } // ProjectCategory
        public int? ProjectSpecialty { get; set; } // ProjectSpecialty
        public int? ProjectManager { get; set; } // ProjectManager
        public string ProjectManagerName { get; set; } // ProjectManagerName (length: 50)
        public int? Year { get; set; } // Year
        public int? Customer { get; set; } // Customer
        public string CustomerName { get; set; } // CustomerName (length: 50)
        public string KeyUser { get; set; } // KeyUser (length: 128)
        public int? System { get; set; } // System
        public string SystemName { get; set; } // SystemName (length: 150)
        public int? Status { get; set; } // Status
        public string StatusName { get; set; } // StatusName (length: 50)
        public decimal? QuotationAmount { get; set; } // QuotationAmount
        public decimal? ApprovedAmount { get; set; } // ApprovedAmount
        public int? QuotationStatus { get; set; } // QuotationStatus
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
    }


    // V_ProjectSummaryReport
    public partial class V_ProjectSummaryReport : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public int? ProjectCategory { get; set; } // ProjectCategory
        public string ProjectManagerName { get; set; } // ProjectManagerName (length: 50)
        public int? ProjectManager { get; set; } // ProjectManager
        public string KeyUser { get; set; } // KeyUser (length: 128)
        public int? Year { get; set; } // Year
        public decimal? Score { get; set; } // Score
        public string ProjectID { get; set; } // ProjectID (length: 128)
        public System.DateTime? EstEndDate { get; set; } // EstEndDate
        public System.DateTime? ActualEndDate { get; set; } // ActualEndDate
        public decimal? EstDevlDays { get; set; } // EstDevlDays
        public decimal? ActualDevlDays { get; set; } // ActualDevlDays
        public decimal? QuotationAmount { get; set; } // QuotationAmount
        public decimal? ApprovedAmount { get; set; } // ApprovedAmount
        public decimal? DeliveryTimelinessScore { get; set; } // DeliveryTimelinessScore
        public decimal? QualityScore { get; set; } // QualityScore
        public decimal? CustomerSatisfactionScore { get; set; } // CustomerSatisfactionScore
        public decimal? FileIntegrityScore { get; set; } // FileIntegrityScore
        public decimal? SelfScore { get; set; } // SelfScore
        public decimal? TotalScore { get; set; } // TotalScore
        public string MaintennanceStatusName { get; set; } // MaintennanceStatusName (length: 50)
    }


    // V_Quotation
    public partial class V_Quotation : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid? DevelopID { get; set; } // DevelopID
        public string QuotationNo { get; set; } // QuotationNo (length: 128)
        public decimal? LaborCost { get; set; } // LaborCost
        public decimal? RiskFactor { get; set; } // RiskFactor
        public decimal? Headcount { get; set; } // Headcount
        public string TeamLeader { get; set; } // TeamLeader (length: 128)
        public decimal? EstDevlDays { get; set; } // EstDevlDays
        public System.DateTime? QuotationDate { get; set; } // QuotationDate
        public decimal? DevlAmount { get; set; } // DevlAmount
        public string Note { get; set; } // Note
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public int? Division { get; set; } // Division
        public int? PMDQ_Group { get; set; } // PMDQ_Group
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public int? Number { get; set; } // Number
        public string GroupName { get; set; } // GroupName (length: 50)
        public string DivisionrName { get; set; } // DivisionrName (length: 50)
    }


    // The table 'V_QuotationDivision' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // V_QuotationDivision
    public partial class V_QuotationDivision : IDbEntity
    {
        public System.Guid? DevelopID { get; set; } // DevelopID
        public string DivisionList { get; set; } // DivisionList
    }


    // V_RevenueOutlook
    public partial class V_RevenueOutlook : IDbEntity
    {
        public string ProjectID { get; set; } // ProjectID (Primary key) (length: 128)
        public int? ProjectCategory { get; set; } // ProjectCategory
        public string ProjectName { get; set; } // ProjectName (length: 512)
        public decimal? TotalDevlAmount { get; set; } // TotalDevlAmount
        public int? Year { get; set; } // Year
        public string SystemName { get; set; } // SystemName (length: 150)
        public string CustomerName { get; set; } // CustomerName (length: 50)
    }


    // V_SumDevelopQuotation
    public partial class V_SumDevelopQuotation : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public decimal? TotalHeadcount { get; set; } // TotalHeadcount
        public decimal? TotalDevlAmount { get; set; } // TotalDevlAmount
    }


    // V_Task
    public partial class V_Task : IDbEntity
    {
        public System.Guid ID { get; set; } // ID (Primary key)
        public System.Guid DevelopID { get; set; } // DevelopID (Primary key)
        public string BriefDesc { get; set; } // BriefDesc (length: 256)
        public string TaskDetail { get; set; } // TaskDetail (length: 256)
        public int? TaskGroup { get; set; } // TaskGroup
        public System.DateTime? SchedStartDate { get; set; } // SchedStartDate
        public System.DateTime? SchedEndDate { get; set; } // SchedEndDate
        public decimal? TaskEstDevlDays { get; set; } // TaskEstDevlDays
        public System.DateTime? ActStartDate { get; set; } // ActStartDate
        public System.DateTime? ActEndDate { get; set; } // ActEndDate
        public decimal? TaskActDevlDays { get; set; } // TaskActDevlDays
        public decimal? LaborCost { get; set; } // LaborCost
        public decimal? RiskFactor { get; set; } // RiskFactor
        public decimal? Headcount { get; set; } // Headcount
        public decimal? EstWorkingDay { get; set; } // EstWorkingDay
        public decimal? ExtPrice { get; set; } // ExtPrice
        public string CreatedBy { get; set; } // CreatedBy (length: 128)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 128)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public bool? TaskStatus { get; set; } // TaskStatus
        public string GroupName { get; set; } // GroupName (length: 100)
    }


    // The table 'v_TotalCost' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // v_TotalCost
    public partial class v_TotalCost : IDbEntity
    {
        public decimal? TotalCost { get; set; } // TotalCost
        public int? YEAR { get; set; } // YEAR
    }

    #endregion

}
// </auto-generated>

